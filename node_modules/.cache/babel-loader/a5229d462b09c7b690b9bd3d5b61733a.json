{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\nimport TextEditor from './text-editor-class';\nimport ConstructorMethods from '../../shared/constructor-methods';\nexport default {\n  name: 'textEditor',\n  params: {\n    textEditor: {\n      el: null,\n      mode: 'toolbar',\n      // or 'popover'\n      value: undefined,\n      // will use html content\n      customButtons: null,\n      buttons: [['bold', 'italic', 'underline', 'strikeThrough'], ['orderedList', 'unorderedList'], ['link', 'image'], ['paragraph', 'h1', 'h2', 'h3'], ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify'], ['subscript', 'superscript'], ['indent', 'outdent']],\n      dividers: true,\n      imageUrlText: 'Insert image URL',\n      linkUrlText: 'Insert link URL',\n      placeholder: null,\n      clearFormattingOnPaste: true\n    }\n  },\n  create: function create() {\n    var app = this;\n    app.textEditor = extend(ConstructorMethods({\n      defaultSelector: '.text-editor',\n      constructor: TextEditor,\n      app: app,\n      domProp: 'f7TextEditor'\n    }));\n  },\n  static: {\n    TextEditor: TextEditor\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      $(tabEl).find('.text-editor-init').each(function (editorEl) {\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      $(tabEl).find('.text-editor-init').each(function (editorEl) {\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.text-editor-init').each(function (editorEl) {\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      page.$el.find('.text-editor-init').each(function (editorEl) {\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      });\n    }\n  },\n  vnode: {\n    'text-editor-init': {\n      insert: function insert(vnode) {\n        var app = this;\n        var editorEl = vnode.elm;\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      },\n      destroy: function destroy(vnode) {\n        var editorEl = vnode.elm;\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      }\n    }\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/text-editor/text-editor.js"],"names":["$","extend","TextEditor","ConstructorMethods","name","params","textEditor","el","mode","value","undefined","customButtons","buttons","dividers","imageUrlText","linkUrlText","placeholder","clearFormattingOnPaste","create","app","defaultSelector","constructor","domProp","static","on","tabMounted","tabEl","find","each","editorEl","dataset","tabBeforeRemove","f7TextEditor","destroy","pageInit","page","$el","pageBeforeRemove","vnode","insert","elm"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\nimport TextEditor from './text-editor-class';\nimport ConstructorMethods from '../../shared/constructor-methods';\nexport default {\n  name: 'textEditor',\n  params: {\n    textEditor: {\n      el: null,\n      mode: 'toolbar',\n      // or 'popover'\n      value: undefined,\n      // will use html content\n      customButtons: null,\n      buttons: [['bold', 'italic', 'underline', 'strikeThrough'], ['orderedList', 'unorderedList'], ['link', 'image'], ['paragraph', 'h1', 'h2', 'h3'], ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify'], ['subscript', 'superscript'], ['indent', 'outdent']],\n      dividers: true,\n      imageUrlText: 'Insert image URL',\n      linkUrlText: 'Insert link URL',\n      placeholder: null,\n      clearFormattingOnPaste: true\n    }\n  },\n  create: function create() {\n    var app = this;\n    app.textEditor = extend(ConstructorMethods({\n      defaultSelector: '.text-editor',\n      constructor: TextEditor,\n      app: app,\n      domProp: 'f7TextEditor'\n    }));\n  },\n  static: {\n    TextEditor: TextEditor\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      $(tabEl).find('.text-editor-init').each(function (editorEl) {\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      $(tabEl).find('.text-editor-init').each(function (editorEl) {\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.text-editor-init').each(function (editorEl) {\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      page.$el.find('.text-editor-init').each(function (editorEl) {\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      });\n    }\n  },\n  vnode: {\n    'text-editor-init': {\n      insert: function insert(vnode) {\n        var app = this;\n        var editorEl = vnode.elm;\n        var dataset = $(editorEl).dataset();\n        app.textEditor.create(extend({\n          el: editorEl\n        }, dataset || {}));\n      },\n      destroy: function destroy(vnode) {\n        var editorEl = vnode.elm;\n        if (editorEl.f7TextEditor) editorEl.f7TextEditor.destroy();\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}