{"ast":null,"code":"function processQueue(router, routerQueue, routeQueue, to, from, resolve, _reject, direction) {\n  var queue = [];\n\n  if (Array.isArray(routeQueue)) {\n    queue.push.apply(queue, routeQueue);\n  } else if (routeQueue && typeof routeQueue === 'function') {\n    queue.push(routeQueue);\n  }\n\n  if (routerQueue) {\n    if (Array.isArray(routerQueue)) {\n      queue.push.apply(queue, routerQueue);\n    } else {\n      queue.push(routerQueue);\n    }\n  }\n\n  function next() {\n    if (queue.length === 0) {\n      resolve();\n      return;\n    }\n\n    var queueItem = queue.shift();\n    queueItem.call(router, {\n      router: router,\n      to: to,\n      from: from,\n      resolve: function resolve() {\n        next();\n      },\n      reject: function reject() {\n        _reject();\n      },\n      direction: direction,\n      app: router.app\n    });\n  }\n\n  next();\n}\n\nexport default function processRouteQueue(to, from, resolve, reject, direction) {\n  var router = this;\n\n  function enterNextRoute() {\n    if (to && to.route && (router.params.routesBeforeEnter || to.route.beforeEnter)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeEnter, to.route.beforeEnter, to, from, function () {\n        router.allowPageChange = true;\n        resolve();\n      }, function () {\n        reject();\n      }, direction);\n    } else {\n      resolve();\n    }\n  }\n\n  function leaveCurrentRoute() {\n    if (from && from.route && (router.params.routesBeforeLeave || from.route.beforeLeave)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeLeave, from.route.beforeLeave, to, from, function () {\n        router.allowPageChange = true;\n        enterNextRoute();\n      }, function () {\n        reject();\n      }, direction);\n    } else {\n      enterNextRoute();\n    }\n  }\n\n  leaveCurrentRoute();\n}","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/modules/router/process-route-queue.js"],"names":["processQueue","router","routerQueue","routeQueue","to","from","resolve","_reject","direction","queue","Array","isArray","push","apply","next","length","queueItem","shift","call","reject","app","processRouteQueue","enterNextRoute","route","params","routesBeforeEnter","beforeEnter","allowPageChange","leaveCurrentRoute","routesBeforeLeave","beforeLeave"],"mappings":"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","sourcesContent":["function processQueue(router, routerQueue, routeQueue, to, from, resolve, _reject, direction) {\n  var queue = [];\n\n  if (Array.isArray(routeQueue)) {\n    queue.push.apply(queue, routeQueue);\n  } else if (routeQueue && typeof routeQueue === 'function') {\n    queue.push(routeQueue);\n  }\n\n  if (routerQueue) {\n    if (Array.isArray(routerQueue)) {\n      queue.push.apply(queue, routerQueue);\n    } else {\n      queue.push(routerQueue);\n    }\n  }\n\n  function next() {\n    if (queue.length === 0) {\n      resolve();\n      return;\n    }\n\n    var queueItem = queue.shift();\n    queueItem.call(router, {\n      router: router,\n      to: to,\n      from: from,\n      resolve: function resolve() {\n        next();\n      },\n      reject: function reject() {\n        _reject();\n      },\n      direction: direction,\n      app: router.app\n    });\n  }\n\n  next();\n}\n\nexport default function processRouteQueue(to, from, resolve, reject, direction) {\n  var router = this;\n\n  function enterNextRoute() {\n    if (to && to.route && (router.params.routesBeforeEnter || to.route.beforeEnter)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeEnter, to.route.beforeEnter, to, from, function () {\n        router.allowPageChange = true;\n        resolve();\n      }, function () {\n        reject();\n      }, direction);\n    } else {\n      resolve();\n    }\n  }\n\n  function leaveCurrentRoute() {\n    if (from && from.route && (router.params.routesBeforeLeave || from.route.beforeLeave)) {\n      router.allowPageChange = false;\n      processQueue(router, router.params.routesBeforeLeave, from.route.beforeLeave, to, from, function () {\n        router.allowPageChange = true;\n        enterNextRoute();\n      }, function () {\n        reject();\n      }, direction);\n    } else {\n      enterNextRoute();\n    }\n  }\n\n  leaveCurrentRoute();\n}"]},"metadata":{},"sourceType":"module"}