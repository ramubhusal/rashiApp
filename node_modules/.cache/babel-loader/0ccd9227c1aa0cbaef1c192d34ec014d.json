{"ast":null,"code":"import { extend } from '../../shared/utils';\nexport default function redirect(direction, route, options) {\n  var router = this;\n  var r = route.route.redirect;\n  var method = direction === 'forward' ? 'navigate' : 'back';\n\n  if (options.initial && router.params.browserHistory) {\n    options.replaceState = true; // eslint-disable-line\n\n    options.history = true; // eslint-disable-line\n  }\n\n  function redirectResolve(redirectUrl, redirectOptions) {\n    if (redirectOptions === void 0) {\n      redirectOptions = {};\n    }\n\n    router.allowPageChange = true;\n    router[method](redirectUrl, extend({}, options, redirectOptions));\n  }\n\n  function redirectReject() {\n    router.allowPageChange = true;\n  }\n\n  if (typeof r === 'function') {\n    router.allowPageChange = false;\n    var redirectUrl = r.call(router, {\n      router: router,\n      to: route,\n      resolve: redirectResolve,\n      reject: redirectReject,\n      direction: direction,\n      app: router.app\n    });\n\n    if (redirectUrl && typeof redirectUrl === 'string') {\n      router.allowPageChange = true;\n      return router[method](redirectUrl, options);\n    }\n\n    return router;\n  }\n\n  return router[method](r, options);\n}","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/modules/router/redirect.js"],"names":["extend","redirect","direction","route","options","router","r","method","initial","params","browserHistory","replaceState","history","redirectResolve","redirectUrl","redirectOptions","allowPageChange","redirectReject","call","to","resolve","reject","app"],"mappings":"AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;AAC1D,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACA,KAAN,CAAYF,QAApB;AACA,MAAIM,MAAM,GAAGL,SAAS,KAAK,SAAd,GAA0B,UAA1B,GAAuC,MAApD;;AAEA,MAAIE,OAAO,CAACI,OAAR,IAAmBH,MAAM,CAACI,MAAP,CAAcC,cAArC,EAAqD;AACnDN,IAAAA,OAAO,CAACO,YAAR,GAAuB,IAAvB,CADmD,CACtB;;AAE7BP,IAAAA,OAAO,CAACQ,OAAR,GAAkB,IAAlB,CAHmD,CAG3B;AACzB;;AAED,WAASC,eAAT,CAAyBC,WAAzB,EAAsCC,eAAtC,EAAuD;AACrD,QAAIA,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9BA,MAAAA,eAAe,GAAG,EAAlB;AACD;;AAEDV,IAAAA,MAAM,CAACW,eAAP,GAAyB,IAAzB;AACAX,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeO,WAAf,EAA4Bd,MAAM,CAAC,EAAD,EAAKI,OAAL,EAAcW,eAAd,CAAlC;AACD;;AAED,WAASE,cAAT,GAA0B;AACxBZ,IAAAA,MAAM,CAACW,eAAP,GAAyB,IAAzB;AACD;;AAED,MAAI,OAAOV,CAAP,KAAa,UAAjB,EAA6B;AAC3BD,IAAAA,MAAM,CAACW,eAAP,GAAyB,KAAzB;AACA,QAAIF,WAAW,GAAGR,CAAC,CAACY,IAAF,CAAOb,MAAP,EAAe;AAC/BA,MAAAA,MAAM,EAAEA,MADuB;AAE/Bc,MAAAA,EAAE,EAAEhB,KAF2B;AAG/BiB,MAAAA,OAAO,EAAEP,eAHsB;AAI/BQ,MAAAA,MAAM,EAAEJ,cAJuB;AAK/Bf,MAAAA,SAAS,EAAEA,SALoB;AAM/BoB,MAAAA,GAAG,EAAEjB,MAAM,CAACiB;AANmB,KAAf,CAAlB;;AASA,QAAIR,WAAW,IAAI,OAAOA,WAAP,KAAuB,QAA1C,EAAoD;AAClDT,MAAAA,MAAM,CAACW,eAAP,GAAyB,IAAzB;AACA,aAAOX,MAAM,CAACE,MAAD,CAAN,CAAeO,WAAf,EAA4BV,OAA5B,CAAP;AACD;;AAED,WAAOC,MAAP;AACD;;AAED,SAAOA,MAAM,CAACE,MAAD,CAAN,CAAeD,CAAf,EAAkBF,OAAlB,CAAP;AACD","sourcesContent":["import { extend } from '../../shared/utils';\nexport default function redirect(direction, route, options) {\n  var router = this;\n  var r = route.route.redirect;\n  var method = direction === 'forward' ? 'navigate' : 'back';\n\n  if (options.initial && router.params.browserHistory) {\n    options.replaceState = true; // eslint-disable-line\n\n    options.history = true; // eslint-disable-line\n  }\n\n  function redirectResolve(redirectUrl, redirectOptions) {\n    if (redirectOptions === void 0) {\n      redirectOptions = {};\n    }\n\n    router.allowPageChange = true;\n    router[method](redirectUrl, extend({}, options, redirectOptions));\n  }\n\n  function redirectReject() {\n    router.allowPageChange = true;\n  }\n\n  if (typeof r === 'function') {\n    router.allowPageChange = false;\n    var redirectUrl = r.call(router, {\n      router: router,\n      to: route,\n      resolve: redirectResolve,\n      reject: redirectReject,\n      direction: direction,\n      app: router.app\n    });\n\n    if (redirectUrl && typeof redirectUrl === 'string') {\n      router.allowPageChange = true;\n      return router[method](redirectUrl, options);\n    }\n\n    return router;\n  }\n\n  return router[method](r, options);\n}"]},"metadata":{},"sourceType":"module"}