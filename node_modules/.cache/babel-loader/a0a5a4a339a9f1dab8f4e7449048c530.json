{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\nimport { getSupport } from '../../shared/get-support';\n\nfunction resizableView(view) {\n  var app = view.app;\n  var support = getSupport();\n  if (view.resizableInitialized) return;\n  extend(view, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  var $htmlEl = $('html');\n  var $el = view.$el;\n  if (!$el) return;\n  var $resizeHandlerEl;\n  var isTouched;\n  var isMoved;\n  var touchesStart = {};\n  var touchesDiff;\n  var width;\n  var minWidth;\n  var maxWidth;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    var newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return view.resizable && $el.hasClass('view-resizable') && $el.hasClass('view-master-detail');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    var $pageMasterEl = $el.children('.page-master');\n    minWidth = transformCSSWidth($pageMasterEl.css('min-width'));\n    maxWidth = transformCSSWidth($pageMasterEl.css('max-width'));\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    e.f7PreventSwipePanel = true;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      width = $resizeHandlerEl[0].offsetLeft + $resizeHandlerEl[0].offsetWidth;\n      $el.addClass('view-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    var newWidth = width + touchesDiff;\n\n    if (minWidth && !Number.isNaN(minWidth)) {\n      newWidth = Math.max(newWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth)) {\n      newWidth = Math.min(newWidth, maxWidth);\n    }\n\n    newWidth = Math.min(Math.max(newWidth, 0), app.width);\n    view.resizableWidth = newWidth;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', newWidth + \"px\");\n    $el.trigger('view:resize', newWidth);\n    view.emit('local::resize viewResize', view, newWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', view.resizableWidth + \"px\");\n    $el.removeClass('view-resizing');\n  }\n\n  function handleResize() {\n    if (!view.resizableWidth) return;\n    minWidth = transformCSSWidth($resizeHandlerEl.css('min-width'));\n    maxWidth = transformCSSWidth($resizeHandlerEl.css('max-width'));\n\n    if (minWidth && !Number.isNaN(minWidth) && view.resizableWidth < minWidth) {\n      view.resizableWidth = Math.max(view.resizableWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth) && view.resizableWidth > maxWidth) {\n      view.resizableWidth = Math.min(view.resizableWidth, maxWidth);\n    }\n\n    view.resizableWidth = Math.min(Math.max(view.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty('--f7-page-master-width', view.resizableWidth + \"px\");\n  }\n\n  $resizeHandlerEl = view.$el.children('.view-resize-handler');\n\n  if (!$resizeHandlerEl.length) {\n    view.$el.append('<div class=\"view-resize-handler\"></div>');\n    $resizeHandlerEl = view.$el.children('.view-resize-handler');\n  }\n\n  view.$resizeHandlerEl = $resizeHandlerEl;\n  $el.addClass('view-resizable'); // Add Events\n\n  var passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  view.$el.on(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  view.on('beforeOpen', handleResize);\n  view.once('viewDestroy', function () {\n    $el.removeClass('view-resizable');\n    view.$resizeHandlerEl.remove();\n    view.$el.off(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    view.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizableView;","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/view/resizable-view.js"],"names":["$","extend","getSupport","resizableView","view","app","support","resizableInitialized","resizable","resizableWidth","$htmlEl","$el","$resizeHandlerEl","isTouched","isMoved","touchesStart","touchesDiff","width","minWidth","maxWidth","transformCSSWidth","v","indexOf","parseInt","newV","Number","isNaN","isResizable","hasClass","handleTouchStart","e","x","type","targetTouches","pageX","y","pageY","$pageMasterEl","children","css","handleTouchMove","f7PreventSwipePanel","offsetLeft","offsetWidth","addClass","preventDefault","newWidth","Math","max","min","style","setProperty","trigger","emit","handleTouchEnd","removeClass","handleResize","length","append","passive","passiveListener","on","touchEvents","start","once","remove","off"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\nimport { getSupport } from '../../shared/get-support';\n\nfunction resizableView(view) {\n  var app = view.app;\n  var support = getSupport();\n  if (view.resizableInitialized) return;\n  extend(view, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  var $htmlEl = $('html');\n  var $el = view.$el;\n  if (!$el) return;\n  var $resizeHandlerEl;\n  var isTouched;\n  var isMoved;\n  var touchesStart = {};\n  var touchesDiff;\n  var width;\n  var minWidth;\n  var maxWidth;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    var newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return view.resizable && $el.hasClass('view-resizable') && $el.hasClass('view-master-detail');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    var $pageMasterEl = $el.children('.page-master');\n    minWidth = transformCSSWidth($pageMasterEl.css('min-width'));\n    maxWidth = transformCSSWidth($pageMasterEl.css('max-width'));\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    e.f7PreventSwipePanel = true;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      width = $resizeHandlerEl[0].offsetLeft + $resizeHandlerEl[0].offsetWidth;\n      $el.addClass('view-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    var newWidth = width + touchesDiff;\n\n    if (minWidth && !Number.isNaN(minWidth)) {\n      newWidth = Math.max(newWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth)) {\n      newWidth = Math.min(newWidth, maxWidth);\n    }\n\n    newWidth = Math.min(Math.max(newWidth, 0), app.width);\n    view.resizableWidth = newWidth;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', newWidth + \"px\");\n    $el.trigger('view:resize', newWidth);\n    view.emit('local::resize viewResize', view, newWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty('--f7-page-master-width', view.resizableWidth + \"px\");\n    $el.removeClass('view-resizing');\n  }\n\n  function handleResize() {\n    if (!view.resizableWidth) return;\n    minWidth = transformCSSWidth($resizeHandlerEl.css('min-width'));\n    maxWidth = transformCSSWidth($resizeHandlerEl.css('max-width'));\n\n    if (minWidth && !Number.isNaN(minWidth) && view.resizableWidth < minWidth) {\n      view.resizableWidth = Math.max(view.resizableWidth, minWidth);\n    }\n\n    if (maxWidth && !Number.isNaN(maxWidth) && view.resizableWidth > maxWidth) {\n      view.resizableWidth = Math.min(view.resizableWidth, maxWidth);\n    }\n\n    view.resizableWidth = Math.min(Math.max(view.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty('--f7-page-master-width', view.resizableWidth + \"px\");\n  }\n\n  $resizeHandlerEl = view.$el.children('.view-resize-handler');\n\n  if (!$resizeHandlerEl.length) {\n    view.$el.append('<div class=\"view-resize-handler\"></div>');\n    $resizeHandlerEl = view.$el.children('.view-resize-handler');\n  }\n\n  view.$resizeHandlerEl = $resizeHandlerEl;\n  $el.addClass('view-resizable'); // Add Events\n\n  var passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  view.$el.on(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  view.on('beforeOpen', handleResize);\n  view.once('viewDestroy', function () {\n    $el.removeClass('view-resizable');\n    view.$resizeHandlerEl.remove();\n    view.$el.off(app.touchEvents.start, '.view-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    view.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizableView;"]},"metadata":{},"sourceType":"module"}