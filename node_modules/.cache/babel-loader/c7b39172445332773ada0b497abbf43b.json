{"ast":null,"code":"function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport $ from '../../shared/dom7';\nimport { extend, now, nextTick, deleteProps } from '../../shared/utils';\nimport Framework7Class from '../../shared/class';\nimport { getSupport } from '../../shared/get-support';\n\nvar Toggle = /*#__PURE__*/function (_Framework7Class) {\n  _inheritsLoose(Toggle, _Framework7Class);\n\n  function Toggle(app, params) {\n    var _this;\n\n    if (params === void 0) {\n      params = {};\n    }\n\n    _this = _Framework7Class.call(this, params, [app]) || this;\n\n    var toggle = _assertThisInitialized(_this);\n\n    var support = getSupport();\n    var defaults = {}; // Extend defaults with modules params\n\n    toggle.useModulesParams(defaults);\n    toggle.params = extend(defaults, params);\n    var el = toggle.params.el;\n    if (!el) return toggle || _assertThisInitialized(_this);\n    var $el = $(el);\n    if ($el.length === 0) return toggle || _assertThisInitialized(_this);\n    if ($el[0].f7Toggle) return $el[0].f7Toggle || _assertThisInitialized(_this);\n    var $inputEl = $el.children('input[type=\"checkbox\"]');\n    extend(toggle, {\n      app: app,\n      $el: $el,\n      el: $el[0],\n      $inputEl: $inputEl,\n      inputEl: $inputEl[0],\n      disabled: $el.hasClass('disabled') || $inputEl.hasClass('disabled') || $inputEl.attr('disabled') || $inputEl[0].disabled\n    });\n    Object.defineProperty(toggle, 'checked', {\n      enumerable: true,\n      configurable: true,\n      set: function set(checked) {\n        if (!toggle || typeof toggle.$inputEl === 'undefined') return;\n        if (toggle.checked === checked) return;\n        $inputEl[0].checked = checked;\n        toggle.$inputEl.trigger('change');\n      },\n      get: function get() {\n        return $inputEl[0].checked;\n      }\n    });\n    $el[0].f7Toggle = toggle;\n    var isTouched;\n    var touchesStart = {};\n    var isScrolling;\n    var touchesDiff;\n    var toggleWidth;\n    var touchStartTime;\n    var touchStartChecked;\n\n    function handleTouchStart(e) {\n      if (isTouched || toggle.disabled) return;\n      touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchesDiff = 0;\n      isTouched = true;\n      isScrolling = undefined;\n      touchStartTime = now();\n      touchStartChecked = toggle.checked;\n      toggleWidth = $el[0].offsetWidth;\n      nextTick(function () {\n        if (isTouched) {\n          $el.addClass('toggle-active-state');\n        }\n      });\n    }\n\n    function handleTouchMove(e) {\n      if (!isTouched || toggle.disabled) return;\n      var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      var inverter = app.rtl ? -1 : 1;\n\n      if (typeof isScrolling === 'undefined') {\n        isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n      }\n\n      if (isScrolling) {\n        isTouched = false;\n        return;\n      }\n\n      e.preventDefault();\n      touchesDiff = pageX - touchesStart.x;\n      var changed;\n\n      if (touchesDiff * inverter < 0 && Math.abs(touchesDiff) > toggleWidth / 3 && touchStartChecked) {\n        changed = true;\n      }\n\n      if (touchesDiff * inverter > 0 && Math.abs(touchesDiff) > toggleWidth / 3 && !touchStartChecked) {\n        changed = true;\n      }\n\n      if (changed) {\n        touchesStart.x = pageX;\n        toggle.checked = !touchStartChecked;\n        touchStartChecked = !touchStartChecked;\n      }\n    }\n\n    function handleTouchEnd() {\n      if (!isTouched || toggle.disabled) {\n        if (isScrolling) $el.removeClass('toggle-active-state');\n        isTouched = false;\n        return;\n      }\n\n      var inverter = app.rtl ? -1 : 1;\n      isTouched = false;\n      $el.removeClass('toggle-active-state');\n      var changed;\n\n      if (now() - touchStartTime < 300) {\n        if (touchesDiff * inverter < 0 && touchStartChecked) {\n          changed = true;\n        }\n\n        if (touchesDiff * inverter > 0 && !touchStartChecked) {\n          changed = true;\n        }\n\n        if (changed) {\n          toggle.checked = !touchStartChecked;\n        }\n      }\n    }\n\n    function handleInputChange() {\n      toggle.$el.trigger('toggle:change');\n      toggle.emit('local::change toggleChange', toggle);\n    }\n\n    toggle.attachEvents = function attachEvents() {\n      var passive = support.passiveListener ? {\n        passive: true\n      } : false;\n      $el.on(app.touchEvents.start, handleTouchStart, passive);\n      app.on('touchmove', handleTouchMove);\n      app.on('touchend:passive', handleTouchEnd);\n      toggle.$inputEl.on('change', handleInputChange);\n    };\n\n    toggle.detachEvents = function detachEvents() {\n      var passive = support.passiveListener ? {\n        passive: true\n      } : false;\n      $el.off(app.touchEvents.start, handleTouchStart, passive);\n      app.off('touchmove', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      toggle.$inputEl.off('change', handleInputChange);\n    }; // Install Modules\n\n\n    toggle.useModules(); // Init\n\n    toggle.init();\n    return _this;\n  }\n\n  var _proto = Toggle.prototype;\n\n  _proto.toggle = function toggle() {\n    var toggle = this;\n    toggle.checked = !toggle.checked;\n  };\n\n  _proto.init = function init() {\n    var toggle = this;\n    toggle.attachEvents();\n  };\n\n  _proto.destroy = function destroy() {\n    var toggle = this;\n    toggle.$el.trigger('toggle:beforedestroy');\n    toggle.emit('local::beforeDestroy toggleBeforeDestroy', toggle);\n    delete toggle.$el[0].f7Toggle;\n    toggle.detachEvents();\n    deleteProps(toggle);\n    toggle = null;\n  };\n\n  return Toggle;\n}(Framework7Class);\n\nexport default Toggle;","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/components/toggle/toggle-class.js"],"names":["_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","$","extend","now","nextTick","deleteProps","Framework7Class","getSupport","Toggle","_Framework7Class","app","params","_this","call","toggle","support","defaults","useModulesParams","el","$el","length","f7Toggle","$inputEl","children","inputEl","disabled","hasClass","attr","defineProperty","enumerable","configurable","set","checked","trigger","get","isTouched","touchesStart","isScrolling","touchesDiff","toggleWidth","touchStartTime","touchStartChecked","handleTouchStart","e","x","type","targetTouches","pageX","y","pageY","undefined","offsetWidth","addClass","handleTouchMove","inverter","rtl","Math","abs","preventDefault","changed","handleTouchEnd","removeClass","handleInputChange","emit","attachEvents","passive","passiveListener","on","touchEvents","start","detachEvents","off","useModules","init","_proto","destroy"],"mappings":"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","sourcesContent":["function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport $ from '../../shared/dom7';\nimport { extend, now, nextTick, deleteProps } from '../../shared/utils';\nimport Framework7Class from '../../shared/class';\nimport { getSupport } from '../../shared/get-support';\n\nvar Toggle = /*#__PURE__*/function (_Framework7Class) {\n  _inheritsLoose(Toggle, _Framework7Class);\n\n  function Toggle(app, params) {\n    var _this;\n\n    if (params === void 0) {\n      params = {};\n    }\n\n    _this = _Framework7Class.call(this, params, [app]) || this;\n\n    var toggle = _assertThisInitialized(_this);\n\n    var support = getSupport();\n    var defaults = {}; // Extend defaults with modules params\n\n    toggle.useModulesParams(defaults);\n    toggle.params = extend(defaults, params);\n    var el = toggle.params.el;\n    if (!el) return toggle || _assertThisInitialized(_this);\n    var $el = $(el);\n    if ($el.length === 0) return toggle || _assertThisInitialized(_this);\n    if ($el[0].f7Toggle) return $el[0].f7Toggle || _assertThisInitialized(_this);\n    var $inputEl = $el.children('input[type=\"checkbox\"]');\n    extend(toggle, {\n      app: app,\n      $el: $el,\n      el: $el[0],\n      $inputEl: $inputEl,\n      inputEl: $inputEl[0],\n      disabled: $el.hasClass('disabled') || $inputEl.hasClass('disabled') || $inputEl.attr('disabled') || $inputEl[0].disabled\n    });\n    Object.defineProperty(toggle, 'checked', {\n      enumerable: true,\n      configurable: true,\n      set: function set(checked) {\n        if (!toggle || typeof toggle.$inputEl === 'undefined') return;\n        if (toggle.checked === checked) return;\n        $inputEl[0].checked = checked;\n        toggle.$inputEl.trigger('change');\n      },\n      get: function get() {\n        return $inputEl[0].checked;\n      }\n    });\n    $el[0].f7Toggle = toggle;\n    var isTouched;\n    var touchesStart = {};\n    var isScrolling;\n    var touchesDiff;\n    var toggleWidth;\n    var touchStartTime;\n    var touchStartChecked;\n\n    function handleTouchStart(e) {\n      if (isTouched || toggle.disabled) return;\n      touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchesDiff = 0;\n      isTouched = true;\n      isScrolling = undefined;\n      touchStartTime = now();\n      touchStartChecked = toggle.checked;\n      toggleWidth = $el[0].offsetWidth;\n      nextTick(function () {\n        if (isTouched) {\n          $el.addClass('toggle-active-state');\n        }\n      });\n    }\n\n    function handleTouchMove(e) {\n      if (!isTouched || toggle.disabled) return;\n      var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      var inverter = app.rtl ? -1 : 1;\n\n      if (typeof isScrolling === 'undefined') {\n        isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n      }\n\n      if (isScrolling) {\n        isTouched = false;\n        return;\n      }\n\n      e.preventDefault();\n      touchesDiff = pageX - touchesStart.x;\n      var changed;\n\n      if (touchesDiff * inverter < 0 && Math.abs(touchesDiff) > toggleWidth / 3 && touchStartChecked) {\n        changed = true;\n      }\n\n      if (touchesDiff * inverter > 0 && Math.abs(touchesDiff) > toggleWidth / 3 && !touchStartChecked) {\n        changed = true;\n      }\n\n      if (changed) {\n        touchesStart.x = pageX;\n        toggle.checked = !touchStartChecked;\n        touchStartChecked = !touchStartChecked;\n      }\n    }\n\n    function handleTouchEnd() {\n      if (!isTouched || toggle.disabled) {\n        if (isScrolling) $el.removeClass('toggle-active-state');\n        isTouched = false;\n        return;\n      }\n\n      var inverter = app.rtl ? -1 : 1;\n      isTouched = false;\n      $el.removeClass('toggle-active-state');\n      var changed;\n\n      if (now() - touchStartTime < 300) {\n        if (touchesDiff * inverter < 0 && touchStartChecked) {\n          changed = true;\n        }\n\n        if (touchesDiff * inverter > 0 && !touchStartChecked) {\n          changed = true;\n        }\n\n        if (changed) {\n          toggle.checked = !touchStartChecked;\n        }\n      }\n    }\n\n    function handleInputChange() {\n      toggle.$el.trigger('toggle:change');\n      toggle.emit('local::change toggleChange', toggle);\n    }\n\n    toggle.attachEvents = function attachEvents() {\n      var passive = support.passiveListener ? {\n        passive: true\n      } : false;\n      $el.on(app.touchEvents.start, handleTouchStart, passive);\n      app.on('touchmove', handleTouchMove);\n      app.on('touchend:passive', handleTouchEnd);\n      toggle.$inputEl.on('change', handleInputChange);\n    };\n\n    toggle.detachEvents = function detachEvents() {\n      var passive = support.passiveListener ? {\n        passive: true\n      } : false;\n      $el.off(app.touchEvents.start, handleTouchStart, passive);\n      app.off('touchmove', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      toggle.$inputEl.off('change', handleInputChange);\n    }; // Install Modules\n\n\n    toggle.useModules(); // Init\n\n    toggle.init();\n    return _this;\n  }\n\n  var _proto = Toggle.prototype;\n\n  _proto.toggle = function toggle() {\n    var toggle = this;\n    toggle.checked = !toggle.checked;\n  };\n\n  _proto.init = function init() {\n    var toggle = this;\n    toggle.attachEvents();\n  };\n\n  _proto.destroy = function destroy() {\n    var toggle = this;\n    toggle.$el.trigger('toggle:beforedestroy');\n    toggle.emit('local::beforeDestroy toggleBeforeDestroy', toggle);\n    delete toggle.$el[0].f7Toggle;\n    toggle.detachEvents();\n    deleteProps(toggle);\n    toggle = null;\n  };\n\n  return Toggle;\n}(Framework7Class);\n\nexport default Toggle;"]},"metadata":{},"sourceType":"module"}