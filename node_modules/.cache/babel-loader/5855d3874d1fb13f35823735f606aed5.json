{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { extend, now, nextFrame } from '../../shared/utils';\n\nfunction swipePanel(panel) {\n  var app = panel.app;\n\n  if (panel.swipeInitialized) {\n    return;\n  }\n\n  extend(panel, {\n    swipeable: true,\n    swipeInitialized: true\n  });\n  var params = panel.params;\n  var $el = panel.$el,\n      $backdropEl = panel.$backdropEl,\n      side = panel.side,\n      effect = panel.effect;\n  var otherPanel;\n  var isTouched;\n  var isGestureStarted;\n  var isMoved;\n  var isScrolling;\n  var isInterrupted;\n  var touchesStart = {};\n  var touchStartTime;\n  var touchesDiff;\n  var translate;\n  var backdropOpacity;\n  var panelWidth;\n  var direction;\n  var $viewEl;\n  var touchMoves = 0;\n\n  function handleTouchStart(e) {\n    if (!panel.swipeable || isGestureStarted) return;\n    if (!app.panel.allowOpen || !params.swipe && !params.swipeOnlyClose || isTouched) return;\n    if ($('.modal-in:not(.toast):not(.notification), .photo-browser-in').length > 0) return;\n    otherPanel = app.panel.get(side === 'left' ? 'right' : 'left') || {};\n    var otherPanelOpened = otherPanel.opened && otherPanel.$el && !otherPanel.$el.hasClass('panel-in-breakpoint');\n\n    if (!panel.opened && otherPanelOpened) {\n      return;\n    }\n\n    if (!params.swipeOnlyClose) {\n      if (otherPanelOpened) return;\n    }\n\n    if (e.target && e.target.nodeName.toLowerCase() === 'input' && e.target.type === 'range') return;\n    if ($(e.target).closest('.range-slider, .tabs-swipeable-wrap, .calendar-months, .no-swipe-panel, .card-opened').length > 0) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (params.swipeOnlyClose && !panel.opened) {\n      return;\n    }\n\n    if (params.swipeActiveArea && !panel.opened) {\n      if (side === 'left') {\n        if (touchesStart.x > params.swipeActiveArea) return;\n      }\n\n      if (side === 'right') {\n        if (touchesStart.x < app.width - params.swipeActiveArea) return;\n      }\n    }\n\n    touchMoves = 0;\n    $viewEl = $(panel.getViewEl());\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    isInterrupted = false;\n    touchStartTime = now();\n    direction = undefined;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched || isGestureStarted || isInterrupted) return;\n    touchMoves += 1;\n    if (touchMoves < 2) return;\n\n    if (e.f7PreventSwipePanel || app.preventSwipePanelBySwipeBack || app.preventSwipePanel) {\n      isTouched = false;\n      return;\n    }\n\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n    }\n\n    if (isScrolling) {\n      isTouched = false;\n      return;\n    }\n\n    if (!direction) {\n      if (pageX > touchesStart.x) {\n        direction = 'to-right';\n      } else {\n        direction = 'to-left';\n      }\n\n      if (params.swipeActiveArea > 0 && !panel.opened) {\n        if (side === 'left' && touchesStart.x > params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n\n        if (side === 'right' && touchesStart.x < app.width - params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n      }\n\n      if ($el.hasClass('panel-in-breakpoint')) {\n        isTouched = false;\n        return;\n      }\n\n      if (side === 'left' && direction === 'to-left' && !$el.hasClass('panel-in') || side === 'right' && direction === 'to-right' && !$el.hasClass('panel-in')) {\n        isTouched = false;\n        return;\n      }\n    }\n\n    var threshold = panel.opened ? 0 : -params.swipeThreshold;\n    if (side === 'right') threshold = -threshold;\n\n    if (!isMoved) {\n      if (!panel.opened) {\n        panel.insertToRoot();\n        $el.addClass('panel-in-swipe');\n        $backdropEl.css('visibility', 'visible');\n        $el.trigger('panel:swipeopen');\n        panel.emit('local::swipeOpen panelSwipeOpen', panel);\n      }\n\n      panelWidth = $el[0].offsetWidth;\n\n      if (effect === 'reveal' && $el.hasClass('panel-in-collapsed')) {\n        panelWidth -= parseFloat($viewEl.css(\"margin-\" + side));\n      }\n\n      $el.transition(0);\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x + threshold;\n\n    if (side === 'right') {\n      if (effect === 'cover') {\n        translate = touchesDiff + (panel.opened ? 0 : panelWidth);\n        if (translate < 0) translate = 0;\n\n        if (translate > panelWidth) {\n          translate = panelWidth;\n        }\n      } else {\n        translate = touchesDiff - (panel.opened ? panelWidth : 0);\n        if (translate > 0) translate = 0;\n\n        if (translate < -panelWidth) {\n          translate = -panelWidth;\n        }\n      }\n    } else {\n      translate = touchesDiff + (panel.opened ? panelWidth : 0);\n      if (translate < 0) translate = 0;\n\n      if (translate > panelWidth) {\n        translate = panelWidth;\n      }\n    }\n\n    var noFollowProgress = Math.abs(translate / panelWidth);\n\n    if (effect === 'reveal') {\n      if (!params.swipeNoFollow) {\n        $viewEl.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n        $backdropEl.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    } else {\n      if (side === 'left') translate -= panelWidth;\n\n      if (!params.swipeNoFollow) {\n        $el.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n        $backdropEl.transition(0);\n        backdropOpacity = 1 - Math.abs(translate / panelWidth);\n        $backdropEl.css({\n          opacity: backdropOpacity\n        });\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    }\n\n    if (params.swipeNoFollow) {\n      var stateChanged = panel.opened && noFollowProgress === 0 || !panel.opened && noFollowProgress === 1;\n\n      if (stateChanged) {\n        isInterrupted = true; // eslint-disable-next-line\n\n        handleTouchEnd(e);\n      }\n    }\n  }\n\n  function handleTouchEnd(e) {\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    var isGesture = e.type === 'gesturestart' || isGestureStarted;\n    isTouched = false;\n    isMoved = false;\n    var timeDiff = new Date().getTime() - touchStartTime;\n    var action;\n    var edge = (translate === 0 || Math.abs(translate) === panelWidth) && !params.swipeNoFollow;\n    var threshold = params.swipeThreshold || 0;\n\n    if (isGesture) {\n      action = 'reset';\n    } else if (!panel.opened) {\n      if (Math.abs(touchesDiff) < threshold) {\n        action = 'reset';\n      } else if (effect === 'cover') {\n        if (translate === 0) {\n          action = 'swap'; // open\n        } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n          action = 'swap'; // open\n        } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n          action = 'swap'; // open\n        } else {\n          action = 'reset'; // close\n        }\n      } else if (translate === 0) {\n        action = 'reset';\n      } else if (timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2) {\n        action = 'swap';\n      } else {\n        action = 'reset';\n      }\n    } else if (effect === 'cover') {\n      if (translate === 0) {\n        action = 'reset'; // open\n      } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n        action = 'swap'; // open\n      } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n        action = 'reset'; // open\n      } else {\n        action = 'swap'; // close\n      }\n    } else if (translate === -panelWidth) {\n      action = 'reset';\n    } else if (timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2) {\n      if (side === 'left' && translate === panelWidth) action = 'reset';else action = 'swap';\n    } else {\n      action = 'reset';\n    }\n\n    if (action === 'swap') {\n      if (panel.opened) {\n        panel.close(!edge);\n      } else {\n        panel.open(!edge);\n      }\n    }\n\n    var removePanelInClass = true;\n\n    if (action === 'reset') {\n      if (!panel.opened) {\n        if (edge) {\n          // edge position\n          $el.removeClass('panel-in-swipe');\n        } else {\n          removePanelInClass = false;\n          var target = effect === 'reveal' ? $viewEl : $el;\n          panel.setStateClasses('before-closing');\n          target.transitionEnd(function () {\n            if ($el.hasClass('panel-in')) return;\n            $el.removeClass('panel-in-swipe');\n            panel.setStateClasses('after-closing');\n          });\n        }\n      }\n    }\n\n    if (effect === 'reveal') {\n      nextFrame(function () {\n        $viewEl.transition('');\n        $viewEl.transform('');\n      });\n    }\n\n    if (removePanelInClass) {\n      $el.removeClass('panel-in-swipe');\n    }\n\n    $el.transition('').transform('');\n    $backdropEl.transform('').transition('').css({\n      opacity: '',\n      visibility: ''\n    });\n  }\n\n  function handleGestureStart(e) {\n    isGestureStarted = true;\n    handleTouchEnd(e);\n  }\n\n  function handleGestureEnd() {\n    isGestureStarted = false;\n  } // Add Events\n\n\n  app.on('touchstart:passive', handleTouchStart);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('gesturestart', handleGestureStart);\n  app.on('gestureend', handleGestureEnd);\n  panel.on('panelDestroy', function () {\n    app.off('touchstart:passive', handleTouchStart);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('gesturestart', handleGestureStart);\n    app.off('gestureend', handleGestureEnd);\n  });\n}\n\nexport default swipePanel;","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/panel/swipe-panel.js"],"names":["$","extend","now","nextFrame","swipePanel","panel","app","swipeInitialized","swipeable","params","$el","$backdropEl","side","effect","otherPanel","isTouched","isGestureStarted","isMoved","isScrolling","isInterrupted","touchesStart","touchStartTime","touchesDiff","translate","backdropOpacity","panelWidth","direction","$viewEl","touchMoves","handleTouchStart","e","allowOpen","swipe","swipeOnlyClose","length","get","otherPanelOpened","opened","hasClass","target","nodeName","toLowerCase","type","closest","x","targetTouches","pageX","y","pageY","swipeActiveArea","width","getViewEl","undefined","handleTouchMove","f7PreventSwipePanel","preventSwipePanelBySwipeBack","preventSwipePanel","Math","abs","threshold","swipeThreshold","insertToRoot","addClass","css","trigger","emit","offsetWidth","parseFloat","transition","preventDefault","noFollowProgress","swipeNoFollow","transform","opacity","stateChanged","handleTouchEnd","isGesture","timeDiff","Date","getTime","action","edge","close","open","removePanelInClass","removeClass","setStateClasses","transitionEnd","visibility","handleGestureStart","handleGestureEnd","on","off"],"mappings":"AAAA,OAAOA,CAAP,MAAc,mBAAd;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,oBAAvC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;;AAEA,MAAID,KAAK,CAACE,gBAAV,EAA4B;AAC1B;AACD;;AAEDN,EAAAA,MAAM,CAACI,KAAD,EAAQ;AACZG,IAAAA,SAAS,EAAE,IADC;AAEZD,IAAAA,gBAAgB,EAAE;AAFN,GAAR,CAAN;AAIA,MAAIE,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,MAAIC,GAAG,GAAGL,KAAK,CAACK,GAAhB;AAAA,MACIC,WAAW,GAAGN,KAAK,CAACM,WADxB;AAAA,MAEIC,IAAI,GAAGP,KAAK,CAACO,IAFjB;AAAA,MAGIC,MAAM,GAAGR,KAAK,CAACQ,MAHnB;AAIA,MAAIC,UAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,cAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,QAAI,CAACzB,KAAK,CAACG,SAAP,IAAoBQ,gBAAxB,EAA0C;AAC1C,QAAI,CAACV,GAAG,CAACD,KAAJ,CAAU0B,SAAX,IAAwB,CAACtB,MAAM,CAACuB,KAAR,IAAiB,CAACvB,MAAM,CAACwB,cAAjD,IAAmElB,SAAvE,EAAkF;AAClF,QAAIf,CAAC,CAAC,6DAAD,CAAD,CAAiEkC,MAAjE,GAA0E,CAA9E,EAAiF;AACjFpB,IAAAA,UAAU,GAAGR,GAAG,CAACD,KAAJ,CAAU8B,GAAV,CAAcvB,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA1C,KAAqD,EAAlE;AACA,QAAIwB,gBAAgB,GAAGtB,UAAU,CAACuB,MAAX,IAAqBvB,UAAU,CAACJ,GAAhC,IAAuC,CAACI,UAAU,CAACJ,GAAX,CAAe4B,QAAf,CAAwB,qBAAxB,CAA/D;;AAEA,QAAI,CAACjC,KAAK,CAACgC,MAAP,IAAiBD,gBAArB,EAAuC;AACrC;AACD;;AAED,QAAI,CAAC3B,MAAM,CAACwB,cAAZ,EAA4B;AAC1B,UAAIG,gBAAJ,EAAsB;AACvB;;AAED,QAAIN,CAAC,CAACS,MAAF,IAAYT,CAAC,CAACS,MAAF,CAASC,QAAT,CAAkBC,WAAlB,OAAoC,OAAhD,IAA2DX,CAAC,CAACS,MAAF,CAASG,IAAT,KAAkB,OAAjF,EAA0F;AAC1F,QAAI1C,CAAC,CAAC8B,CAAC,CAACS,MAAH,CAAD,CAAYI,OAAZ,CAAoB,sFAApB,EAA4GT,MAA5G,GAAqH,CAAzH,EAA4H;AAC5Hd,IAAAA,YAAY,CAACwB,CAAb,GAAiBd,CAAC,CAACY,IAAF,KAAW,YAAX,GAA0BZ,CAAC,CAACe,aAAF,CAAgB,CAAhB,EAAmBC,KAA7C,GAAqDhB,CAAC,CAACgB,KAAxE;AACA1B,IAAAA,YAAY,CAAC2B,CAAb,GAAiBjB,CAAC,CAACY,IAAF,KAAW,YAAX,GAA0BZ,CAAC,CAACe,aAAF,CAAgB,CAAhB,EAAmBG,KAA7C,GAAqDlB,CAAC,CAACkB,KAAxE;;AAEA,QAAIvC,MAAM,CAACwB,cAAP,IAAyB,CAAC5B,KAAK,CAACgC,MAApC,EAA4C;AAC1C;AACD;;AAED,QAAI5B,MAAM,CAACwC,eAAP,IAA0B,CAAC5C,KAAK,CAACgC,MAArC,EAA6C;AAC3C,UAAIzB,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAIQ,YAAY,CAACwB,CAAb,GAAiBnC,MAAM,CAACwC,eAA5B,EAA6C;AAC9C;;AAED,UAAIrC,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAIQ,YAAY,CAACwB,CAAb,GAAiBtC,GAAG,CAAC4C,KAAJ,GAAYzC,MAAM,CAACwC,eAAxC,EAAyD;AAC1D;AACF;;AAEDrB,IAAAA,UAAU,GAAG,CAAb;AACAD,IAAAA,OAAO,GAAG3B,CAAC,CAACK,KAAK,CAAC8C,SAAN,EAAD,CAAX;AACAlC,IAAAA,OAAO,GAAG,KAAV;AACAF,IAAAA,SAAS,GAAG,IAAZ;AACAG,IAAAA,WAAW,GAAGkC,SAAd;AACAjC,IAAAA,aAAa,GAAG,KAAhB;AACAE,IAAAA,cAAc,GAAGnB,GAAG,EAApB;AACAwB,IAAAA,SAAS,GAAG0B,SAAZ;AACD;;AAED,WAASC,eAAT,CAAyBvB,CAAzB,EAA4B;AAC1B,QAAI,CAACf,SAAD,IAAcC,gBAAd,IAAkCG,aAAtC,EAAqD;AACrDS,IAAAA,UAAU,IAAI,CAAd;AACA,QAAIA,UAAU,GAAG,CAAjB,EAAoB;;AAEpB,QAAIE,CAAC,CAACwB,mBAAF,IAAyBhD,GAAG,CAACiD,4BAA7B,IAA6DjD,GAAG,CAACkD,iBAArE,EAAwF;AACtFzC,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,QAAI+B,KAAK,GAAGhB,CAAC,CAACY,IAAF,KAAW,WAAX,GAAyBZ,CAAC,CAACe,aAAF,CAAgB,CAAhB,EAAmBC,KAA5C,GAAoDhB,CAAC,CAACgB,KAAlE;AACA,QAAIE,KAAK,GAAGlB,CAAC,CAACY,IAAF,KAAW,WAAX,GAAyBZ,CAAC,CAACe,aAAF,CAAgB,CAAhB,EAAmBG,KAA5C,GAAoDlB,CAAC,CAACkB,KAAlE;;AAEA,QAAI,OAAO9B,WAAP,KAAuB,WAA3B,EAAwC;AACtCA,MAAAA,WAAW,GAAG,CAAC,EAAEA,WAAW,IAAIuC,IAAI,CAACC,GAAL,CAASV,KAAK,GAAG5B,YAAY,CAAC2B,CAA9B,IAAmCU,IAAI,CAACC,GAAL,CAASZ,KAAK,GAAG1B,YAAY,CAACwB,CAA9B,CAApD,CAAf;AACD;;AAED,QAAI1B,WAAJ,EAAiB;AACfH,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,QAAI,CAACW,SAAL,EAAgB;AACd,UAAIoB,KAAK,GAAG1B,YAAY,CAACwB,CAAzB,EAA4B;AAC1BlB,QAAAA,SAAS,GAAG,UAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,GAAG,SAAZ;AACD;;AAED,UAAIjB,MAAM,CAACwC,eAAP,GAAyB,CAAzB,IAA8B,CAAC5C,KAAK,CAACgC,MAAzC,EAAiD;AAC/C,YAAIzB,IAAI,KAAK,MAAT,IAAmBQ,YAAY,CAACwB,CAAb,GAAiBnC,MAAM,CAACwC,eAA/C,EAAgE;AAC9DlC,UAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,YAAIH,IAAI,KAAK,OAAT,IAAoBQ,YAAY,CAACwB,CAAb,GAAiBtC,GAAG,CAAC4C,KAAJ,GAAYzC,MAAM,CAACwC,eAA5D,EAA6E;AAC3ElC,UAAAA,SAAS,GAAG,KAAZ;AACA;AACD;AACF;;AAED,UAAIL,GAAG,CAAC4B,QAAJ,CAAa,qBAAb,CAAJ,EAAyC;AACvCvB,QAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,UAAIH,IAAI,KAAK,MAAT,IAAmBc,SAAS,KAAK,SAAjC,IAA8C,CAAChB,GAAG,CAAC4B,QAAJ,CAAa,UAAb,CAA/C,IAA2E1B,IAAI,KAAK,OAAT,IAAoBc,SAAS,KAAK,UAAlC,IAAgD,CAAChB,GAAG,CAAC4B,QAAJ,CAAa,UAAb,CAAhI,EAA0J;AACxJvB,QAAAA,SAAS,GAAG,KAAZ;AACA;AACD;AACF;;AAED,QAAI4C,SAAS,GAAGtD,KAAK,CAACgC,MAAN,GAAe,CAAf,GAAmB,CAAC5B,MAAM,CAACmD,cAA3C;AACA,QAAIhD,IAAI,KAAK,OAAb,EAAsB+C,SAAS,GAAG,CAACA,SAAb;;AAEtB,QAAI,CAAC1C,OAAL,EAAc;AACZ,UAAI,CAACZ,KAAK,CAACgC,MAAX,EAAmB;AACjBhC,QAAAA,KAAK,CAACwD,YAAN;AACAnD,QAAAA,GAAG,CAACoD,QAAJ,CAAa,gBAAb;AACAnD,QAAAA,WAAW,CAACoD,GAAZ,CAAgB,YAAhB,EAA8B,SAA9B;AACArD,QAAAA,GAAG,CAACsD,OAAJ,CAAY,iBAAZ;AACA3D,QAAAA,KAAK,CAAC4D,IAAN,CAAW,iCAAX,EAA8C5D,KAA9C;AACD;;AAEDoB,MAAAA,UAAU,GAAGf,GAAG,CAAC,CAAD,CAAH,CAAOwD,WAApB;;AAEA,UAAIrD,MAAM,KAAK,QAAX,IAAuBH,GAAG,CAAC4B,QAAJ,CAAa,oBAAb,CAA3B,EAA+D;AAC7Db,QAAAA,UAAU,IAAI0C,UAAU,CAACxC,OAAO,CAACoC,GAAR,CAAY,YAAYnD,IAAxB,CAAD,CAAxB;AACD;;AAEDF,MAAAA,GAAG,CAAC0D,UAAJ,CAAe,CAAf;AACD;;AAEDnD,IAAAA,OAAO,GAAG,IAAV;AACAa,IAAAA,CAAC,CAACuC,cAAF;AACA/C,IAAAA,WAAW,GAAGwB,KAAK,GAAG1B,YAAY,CAACwB,CAArB,GAAyBe,SAAvC;;AAEA,QAAI/C,IAAI,KAAK,OAAb,EAAsB;AACpB,UAAIC,MAAM,KAAK,OAAf,EAAwB;AACtBU,QAAAA,SAAS,GAAGD,WAAW,IAAIjB,KAAK,CAACgC,MAAN,GAAe,CAAf,GAAmBZ,UAAvB,CAAvB;AACA,YAAIF,SAAS,GAAG,CAAhB,EAAmBA,SAAS,GAAG,CAAZ;;AAEnB,YAAIA,SAAS,GAAGE,UAAhB,EAA4B;AAC1BF,UAAAA,SAAS,GAAGE,UAAZ;AACD;AACF,OAPD,MAOO;AACLF,QAAAA,SAAS,GAAGD,WAAW,IAAIjB,KAAK,CAACgC,MAAN,GAAeZ,UAAf,GAA4B,CAAhC,CAAvB;AACA,YAAIF,SAAS,GAAG,CAAhB,EAAmBA,SAAS,GAAG,CAAZ;;AAEnB,YAAIA,SAAS,GAAG,CAACE,UAAjB,EAA6B;AAC3BF,UAAAA,SAAS,GAAG,CAACE,UAAb;AACD;AACF;AACF,KAhBD,MAgBO;AACLF,MAAAA,SAAS,GAAGD,WAAW,IAAIjB,KAAK,CAACgC,MAAN,GAAeZ,UAAf,GAA4B,CAAhC,CAAvB;AACA,UAAIF,SAAS,GAAG,CAAhB,EAAmBA,SAAS,GAAG,CAAZ;;AAEnB,UAAIA,SAAS,GAAGE,UAAhB,EAA4B;AAC1BF,QAAAA,SAAS,GAAGE,UAAZ;AACD;AACF;;AAED,QAAI6C,gBAAgB,GAAGb,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAAvB;;AAEA,QAAIZ,MAAM,KAAK,QAAf,EAAyB;AACvB,UAAI,CAACJ,MAAM,CAAC8D,aAAZ,EAA2B;AACzB5C,QAAAA,OAAO,CAAC6C,SAAR,CAAkB,iBAAiBjD,SAAjB,GAA6B,SAA/C,EAA0D6C,UAA1D,CAAqE,CAArE;AACAzD,QAAAA,WAAW,CAAC6D,SAAZ,CAAsB,iBAAiBjD,SAAjB,GAA6B,SAAnD,EAA8D6C,UAA9D,CAAyE,CAAzE;AACD;;AAED1D,MAAAA,GAAG,CAACsD,OAAJ,CAAY,aAAZ,EAA2BP,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAA3B;AACApB,MAAAA,KAAK,CAAC4D,IAAN,CAAW,yBAAX,EAAsC5D,KAAtC,EAA6CoD,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAA7C;AACD,KARD,MAQO;AACL,UAAIb,IAAI,KAAK,MAAb,EAAqBW,SAAS,IAAIE,UAAb;;AAErB,UAAI,CAAChB,MAAM,CAAC8D,aAAZ,EAA2B;AACzB7D,QAAAA,GAAG,CAAC8D,SAAJ,CAAc,iBAAiBjD,SAAjB,GAA6B,SAA3C,EAAsD6C,UAAtD,CAAiE,CAAjE;AACAzD,QAAAA,WAAW,CAACyD,UAAZ,CAAuB,CAAvB;AACA5C,QAAAA,eAAe,GAAG,IAAIiC,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAAtB;AACAd,QAAAA,WAAW,CAACoD,GAAZ,CAAgB;AACdU,UAAAA,OAAO,EAAEjD;AADK,SAAhB;AAGD;;AAEDd,MAAAA,GAAG,CAACsD,OAAJ,CAAY,aAAZ,EAA2BP,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAA3B;AACApB,MAAAA,KAAK,CAAC4D,IAAN,CAAW,yBAAX,EAAsC5D,KAAtC,EAA6CoD,IAAI,CAACC,GAAL,CAASnC,SAAS,GAAGE,UAArB,CAA7C;AACD;;AAED,QAAIhB,MAAM,CAAC8D,aAAX,EAA0B;AACxB,UAAIG,YAAY,GAAGrE,KAAK,CAACgC,MAAN,IAAgBiC,gBAAgB,KAAK,CAArC,IAA0C,CAACjE,KAAK,CAACgC,MAAP,IAAiBiC,gBAAgB,KAAK,CAAnG;;AAEA,UAAII,YAAJ,EAAkB;AAChBvD,QAAAA,aAAa,GAAG,IAAhB,CADgB,CACM;;AAEtBwD,QAAAA,cAAc,CAAC7C,CAAD,CAAd;AACD;AACF;AACF;;AAED,WAAS6C,cAAT,CAAwB7C,CAAxB,EAA2B;AACzB,QAAI,CAACf,SAAD,IAAc,CAACE,OAAnB,EAA4B;AAC1BF,MAAAA,SAAS,GAAG,KAAZ;AACAE,MAAAA,OAAO,GAAG,KAAV;AACA;AACD;;AAED,QAAI2D,SAAS,GAAG9C,CAAC,CAACY,IAAF,KAAW,cAAX,IAA6B1B,gBAA7C;AACAD,IAAAA,SAAS,GAAG,KAAZ;AACAE,IAAAA,OAAO,GAAG,KAAV;AACA,QAAI4D,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB1D,cAAtC;AACA,QAAI2D,MAAJ;AACA,QAAIC,IAAI,GAAG,CAAC1D,SAAS,KAAK,CAAd,IAAmBkC,IAAI,CAACC,GAAL,CAASnC,SAAT,MAAwBE,UAA5C,KAA2D,CAAChB,MAAM,CAAC8D,aAA9E;AACA,QAAIZ,SAAS,GAAGlD,MAAM,CAACmD,cAAP,IAAyB,CAAzC;;AAEA,QAAIgB,SAAJ,EAAe;AACbI,MAAAA,MAAM,GAAG,OAAT;AACD,KAFD,MAEO,IAAI,CAAC3E,KAAK,CAACgC,MAAX,EAAmB;AACxB,UAAIoB,IAAI,CAACC,GAAL,CAASpC,WAAT,IAAwBqC,SAA5B,EAAuC;AACrCqB,QAAAA,MAAM,GAAG,OAAT;AACD,OAFD,MAEO,IAAInE,MAAM,KAAK,OAAf,EAAwB;AAC7B,YAAIU,SAAS,KAAK,CAAlB,EAAqB;AACnByD,UAAAA,MAAM,GAAG,MAAT,CADmB,CACF;AAClB,SAFD,MAEO,IAAIH,QAAQ,GAAG,GAAX,IAAkBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,IAAsB,CAA5C,EAA+C;AACpDyD,UAAAA,MAAM,GAAG,MAAT,CADoD,CACnC;AAClB,SAFM,MAEA,IAAIH,QAAQ,IAAI,GAAZ,IAAmBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,IAAsBE,UAAU,GAAG,CAA1D,EAA6D;AAClEuD,UAAAA,MAAM,GAAG,MAAT,CADkE,CACjD;AAClB,SAFM,MAEA;AACLA,UAAAA,MAAM,GAAG,OAAT,CADK,CACa;AACnB;AACF,OAVM,MAUA,IAAIzD,SAAS,KAAK,CAAlB,EAAqB;AAC1ByD,QAAAA,MAAM,GAAG,OAAT;AACD,OAFM,MAEA,IAAIH,QAAQ,GAAG,GAAX,IAAkBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,IAAsB,CAAxC,IAA6CsD,QAAQ,IAAI,GAAZ,IAAmBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,KAAuBE,UAAU,GAAG,CAAxG,EAA2G;AAChHuD,QAAAA,MAAM,GAAG,MAAT;AACD,OAFM,MAEA;AACLA,QAAAA,MAAM,GAAG,OAAT;AACD;AACF,KApBM,MAoBA,IAAInE,MAAM,KAAK,OAAf,EAAwB;AAC7B,UAAIU,SAAS,KAAK,CAAlB,EAAqB;AACnByD,QAAAA,MAAM,GAAG,OAAT,CADmB,CACD;AACnB,OAFD,MAEO,IAAIH,QAAQ,GAAG,GAAX,IAAkBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,IAAsB,CAA5C,EAA+C;AACpDyD,QAAAA,MAAM,GAAG,MAAT,CADoD,CACnC;AAClB,OAFM,MAEA,IAAIH,QAAQ,IAAI,GAAZ,IAAmBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,IAAsBE,UAAU,GAAG,CAA1D,EAA6D;AAClEuD,QAAAA,MAAM,GAAG,OAAT,CADkE,CAChD;AACnB,OAFM,MAEA;AACLA,QAAAA,MAAM,GAAG,MAAT,CADK,CACY;AAClB;AACF,KAVM,MAUA,IAAIzD,SAAS,KAAK,CAACE,UAAnB,EAA+B;AACpCuD,MAAAA,MAAM,GAAG,OAAT;AACD,KAFM,MAEA,IAAIH,QAAQ,GAAG,GAAX,IAAkBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,KAAuB,CAAzC,IAA8CsD,QAAQ,IAAI,GAAZ,IAAmBpB,IAAI,CAACC,GAAL,CAASnC,SAAT,KAAuBE,UAAU,GAAG,CAAzG,EAA4G;AACjH,UAAIb,IAAI,KAAK,MAAT,IAAmBW,SAAS,KAAKE,UAArC,EAAiDuD,MAAM,GAAG,OAAT,CAAjD,KAAuEA,MAAM,GAAG,MAAT;AACxE,KAFM,MAEA;AACLA,MAAAA,MAAM,GAAG,OAAT;AACD;;AAED,QAAIA,MAAM,KAAK,MAAf,EAAuB;AACrB,UAAI3E,KAAK,CAACgC,MAAV,EAAkB;AAChBhC,QAAAA,KAAK,CAAC6E,KAAN,CAAY,CAACD,IAAb;AACD,OAFD,MAEO;AACL5E,QAAAA,KAAK,CAAC8E,IAAN,CAAW,CAACF,IAAZ;AACD;AACF;;AAED,QAAIG,kBAAkB,GAAG,IAAzB;;AAEA,QAAIJ,MAAM,KAAK,OAAf,EAAwB;AACtB,UAAI,CAAC3E,KAAK,CAACgC,MAAX,EAAmB;AACjB,YAAI4C,IAAJ,EAAU;AACR;AACAvE,UAAAA,GAAG,CAAC2E,WAAJ,CAAgB,gBAAhB;AACD,SAHD,MAGO;AACLD,UAAAA,kBAAkB,GAAG,KAArB;AACA,cAAI7C,MAAM,GAAG1B,MAAM,KAAK,QAAX,GAAsBc,OAAtB,GAAgCjB,GAA7C;AACAL,UAAAA,KAAK,CAACiF,eAAN,CAAsB,gBAAtB;AACA/C,UAAAA,MAAM,CAACgD,aAAP,CAAqB,YAAY;AAC/B,gBAAI7E,GAAG,CAAC4B,QAAJ,CAAa,UAAb,CAAJ,EAA8B;AAC9B5B,YAAAA,GAAG,CAAC2E,WAAJ,CAAgB,gBAAhB;AACAhF,YAAAA,KAAK,CAACiF,eAAN,CAAsB,eAAtB;AACD,WAJD;AAKD;AACF;AACF;;AAED,QAAIzE,MAAM,KAAK,QAAf,EAAyB;AACvBV,MAAAA,SAAS,CAAC,YAAY;AACpBwB,QAAAA,OAAO,CAACyC,UAAR,CAAmB,EAAnB;AACAzC,QAAAA,OAAO,CAAC6C,SAAR,CAAkB,EAAlB;AACD,OAHQ,CAAT;AAID;;AAED,QAAIY,kBAAJ,EAAwB;AACtB1E,MAAAA,GAAG,CAAC2E,WAAJ,CAAgB,gBAAhB;AACD;;AAED3E,IAAAA,GAAG,CAAC0D,UAAJ,CAAe,EAAf,EAAmBI,SAAnB,CAA6B,EAA7B;AACA7D,IAAAA,WAAW,CAAC6D,SAAZ,CAAsB,EAAtB,EAA0BJ,UAA1B,CAAqC,EAArC,EAAyCL,GAAzC,CAA6C;AAC3CU,MAAAA,OAAO,EAAE,EADkC;AAE3Ce,MAAAA,UAAU,EAAE;AAF+B,KAA7C;AAID;;AAED,WAASC,kBAAT,CAA4B3D,CAA5B,EAA+B;AAC7Bd,IAAAA,gBAAgB,GAAG,IAAnB;AACA2D,IAAAA,cAAc,CAAC7C,CAAD,CAAd;AACD;;AAED,WAAS4D,gBAAT,GAA4B;AAC1B1E,IAAAA,gBAAgB,GAAG,KAAnB;AACD,GAnUwB,CAmUvB;;;AAGFV,EAAAA,GAAG,CAACqF,EAAJ,CAAO,oBAAP,EAA6B9D,gBAA7B;AACAvB,EAAAA,GAAG,CAACqF,EAAJ,CAAO,kBAAP,EAA2BtC,eAA3B;AACA/C,EAAAA,GAAG,CAACqF,EAAJ,CAAO,kBAAP,EAA2BhB,cAA3B;AACArE,EAAAA,GAAG,CAACqF,EAAJ,CAAO,cAAP,EAAuBF,kBAAvB;AACAnF,EAAAA,GAAG,CAACqF,EAAJ,CAAO,YAAP,EAAqBD,gBAArB;AACArF,EAAAA,KAAK,CAACsF,EAAN,CAAS,cAAT,EAAyB,YAAY;AACnCrF,IAAAA,GAAG,CAACsF,GAAJ,CAAQ,oBAAR,EAA8B/D,gBAA9B;AACAvB,IAAAA,GAAG,CAACsF,GAAJ,CAAQ,kBAAR,EAA4BvC,eAA5B;AACA/C,IAAAA,GAAG,CAACsF,GAAJ,CAAQ,kBAAR,EAA4BjB,cAA5B;AACArE,IAAAA,GAAG,CAACsF,GAAJ,CAAQ,cAAR,EAAwBH,kBAAxB;AACAnF,IAAAA,GAAG,CAACsF,GAAJ,CAAQ,YAAR,EAAsBF,gBAAtB;AACD,GAND;AAOD;;AAED,eAAetF,UAAf","sourcesContent":["import $ from '../../shared/dom7';\nimport { extend, now, nextFrame } from '../../shared/utils';\n\nfunction swipePanel(panel) {\n  var app = panel.app;\n\n  if (panel.swipeInitialized) {\n    return;\n  }\n\n  extend(panel, {\n    swipeable: true,\n    swipeInitialized: true\n  });\n  var params = panel.params;\n  var $el = panel.$el,\n      $backdropEl = panel.$backdropEl,\n      side = panel.side,\n      effect = panel.effect;\n  var otherPanel;\n  var isTouched;\n  var isGestureStarted;\n  var isMoved;\n  var isScrolling;\n  var isInterrupted;\n  var touchesStart = {};\n  var touchStartTime;\n  var touchesDiff;\n  var translate;\n  var backdropOpacity;\n  var panelWidth;\n  var direction;\n  var $viewEl;\n  var touchMoves = 0;\n\n  function handleTouchStart(e) {\n    if (!panel.swipeable || isGestureStarted) return;\n    if (!app.panel.allowOpen || !params.swipe && !params.swipeOnlyClose || isTouched) return;\n    if ($('.modal-in:not(.toast):not(.notification), .photo-browser-in').length > 0) return;\n    otherPanel = app.panel.get(side === 'left' ? 'right' : 'left') || {};\n    var otherPanelOpened = otherPanel.opened && otherPanel.$el && !otherPanel.$el.hasClass('panel-in-breakpoint');\n\n    if (!panel.opened && otherPanelOpened) {\n      return;\n    }\n\n    if (!params.swipeOnlyClose) {\n      if (otherPanelOpened) return;\n    }\n\n    if (e.target && e.target.nodeName.toLowerCase() === 'input' && e.target.type === 'range') return;\n    if ($(e.target).closest('.range-slider, .tabs-swipeable-wrap, .calendar-months, .no-swipe-panel, .card-opened').length > 0) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (params.swipeOnlyClose && !panel.opened) {\n      return;\n    }\n\n    if (params.swipeActiveArea && !panel.opened) {\n      if (side === 'left') {\n        if (touchesStart.x > params.swipeActiveArea) return;\n      }\n\n      if (side === 'right') {\n        if (touchesStart.x < app.width - params.swipeActiveArea) return;\n      }\n    }\n\n    touchMoves = 0;\n    $viewEl = $(panel.getViewEl());\n    isMoved = false;\n    isTouched = true;\n    isScrolling = undefined;\n    isInterrupted = false;\n    touchStartTime = now();\n    direction = undefined;\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched || isGestureStarted || isInterrupted) return;\n    touchMoves += 1;\n    if (touchMoves < 2) return;\n\n    if (e.f7PreventSwipePanel || app.preventSwipePanelBySwipeBack || app.preventSwipePanel) {\n      isTouched = false;\n      return;\n    }\n\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (typeof isScrolling === 'undefined') {\n      isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));\n    }\n\n    if (isScrolling) {\n      isTouched = false;\n      return;\n    }\n\n    if (!direction) {\n      if (pageX > touchesStart.x) {\n        direction = 'to-right';\n      } else {\n        direction = 'to-left';\n      }\n\n      if (params.swipeActiveArea > 0 && !panel.opened) {\n        if (side === 'left' && touchesStart.x > params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n\n        if (side === 'right' && touchesStart.x < app.width - params.swipeActiveArea) {\n          isTouched = false;\n          return;\n        }\n      }\n\n      if ($el.hasClass('panel-in-breakpoint')) {\n        isTouched = false;\n        return;\n      }\n\n      if (side === 'left' && direction === 'to-left' && !$el.hasClass('panel-in') || side === 'right' && direction === 'to-right' && !$el.hasClass('panel-in')) {\n        isTouched = false;\n        return;\n      }\n    }\n\n    var threshold = panel.opened ? 0 : -params.swipeThreshold;\n    if (side === 'right') threshold = -threshold;\n\n    if (!isMoved) {\n      if (!panel.opened) {\n        panel.insertToRoot();\n        $el.addClass('panel-in-swipe');\n        $backdropEl.css('visibility', 'visible');\n        $el.trigger('panel:swipeopen');\n        panel.emit('local::swipeOpen panelSwipeOpen', panel);\n      }\n\n      panelWidth = $el[0].offsetWidth;\n\n      if (effect === 'reveal' && $el.hasClass('panel-in-collapsed')) {\n        panelWidth -= parseFloat($viewEl.css(\"margin-\" + side));\n      }\n\n      $el.transition(0);\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x + threshold;\n\n    if (side === 'right') {\n      if (effect === 'cover') {\n        translate = touchesDiff + (panel.opened ? 0 : panelWidth);\n        if (translate < 0) translate = 0;\n\n        if (translate > panelWidth) {\n          translate = panelWidth;\n        }\n      } else {\n        translate = touchesDiff - (panel.opened ? panelWidth : 0);\n        if (translate > 0) translate = 0;\n\n        if (translate < -panelWidth) {\n          translate = -panelWidth;\n        }\n      }\n    } else {\n      translate = touchesDiff + (panel.opened ? panelWidth : 0);\n      if (translate < 0) translate = 0;\n\n      if (translate > panelWidth) {\n        translate = panelWidth;\n      }\n    }\n\n    var noFollowProgress = Math.abs(translate / panelWidth);\n\n    if (effect === 'reveal') {\n      if (!params.swipeNoFollow) {\n        $viewEl.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n        $backdropEl.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    } else {\n      if (side === 'left') translate -= panelWidth;\n\n      if (!params.swipeNoFollow) {\n        $el.transform(\"translate3d(\" + translate + \"px,0,0)\").transition(0);\n        $backdropEl.transition(0);\n        backdropOpacity = 1 - Math.abs(translate / panelWidth);\n        $backdropEl.css({\n          opacity: backdropOpacity\n        });\n      }\n\n      $el.trigger('panel:swipe', Math.abs(translate / panelWidth));\n      panel.emit('local::swipe panelSwipe', panel, Math.abs(translate / panelWidth));\n    }\n\n    if (params.swipeNoFollow) {\n      var stateChanged = panel.opened && noFollowProgress === 0 || !panel.opened && noFollowProgress === 1;\n\n      if (stateChanged) {\n        isInterrupted = true; // eslint-disable-next-line\n\n        handleTouchEnd(e);\n      }\n    }\n  }\n\n  function handleTouchEnd(e) {\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    var isGesture = e.type === 'gesturestart' || isGestureStarted;\n    isTouched = false;\n    isMoved = false;\n    var timeDiff = new Date().getTime() - touchStartTime;\n    var action;\n    var edge = (translate === 0 || Math.abs(translate) === panelWidth) && !params.swipeNoFollow;\n    var threshold = params.swipeThreshold || 0;\n\n    if (isGesture) {\n      action = 'reset';\n    } else if (!panel.opened) {\n      if (Math.abs(touchesDiff) < threshold) {\n        action = 'reset';\n      } else if (effect === 'cover') {\n        if (translate === 0) {\n          action = 'swap'; // open\n        } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n          action = 'swap'; // open\n        } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n          action = 'swap'; // open\n        } else {\n          action = 'reset'; // close\n        }\n      } else if (translate === 0) {\n        action = 'reset';\n      } else if (timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2) {\n        action = 'swap';\n      } else {\n        action = 'reset';\n      }\n    } else if (effect === 'cover') {\n      if (translate === 0) {\n        action = 'reset'; // open\n      } else if (timeDiff < 300 && Math.abs(translate) > 0) {\n        action = 'swap'; // open\n      } else if (timeDiff >= 300 && Math.abs(translate) < panelWidth / 2) {\n        action = 'reset'; // open\n      } else {\n        action = 'swap'; // close\n      }\n    } else if (translate === -panelWidth) {\n      action = 'reset';\n    } else if (timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2) {\n      if (side === 'left' && translate === panelWidth) action = 'reset';else action = 'swap';\n    } else {\n      action = 'reset';\n    }\n\n    if (action === 'swap') {\n      if (panel.opened) {\n        panel.close(!edge);\n      } else {\n        panel.open(!edge);\n      }\n    }\n\n    var removePanelInClass = true;\n\n    if (action === 'reset') {\n      if (!panel.opened) {\n        if (edge) {\n          // edge position\n          $el.removeClass('panel-in-swipe');\n        } else {\n          removePanelInClass = false;\n          var target = effect === 'reveal' ? $viewEl : $el;\n          panel.setStateClasses('before-closing');\n          target.transitionEnd(function () {\n            if ($el.hasClass('panel-in')) return;\n            $el.removeClass('panel-in-swipe');\n            panel.setStateClasses('after-closing');\n          });\n        }\n      }\n    }\n\n    if (effect === 'reveal') {\n      nextFrame(function () {\n        $viewEl.transition('');\n        $viewEl.transform('');\n      });\n    }\n\n    if (removePanelInClass) {\n      $el.removeClass('panel-in-swipe');\n    }\n\n    $el.transition('').transform('');\n    $backdropEl.transform('').transition('').css({\n      opacity: '',\n      visibility: ''\n    });\n  }\n\n  function handleGestureStart(e) {\n    isGestureStarted = true;\n    handleTouchEnd(e);\n  }\n\n  function handleGestureEnd() {\n    isGestureStarted = false;\n  } // Add Events\n\n\n  app.on('touchstart:passive', handleTouchStart);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('gesturestart', handleGestureStart);\n  app.on('gestureend', handleGestureEnd);\n  panel.on('panelDestroy', function () {\n    app.off('touchstart:passive', handleTouchStart);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('gesturestart', handleGestureStart);\n    app.off('gestureend', handleGestureEnd);\n  });\n}\n\nexport default swipePanel;"]},"metadata":{},"sourceType":"module"}