{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { bindMethods } from '../../shared/utils';\nvar InfiniteScroll = {\n  handle: function handle(el, e) {\n    var app = this;\n    var $el = $(el);\n    var scrollTop = $el[0].scrollTop;\n    var scrollHeight = $el[0].scrollHeight;\n    var height = $el[0].offsetHeight;\n    var distance = $el[0].getAttribute('data-infinite-distance');\n    var virtualListContainer = $el.find('.virtual-list');\n    var virtualList;\n    var onTop = $el.hasClass('infinite-scroll-top');\n    if (!distance) distance = 50;\n\n    if (typeof distance === 'string' && distance.indexOf('%') >= 0) {\n      distance = parseInt(distance, 10) / 100 * height;\n    }\n\n    if (distance > height) distance = height;\n\n    if (onTop) {\n      if (scrollTop < distance) {\n        $el.trigger('infinite', e);\n        app.emit('infinite', $el[0], e);\n      }\n    } else if (scrollTop + height >= scrollHeight - distance) {\n      if (virtualListContainer.length > 0) {\n        virtualList = virtualListContainer.eq(-1)[0].f7VirtualList;\n\n        if (virtualList && !virtualList.reachEnd && !virtualList.params.updatableScroll) {\n          return;\n        }\n      }\n\n      $el.trigger('infinite', e);\n      app.emit('infinite', $el[0], e);\n    }\n  },\n  create: function create(el) {\n    var $el = $(el);\n    var app = this;\n\n    function scrollHandler(e) {\n      app.infiniteScroll.handle(this, e);\n    }\n\n    $el.each(function (element) {\n      element.f7InfiniteScrollHandler = scrollHandler;\n      element.addEventListener('scroll', element.f7InfiniteScrollHandler);\n    });\n  },\n  destroy: function destroy(el) {\n    var $el = $(el);\n    $el.each(function (element) {\n      element.removeEventListener('scroll', element.f7InfiniteScrollHandler);\n      delete element.f7InfiniteScrollHandler;\n    });\n  }\n};\nexport default {\n  name: 'infiniteScroll',\n  create: function create() {\n    var app = this;\n    bindMethods(app, {\n      infiniteScroll: InfiniteScroll\n    });\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      var $tabEl = $(tabEl);\n      var $isEls = $tabEl.find('.infinite-scroll-content');\n      if ($tabEl.is('.infinite-scroll-content')) $isEls.add($tabEl);\n      $isEls.each(function (el) {\n        app.infiniteScroll.create(el);\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      var $tabEl = $(tabEl);\n      var app = this;\n      var $isEls = $tabEl.find('.infinite-scroll-content');\n      if ($tabEl.is('.infinite-scroll-content')) $isEls.add($tabEl);\n      $isEls.each(function (el) {\n        app.infiniteScroll.destroy(el);\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.infinite-scroll-content').each(function (el) {\n        app.infiniteScroll.create(el);\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      var app = this;\n      page.$el.find('.infinite-scroll-content').each(function (el) {\n        app.infiniteScroll.destroy(el);\n      });\n    }\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/components/infinite-scroll/infinite-scroll.js"],"names":["$","bindMethods","InfiniteScroll","handle","el","e","app","$el","scrollTop","scrollHeight","height","offsetHeight","distance","getAttribute","virtualListContainer","find","virtualList","onTop","hasClass","indexOf","parseInt","trigger","emit","length","eq","f7VirtualList","reachEnd","params","updatableScroll","create","scrollHandler","infiniteScroll","each","element","f7InfiniteScrollHandler","addEventListener","destroy","removeEventListener","name","on","tabMounted","tabEl","$tabEl","$isEls","is","add","tabBeforeRemove","pageInit","page","pageBeforeRemove"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom7';\nimport { bindMethods } from '../../shared/utils';\nvar InfiniteScroll = {\n  handle: function handle(el, e) {\n    var app = this;\n    var $el = $(el);\n    var scrollTop = $el[0].scrollTop;\n    var scrollHeight = $el[0].scrollHeight;\n    var height = $el[0].offsetHeight;\n    var distance = $el[0].getAttribute('data-infinite-distance');\n    var virtualListContainer = $el.find('.virtual-list');\n    var virtualList;\n    var onTop = $el.hasClass('infinite-scroll-top');\n    if (!distance) distance = 50;\n\n    if (typeof distance === 'string' && distance.indexOf('%') >= 0) {\n      distance = parseInt(distance, 10) / 100 * height;\n    }\n\n    if (distance > height) distance = height;\n\n    if (onTop) {\n      if (scrollTop < distance) {\n        $el.trigger('infinite', e);\n        app.emit('infinite', $el[0], e);\n      }\n    } else if (scrollTop + height >= scrollHeight - distance) {\n      if (virtualListContainer.length > 0) {\n        virtualList = virtualListContainer.eq(-1)[0].f7VirtualList;\n\n        if (virtualList && !virtualList.reachEnd && !virtualList.params.updatableScroll) {\n          return;\n        }\n      }\n\n      $el.trigger('infinite', e);\n      app.emit('infinite', $el[0], e);\n    }\n  },\n  create: function create(el) {\n    var $el = $(el);\n    var app = this;\n\n    function scrollHandler(e) {\n      app.infiniteScroll.handle(this, e);\n    }\n\n    $el.each(function (element) {\n      element.f7InfiniteScrollHandler = scrollHandler;\n      element.addEventListener('scroll', element.f7InfiniteScrollHandler);\n    });\n  },\n  destroy: function destroy(el) {\n    var $el = $(el);\n    $el.each(function (element) {\n      element.removeEventListener('scroll', element.f7InfiniteScrollHandler);\n      delete element.f7InfiniteScrollHandler;\n    });\n  }\n};\nexport default {\n  name: 'infiniteScroll',\n  create: function create() {\n    var app = this;\n    bindMethods(app, {\n      infiniteScroll: InfiniteScroll\n    });\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      var $tabEl = $(tabEl);\n      var $isEls = $tabEl.find('.infinite-scroll-content');\n      if ($tabEl.is('.infinite-scroll-content')) $isEls.add($tabEl);\n      $isEls.each(function (el) {\n        app.infiniteScroll.create(el);\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      var $tabEl = $(tabEl);\n      var app = this;\n      var $isEls = $tabEl.find('.infinite-scroll-content');\n      if ($tabEl.is('.infinite-scroll-content')) $isEls.add($tabEl);\n      $isEls.each(function (el) {\n        app.infiniteScroll.destroy(el);\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.infinite-scroll-content').each(function (el) {\n        app.infiniteScroll.create(el);\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      var app = this;\n      page.$el.find('.infinite-scroll-content').each(function (el) {\n        app.infiniteScroll.destroy(el);\n      });\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}