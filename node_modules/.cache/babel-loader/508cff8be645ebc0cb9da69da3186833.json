{"ast":null,"code":"/** @jsx $jsx */\nimport $jsx from '../../../shared/$jsx';\nexport default {\n  render: function render(self) {\n    var _self$params = self.params,\n        hexLabel = _self$params.hexLabel,\n        hexLabelText = _self$params.hexLabelText,\n        hexValueEditable = _self$params.hexValueEditable;\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-hex\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hex-wrap\"\n    }, hexLabel && $jsx(\"div\", {\n      class: \"color-picker-hex-label\"\n    }, hexLabelText), $jsx(\"div\", {\n      class: \"color-picker-hex-value\"\n    }, hexValueEditable ? $jsx(\"input\", {\n      type: \"text\",\n      class: \"color-picker-value-hex\"\n    }) : $jsx(\"span\", {\n      class: \"color-picker-value-hex\"\n    }))));\n  },\n  init: function init(self) {\n    function handleInputChange(e) {\n      var hex = self.value.hex;\n      var value = e.target.value.replace(/#/g, '');\n\n      if (Number.isNaN(value) || !value || value.length !== 3 && value.length !== 6) {\n        e.target.value = hex;\n        return;\n      }\n\n      var min = 0;\n      var current = parseInt(value, 16);\n      var max = parseInt('ffffff', 16); // eslint-disable-line\n\n      if (current > max) {\n        value = 'fff';\n      }\n\n      if (current < min) {\n        value = '000';\n      }\n\n      self.setValue({\n        hex: value\n      });\n    }\n\n    self.$el.on('change', '.color-picker-module-hex input', handleInputChange);\n\n    self.destroyHexEvents = function destroyHexEvents() {\n      self.$el.off('change', '.color-picker-module-hex input', handleInputChange);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hexValueEditable = self.params.hexValueEditable;\n    var hex = value.hex;\n\n    if (hexValueEditable) {\n      self.$el.find('input.color-picker-value-hex').val(hex);\n    } else {\n      self.$el.find('span.color-picker-value-hex').text(hex);\n    }\n  },\n  destroy: function destroy(self) {\n    if (self.destroyHexEvents) self.destroyHexEvents();\n    delete self.destroyHexEvents;\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/color-picker/modules/hex.js"],"names":["$jsx","render","self","_self$params","params","hexLabel","hexLabelText","hexValueEditable","class","type","init","handleInputChange","e","hex","value","target","replace","Number","isNaN","length","min","current","parseInt","max","setValue","$el","on","destroyHexEvents","off","update","find","val","text","destroy"],"mappings":"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","sourcesContent":["/** @jsx $jsx */\nimport $jsx from '../../../shared/$jsx';\nexport default {\n  render: function render(self) {\n    var _self$params = self.params,\n        hexLabel = _self$params.hexLabel,\n        hexLabelText = _self$params.hexLabelText,\n        hexValueEditable = _self$params.hexValueEditable;\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-hex\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hex-wrap\"\n    }, hexLabel && $jsx(\"div\", {\n      class: \"color-picker-hex-label\"\n    }, hexLabelText), $jsx(\"div\", {\n      class: \"color-picker-hex-value\"\n    }, hexValueEditable ? $jsx(\"input\", {\n      type: \"text\",\n      class: \"color-picker-value-hex\"\n    }) : $jsx(\"span\", {\n      class: \"color-picker-value-hex\"\n    }))));\n  },\n  init: function init(self) {\n    function handleInputChange(e) {\n      var hex = self.value.hex;\n      var value = e.target.value.replace(/#/g, '');\n\n      if (Number.isNaN(value) || !value || value.length !== 3 && value.length !== 6) {\n        e.target.value = hex;\n        return;\n      }\n\n      var min = 0;\n      var current = parseInt(value, 16);\n      var max = parseInt('ffffff', 16); // eslint-disable-line\n\n      if (current > max) {\n        value = 'fff';\n      }\n\n      if (current < min) {\n        value = '000';\n      }\n\n      self.setValue({\n        hex: value\n      });\n    }\n\n    self.$el.on('change', '.color-picker-module-hex input', handleInputChange);\n\n    self.destroyHexEvents = function destroyHexEvents() {\n      self.$el.off('change', '.color-picker-module-hex input', handleInputChange);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hexValueEditable = self.params.hexValueEditable;\n    var hex = value.hex;\n\n    if (hexValueEditable) {\n      self.$el.find('input.color-picker-value-hex').val(hex);\n    } else {\n      self.$el.find('span.color-picker-value-hex').text(hex);\n    }\n  },\n  destroy: function destroy(self) {\n    if (self.destroyHexEvents) self.destroyHexEvents();\n    delete self.destroyHexEvents;\n  }\n};"]},"metadata":{},"sourceType":"module"}