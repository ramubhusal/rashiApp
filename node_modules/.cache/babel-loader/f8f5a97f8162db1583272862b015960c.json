{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend, parseUrlQuery } from '../../shared/utils';\nimport History from '../../shared/history';\nimport redirect from './redirect';\nimport processRouteQueue from './process-route-queue';\nimport appRouterCheck from './app-router-check';\nimport asyncComponent from './async-component';\n\nfunction refreshPage() {\n  var router = this;\n  appRouterCheck(router, 'refreshPage');\n  return router.navigate(router.currentRoute.url, {\n    ignoreCache: true,\n    reloadCurrent: true\n  });\n}\n\nfunction forward(router, el, forwardOptions) {\n  if (forwardOptions === void 0) {\n    forwardOptions = {};\n  }\n\n  var document = getDocument();\n  var $el = $(el);\n  var app = router.app;\n  var view = router.view;\n  var options = extend(false, {\n    animate: router.params.animate,\n    browserHistory: true,\n    replaceState: false,\n    history: true,\n    reloadCurrent: router.params.reloadPages,\n    reloadPrevious: false,\n    reloadAll: false,\n    clearPreviousHistory: false,\n    reloadDetail: router.params.reloadDetail,\n    on: {}\n  }, forwardOptions);\n  var masterDetailEnabled = router.params.masterDetailBreakpoint > 0;\n  var isMaster = masterDetailEnabled && options.route && options.route.route && (options.route.route.master === true || typeof options.route.route.master === 'function' && options.route.route.master(app, router));\n  var masterPageEl;\n  var otherDetailPageEl;\n  var detailsInBetweenRemoved = 0;\n  var currentRouteIsModal = router.currentRoute.modal;\n  var modalType;\n\n  if (!currentRouteIsModal) {\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (router.currentRoute && router.currentRoute.route && router.currentRoute.route[modalLoadProp]) {\n        currentRouteIsModal = true;\n        modalType = modalLoadProp;\n      }\n    });\n  }\n\n  if (currentRouteIsModal) {\n    var modalToClose = router.currentRoute.modal || router.currentRoute.route.modalInstance || app[modalType].get();\n    var previousUrl = router.history[router.history.length - 2];\n    var previousRoute = router.findMatchingRoute(previousUrl);\n\n    if (!previousRoute && previousUrl) {\n      previousRoute = {\n        url: previousUrl,\n        path: previousUrl.split('?')[0],\n        query: parseUrlQuery(previousUrl),\n        route: {\n          path: previousUrl.split('?')[0],\n          url: previousUrl\n        }\n      };\n    }\n\n    router.modalRemove(modalToClose);\n  }\n\n  var dynamicNavbar = router.dynamicNavbar;\n  var $viewEl = router.$el;\n  var $newPage = $el;\n  var reload = options.reloadPrevious || options.reloadCurrent || options.reloadAll;\n  var $oldPage;\n  var $navbarsEl;\n  var $newNavbarEl;\n  var $oldNavbarEl;\n  router.allowPageChange = false;\n\n  if ($newPage.length === 0) {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if ($newPage.length) {\n    // Remove theme elements\n    router.removeThemeElements($newPage);\n  }\n\n  if (dynamicNavbar) {\n    $newNavbarEl = $newPage.children('.navbar');\n    $navbarsEl = router.$navbarsEl;\n\n    if ($newNavbarEl.length === 0 && $newPage[0] && $newPage[0].f7Page) {\n      // Try from pageData\n      $newNavbarEl = $newPage[0].f7Page.$navbarEl;\n    }\n  } // Save Keep Alive Cache\n\n\n  if (options.route && options.route.route && options.route.route.keepAlive && !options.route.route.keepAliveData) {\n    options.route.route.keepAliveData = {\n      pageEl: $el[0]\n    };\n  } // Pages In View\n\n\n  var $pagesInView = $viewEl.children('.page:not(.stacked)').filter(function (pageInView) {\n    return pageInView !== $newPage[0];\n  }); // Navbars In View\n\n  var $navbarsInView;\n\n  if (dynamicNavbar) {\n    $navbarsInView = $navbarsEl.children('.navbar:not(.stacked)').filter(function (navbarInView) {\n      return navbarInView !== $newNavbarEl[0];\n    });\n  } // Exit when reload previous and only 1 page in view so nothing ro reload\n\n\n  if (options.reloadPrevious && $pagesInView.length < 2) {\n    router.allowPageChange = true;\n    return router;\n  } // Find Detail' master page\n\n\n  var isDetail;\n  var reloadDetail;\n  var isDetailRoot;\n\n  if (masterDetailEnabled && !options.reloadAll) {\n    for (var i = 0; i < $pagesInView.length; i += 1) {\n      if (!masterPageEl && $pagesInView[i].classList.contains('page-master')) {\n        masterPageEl = $pagesInView[i];\n        continue; // eslint-disable-line\n      }\n    }\n\n    isDetail = !isMaster && masterPageEl;\n\n    if (isDetail) {\n      // Find Other Detail\n      if (masterPageEl) {\n        for (var _i = 0; _i < $pagesInView.length; _i += 1) {\n          if ($pagesInView[_i].classList.contains('page-master-detail')) {\n            otherDetailPageEl = $pagesInView[_i];\n            continue; // eslint-disable-line\n          }\n        }\n      }\n    }\n\n    reloadDetail = isDetail && options.reloadDetail && app.width >= router.params.masterDetailBreakpoint && masterPageEl;\n  }\n\n  if (isDetail) {\n    isDetailRoot = !otherDetailPageEl || reloadDetail || options.reloadAll || options.reloadCurrent;\n  } // New Page\n\n\n  var newPagePosition = 'next';\n\n  if (options.reloadCurrent || options.reloadAll || reloadDetail) {\n    newPagePosition = 'current';\n  } else if (options.reloadPrevious) {\n    newPagePosition = 'previous';\n  }\n\n  $newPage.removeClass('page-previous page-current page-next').addClass(\"page-\" + newPagePosition + (isMaster ? ' page-master' : '') + (isDetail ? ' page-master-detail' : '') + (isDetailRoot ? ' page-master-detail-root' : '')).removeClass('stacked').trigger('page:unstack').trigger('page:position', {\n    position: newPagePosition\n  });\n  router.emit('pageUnstack', $newPage[0]);\n  router.emit('pagePosition', $newPage[0], newPagePosition);\n\n  if (isMaster || isDetail) {\n    $newPage.trigger('page:role', {\n      role: isMaster ? 'master' : 'detail',\n      root: !!isDetailRoot\n    });\n    router.emit('pageRole', $newPage[0], {\n      role: isMaster ? 'master' : 'detail',\n      detailRoot: !!isDetailRoot\n    });\n  }\n\n  if (dynamicNavbar && $newNavbarEl.length) {\n    $newNavbarEl.removeClass('navbar-previous navbar-current navbar-next').addClass(\"navbar-\" + newPagePosition + (isMaster ? ' navbar-master' : '') + (isDetail ? ' navbar-master-detail' : '') + (isDetailRoot ? ' navbar-master-detail-root' : '')).removeClass('stacked');\n    $newNavbarEl.trigger('navbar:position', {\n      position: newPagePosition\n    });\n    router.emit('navbarPosition', $newNavbarEl[0], newPagePosition);\n\n    if (isMaster || isDetail) {\n      router.emit('navbarRole', $newNavbarEl[0], {\n        role: isMaster ? 'master' : 'detail',\n        detailRoot: !!isDetailRoot\n      });\n    }\n  } // Find Old Page\n\n\n  if (options.reloadCurrent || reloadDetail) {\n    if (reloadDetail) {\n      $oldPage = $pagesInView.filter(function (pageEl) {\n        return !pageEl.classList.contains('page-master');\n      });\n\n      if (dynamicNavbar) {\n        $oldNavbarEl = $($oldPage.map(function (pageEl) {\n          return app.navbar.getElByPage(pageEl);\n        }));\n      }\n\n      if ($oldPage.length > 1 && masterPageEl) {\n        detailsInBetweenRemoved = $oldPage.length - 1;\n        $(masterPageEl).removeClass('page-master-stacked').trigger('page:masterunstack');\n        router.emit('pageMasterUnstack', masterPageEl);\n\n        if (dynamicNavbar) {\n          $(app.navbar.getElByPage(masterPageEl)).removeClass('navbar-master-stacked');\n          router.emit('navbarMasterUnstack', app.navbar.getElByPage(masterPageEl));\n        }\n      }\n    } else {\n      $oldPage = $pagesInView.eq($pagesInView.length - 1);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl = $(app.navbar.getElByPage($oldPage));\n      }\n    }\n  } else if (options.reloadPrevious) {\n    $oldPage = $pagesInView.eq($pagesInView.length - 2);\n\n    if (dynamicNavbar) {\n      // $oldNavbarEl = $navbarsInView.eq($pagesInView.length - 2);\n      $oldNavbarEl = $(app.navbar.getElByPage($oldPage));\n    }\n  } else if (options.reloadAll) {\n    $oldPage = $pagesInView.filter(function (pageEl) {\n      return pageEl !== $newPage[0];\n    });\n\n    if (dynamicNavbar) {\n      $oldNavbarEl = $navbarsInView.filter(function (navbarEl) {\n        return navbarEl !== $newNavbarEl[0];\n      });\n    }\n  } else {\n    var removedPageEls = [];\n    var removedNavbarEls = [];\n\n    if ($pagesInView.length > 1) {\n      var _i2 = 0;\n\n      for (_i2 = 0; _i2 < $pagesInView.length - 1; _i2 += 1) {\n        if (masterPageEl && $pagesInView[_i2] === masterPageEl) {\n          $pagesInView.eq(_i2).addClass('page-master-stacked');\n          $pagesInView.eq(_i2).trigger('page:masterstack');\n          router.emit('pageMasterStack', $pagesInView[_i2]);\n\n          if (dynamicNavbar) {\n            $(app.navbar.getElByPage(masterPageEl)).addClass('navbar-master-stacked');\n            router.emit('navbarMasterStack', app.navbar.getElByPage(masterPageEl));\n          }\n\n          continue; // eslint-disable-line\n        }\n\n        var oldNavbarEl = app.navbar.getElByPage($pagesInView.eq(_i2));\n\n        if (router.params.stackPages) {\n          $pagesInView.eq(_i2).addClass('stacked');\n          $pagesInView.eq(_i2).trigger('page:stack');\n          router.emit('pageStack', $pagesInView[_i2]);\n\n          if (dynamicNavbar) {\n            $(oldNavbarEl).addClass('stacked');\n          }\n        } else {\n          // Page remove event\n          removedPageEls.push($pagesInView[_i2]);\n          router.pageCallback('beforeRemove', $pagesInView[_i2], $navbarsInView && $navbarsInView[_i2], 'previous', undefined, options);\n          router.removePage($pagesInView[_i2]);\n\n          if (dynamicNavbar && oldNavbarEl) {\n            removedNavbarEls.push(oldNavbarEl);\n            router.removeNavbar(oldNavbarEl);\n          }\n        }\n      }\n    }\n\n    $oldPage = $viewEl.children('.page:not(.stacked)').filter(function (pageEl) {\n      return pageEl !== $newPage[0] && removedPageEls.indexOf(pageEl) < 0;\n    });\n\n    if (dynamicNavbar) {\n      $oldNavbarEl = $navbarsEl.children('.navbar:not(.stacked)').filter(function (navbarEl) {\n        return navbarEl !== $newNavbarEl[0] && removedNavbarEls.indexOf(removedNavbarEls) < 0;\n      });\n    }\n\n    removedPageEls = [];\n    removedNavbarEls = [];\n  }\n\n  if (isDetail && !options.reloadAll) {\n    if ($oldPage.length > 1 || reloadDetail) {\n      $oldPage = $oldPage.filter(function (pageEl) {\n        return !pageEl.classList.contains('page-master');\n      });\n    }\n\n    if ($oldNavbarEl && ($oldNavbarEl.length > 1 || reloadDetail)) {\n      $oldNavbarEl = $oldNavbarEl.filter(function (navbarEl) {\n        return !navbarEl.classList.contains('navbar-master');\n      });\n    }\n  } // Push State\n\n\n  if (router.params.browserHistory && (options.browserHistory || options.replaceState) && !options.reloadPrevious) {\n    var browserHistoryRoot = router.params.browserHistoryRoot || '';\n    History[options.reloadCurrent || reloadDetail && otherDetailPageEl || options.reloadAll || options.replaceState ? 'replace' : 'push'](view.id, {\n      url: options.route.url\n    }, browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n  }\n\n  if (!options.reloadPrevious) {\n    // Current Page & Navbar\n    router.currentPageEl = $newPage[0];\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      router.currentNavbarEl = $newNavbarEl[0];\n    } else {\n      delete router.currentNavbarEl;\n    } // Current Route\n\n\n    router.currentRoute = options.route;\n  } // Update router history\n\n\n  var url = options.route.url;\n\n  if (options.history) {\n    if (((options.reloadCurrent || reloadDetail && otherDetailPageEl) && router.history.length) > 0 || options.replaceState) {\n      if (reloadDetail && detailsInBetweenRemoved > 0) {\n        router.history = router.history.slice(0, router.history.length - detailsInBetweenRemoved);\n      }\n\n      router.history[router.history.length - (options.reloadPrevious ? 2 : 1)] = url;\n    } else if (options.reloadPrevious) {\n      router.history[router.history.length - 2] = url;\n    } else if (options.reloadAll) {\n      router.history = [url];\n    } else {\n      router.history.push(url);\n    }\n  }\n\n  router.saveHistory(); // Insert new page and navbar\n\n  var newPageInDom = $newPage.parents(document).length > 0;\n  var f7Component = $newPage[0].f7Component;\n\n  if (options.reloadPrevious) {\n    if (f7Component && !newPageInDom) {\n      f7Component.mount(function (componentEl) {\n        $(componentEl).insertBefore($oldPage);\n      });\n    } else {\n      $newPage.insertBefore($oldPage);\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      if ($oldNavbarEl.length) {\n        $newNavbarEl.insertBefore($oldNavbarEl);\n      } else {\n        if (!router.$navbarsEl.parents(document).length) {\n          router.$el.prepend(router.$navbarsEl);\n        }\n\n        $navbarsEl.append($newNavbarEl);\n      }\n    }\n  } else {\n    if ($oldPage.next('.page')[0] !== $newPage[0]) {\n      if (f7Component && !newPageInDom) {\n        f7Component.mount(function (componentEl) {\n          $viewEl.append(componentEl);\n        });\n      } else {\n        $viewEl.append($newPage[0]);\n      }\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      if (!router.$navbarsEl.parents(document).length) {\n        router.$el.prepend(router.$navbarsEl);\n      }\n\n      $navbarsEl.append($newNavbarEl[0]);\n    }\n  }\n\n  if (!newPageInDom) {\n    router.pageCallback('mounted', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n  } else if (options.route && options.route.route && options.route.route.keepAlive && !$newPage[0].f7PageMounted) {\n    $newPage[0].f7PageMounted = true;\n    router.pageCallback('mounted', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n  } // Remove old page\n\n\n  if ((options.reloadCurrent || reloadDetail) && $oldPage.length > 0) {\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      // Page remove event\n      router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n  } else if (options.reloadAll) {\n    $oldPage.each(function (pageEl, index) {\n      var $oldPageEl = $(pageEl);\n      var $oldNavbarElEl = $(app.navbar.getElByPage($oldPageEl));\n\n      if (router.params.stackPages && router.initialPages.indexOf($oldPageEl[0]) >= 0) {\n        $oldPageEl.addClass('stacked');\n        $oldPageEl.trigger('page:stack');\n        router.emit('pageStack', $oldPageEl[0]);\n\n        if (dynamicNavbar) {\n          $oldNavbarElEl.addClass('stacked');\n        }\n      } else {\n        // Page remove event\n        if ($oldPageEl.hasClass('page-current')) {\n          router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n          router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n        }\n\n        router.pageCallback('beforeRemove', $oldPageEl, $oldNavbarEl && $oldNavbarEl.eq(index), 'previous', undefined, options);\n        router.removePage($oldPageEl);\n\n        if (dynamicNavbar && $oldNavbarElEl.length) {\n          router.removeNavbar($oldNavbarElEl);\n        }\n      }\n    });\n  } else if (options.reloadPrevious) {\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      // Page remove event\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'previous', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n  } // Load Tab\n\n\n  if (options.route.route.tab) {\n    router.tabLoad(options.route.route.tab, extend({}, options, {\n      history: false,\n      browserHistory: false\n    }));\n  } // Check master detail\n\n\n  if (masterDetailEnabled) {\n    view.checkMasterDetailBreakpoint();\n  } // Page init and before init events\n\n\n  router.pageCallback('init', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n\n  if (options.reloadCurrent || options.reloadAll || reloadDetail) {\n    router.allowPageChange = true;\n    router.pageCallback('beforeIn', $newPage, $newNavbarEl, newPagePosition, 'current', options);\n    $newPage.removeAttr('aria-hidden');\n\n    if (dynamicNavbar && $newNavbarEl) {\n      $newNavbarEl.removeAttr('aria-hidden');\n    }\n\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, newPagePosition, 'current', options);\n    if (options.reloadCurrent && options.clearPreviousHistory) router.clearPreviousHistory();\n\n    if (reloadDetail) {\n      router.setPagePosition($(masterPageEl), 'previous');\n\n      if (masterPageEl.f7Page && masterPageEl.f7Page.navbarEl) {\n        router.setNavbarPosition($(masterPageEl.f7Page.navbarEl), 'previous');\n      }\n    }\n\n    return router;\n  }\n\n  if (options.reloadPrevious) {\n    router.allowPageChange = true;\n    return router;\n  } // Before animation event\n\n\n  router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', 'previous', options);\n  router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'next', 'current', options); // Animation\n\n  function afterAnimation() {\n    router.setPagePosition($newPage, 'current', false);\n    router.setPagePosition($oldPage, 'previous', !$oldPage.hasClass('page-master'));\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($newNavbarEl, 'current', false);\n      router.setNavbarPosition($oldNavbarEl, 'previous', !$oldNavbarEl.hasClass('navbar-master'));\n    } // After animation event\n\n\n    router.allowPageChange = true;\n    router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', 'previous', options);\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, 'next', 'current', options);\n    var keepOldPage = (router.params.preloadPreviousPage || router.params[app.theme + \"SwipeBack\"]) && !isMaster;\n\n    if (!keepOldPage) {\n      if ($newPage.hasClass('smart-select-page') || $newPage.hasClass('photo-browser-page') || $newPage.hasClass('autocomplete-page') || $newPage.hasClass('color-picker-page')) {\n        keepOldPage = true;\n      }\n    }\n\n    if (!keepOldPage) {\n      if (router.params.stackPages) {\n        $oldPage.addClass('stacked');\n        $oldPage.trigger('page:stack');\n        router.emit('pageStack', $oldPage[0]);\n\n        if (dynamicNavbar) {\n          $oldNavbarEl.addClass('stacked');\n        }\n      } else if (!($newPage.attr('data-name') && $newPage.attr('data-name') === 'smart-select-page')) {\n        // Remove event\n        router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'previous', undefined, options);\n        router.removePage($oldPage);\n\n        if (dynamicNavbar && $oldNavbarEl.length) {\n          router.removeNavbar($oldNavbarEl);\n        }\n      }\n    }\n\n    if (options.clearPreviousHistory) router.clearPreviousHistory();\n    router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n    if (router.params.browserHistory) {\n      History.clearRouterQueue();\n    }\n  }\n\n  function setPositionClasses() {\n    router.setPagePosition($oldPage, 'current', false);\n    router.setPagePosition($newPage, 'next', false);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($oldNavbarEl, 'current', false);\n      router.setNavbarPosition($newNavbarEl, 'next', false);\n    }\n  }\n\n  if (options.animate && !(isMaster && app.width >= router.params.masterDetailBreakpoint)) {\n    var delay = router.params[router.app.theme + \"PageLoadDelay\"];\n    var transition = router.params.transition;\n    if (options.transition) transition = options.transition;\n\n    if (!transition && router.currentRoute && router.currentRoute.route) {\n      transition = router.currentRoute.route.transition;\n    }\n\n    if (!transition && router.currentRoute && router.currentRoute.route.options) {\n      transition = router.currentRoute.route.options.transition;\n    }\n\n    if (transition) {\n      $newPage[0].f7PageTransition = transition;\n    }\n\n    if (delay) {\n      setTimeout(function () {\n        setPositionClasses();\n        router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'forward', transition, function () {\n          afterAnimation();\n        });\n      }, delay);\n    } else {\n      setPositionClasses();\n      router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'forward', transition, function () {\n        afterAnimation();\n      });\n    }\n  } else {\n    afterAnimation();\n  }\n\n  return router;\n}\n\nfunction load(router, loadParams, loadOptions, ignorePageChange) {\n  if (loadParams === void 0) {\n    loadParams = {};\n  }\n\n  if (loadOptions === void 0) {\n    loadOptions = {};\n  }\n\n  if (!router.allowPageChange && !ignorePageChange) return router;\n  var params = loadParams;\n  var options = loadOptions;\n  var url = params.url,\n      content = params.content,\n      el = params.el,\n      pageName = params.pageName,\n      component = params.component,\n      componentUrl = params.componentUrl;\n\n  if (!options.reloadCurrent && options.route && options.route.route && options.route.route.parentPath && router.currentRoute.route && router.currentRoute.route.parentPath === options.route.route.parentPath) {\n    // Do something nested\n    if (options.route.url === router.url) {\n      router.allowPageChange = true;\n      return false;\n    } // Check for same params\n\n\n    var sameParams = Object.keys(options.route.params).length === Object.keys(router.currentRoute.params).length;\n\n    if (sameParams) {\n      // Check for equal params name\n      Object.keys(options.route.params).forEach(function (paramName) {\n        if (!(paramName in router.currentRoute.params) || router.currentRoute.params[paramName] !== options.route.params[paramName]) {\n          sameParams = false;\n        }\n      });\n    }\n\n    if (sameParams) {\n      if (options.route.route.tab) {\n        return router.tabLoad(options.route.route.tab, options);\n      }\n\n      return false;\n    }\n\n    if (!sameParams && options.route.route.tab && router.currentRoute.route.tab && router.currentRoute.parentPath === options.route.parentPath) {\n      return router.tabLoad(options.route.route.tab, options);\n    }\n  }\n\n  if (options.route && options.route.url && router.url === options.route.url && !(options.reloadCurrent || options.reloadPrevious) && !router.params.allowDuplicateUrls) {\n    router.allowPageChange = true;\n    return false;\n  }\n\n  if (!options.route && url) {\n    options.route = router.parseRouteUrl(url);\n    extend(options.route, {\n      route: {\n        url: url,\n        path: url\n      }\n    });\n  } // Component Callbacks\n\n\n  function resolve(pageEl, newOptions) {\n    return forward(router, pageEl, extend(options, newOptions));\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if (url || componentUrl || component) {\n    router.allowPageChange = false;\n  } // Proceed\n\n\n  if (content) {\n    forward(router, router.getPageEl(content), options);\n  } else if (el) {\n    // Load page from specified HTMLElement or by page name in pages container\n    forward(router, router.getPageEl(el), options);\n  } else if (pageName) {\n    // Load page by page name in pages container\n    forward(router, router.$el.children(\".page[data-name=\\\"\" + pageName + \"\\\"]\").eq(0), options);\n  } else if (component || componentUrl) {\n    // Load from component (F7/Vue/React/...)\n    try {\n      router.pageComponentLoader({\n        routerEl: router.el,\n        component: component,\n        componentUrl: componentUrl,\n        options: options,\n        resolve: resolve,\n        reject: reject\n      });\n    } catch (err) {\n      router.allowPageChange = true;\n      throw err;\n    }\n  } else if (url) {\n    // Load using XHR\n    if (router.xhrAbortController) {\n      router.xhrAbortController.abort();\n      router.xhrAbortController = false;\n    }\n\n    router.xhrRequest(url, options).then(function (pageContent) {\n      forward(router, router.getPageEl(pageContent), options);\n    }).catch(function () {\n      router.allowPageChange = true;\n    });\n  }\n\n  return router;\n}\n\nfunction openIn(router, url, options) {\n  var navigateOptions = {\n    url: url,\n    route: {\n      path: url,\n      options: _extends({}, options, {\n        openIn: undefined\n      })\n    }\n  };\n\n  var params = _extends({}, options);\n\n  if (options.openIn === 'popup') {\n    params.content = \"<div class=\\\"popup popup-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.popup = params;\n  }\n\n  if (options.openIn === 'loginScreen') {\n    params.content = \"<div class=\\\"login-screen login-screen-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.loginScreen = params;\n  }\n\n  if (options.openIn === 'sheet') {\n    params.content = \"<div class=\\\"sheet-modal sheet-modal-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"sheet-modal-inner\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div></div>\";\n    navigateOptions.route.sheet = params;\n  }\n\n  if (options.openIn === 'popover') {\n    params.targetEl = options.clickedEl || options.targetEl;\n    params.content = \"<div class=\\\"popover popover-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"popover-inner\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div></div>\";\n    navigateOptions.route.popover = params;\n  }\n\n  if (options.openIn.indexOf('panel') >= 0) {\n    var parts = options.openIn.split(':');\n    var side = parts[1] || 'left';\n    var effect = parts[2] || 'cover';\n    params.targetEl = options.clickedEl || options.targetEl;\n    params.content = \"<div class=\\\"panel panel-router-open-in panel-\" + side + \" panel-\" + effect + \"\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.panel = params;\n  }\n\n  return router.navigate(navigateOptions);\n}\n\nfunction navigate(navigateParams, navigateOptions) {\n  if (navigateOptions === void 0) {\n    navigateOptions = {};\n  }\n\n  var router = this;\n  if (router.swipeBackActive) return router;\n  var url;\n  var createRoute;\n  var name;\n  var path;\n  var query;\n  var params;\n  var route;\n\n  if (typeof navigateParams === 'string') {\n    url = navigateParams;\n  } else {\n    url = navigateParams.url;\n    createRoute = navigateParams.route;\n    name = navigateParams.name;\n    path = navigateParams.path;\n    query = navigateParams.query;\n    params = navigateParams.params;\n  }\n\n  if (name || path) {\n    url = router.generateUrl({\n      path: path,\n      name: name,\n      params: params,\n      query: query\n    });\n\n    if (url) {\n      return router.navigate(url, navigateOptions);\n    }\n\n    return router;\n  }\n\n  var app = router.app;\n  appRouterCheck(router, 'navigate');\n\n  if (url === '#' || url === '') {\n    return router;\n  }\n\n  var navigateUrl = url.replace('./', '');\n\n  if (navigateUrl[0] !== '/' && navigateUrl.indexOf('#') !== 0) {\n    var currentPath = router.currentRoute.parentPath || router.currentRoute.path;\n    navigateUrl = ((currentPath ? currentPath + \"/\" : '/') + navigateUrl).replace('///', '/').replace('//', '/');\n  }\n\n  if (createRoute) {\n    route = extend(router.parseRouteUrl(navigateUrl), {\n      route: extend({}, createRoute)\n    });\n  } else {\n    route = router.findMatchingRoute(navigateUrl);\n  }\n\n  if (!route) {\n    return router;\n  }\n\n  if (route.route && route.route.viewName) {\n    var anotherViewName = route.route.viewName;\n    var anotherView = app.views[anotherViewName];\n\n    if (!anotherView) {\n      throw new Error(\"Framework7: There is no View with \\\"\" + anotherViewName + \"\\\" name that was specified in this route\");\n    }\n\n    if (anotherView !== router.view) {\n      return anotherView.router.navigate(navigateParams, navigateOptions);\n    }\n  }\n\n  if (route.route.redirect) {\n    return redirect.call(router, 'forward', route, navigateOptions);\n  }\n\n  var options = {};\n\n  if (route.route.options) {\n    extend(options, route.route.options, navigateOptions);\n  } else {\n    extend(options, navigateOptions);\n  }\n\n  if (options.openIn && (!router.params.ignoreOpenIn || router.params.ignoreOpenIn && router.history.length > 0)) {\n    return openIn(router, navigateUrl, options);\n  }\n\n  options.route = route;\n\n  function resolve() {\n    var routerLoaded = false;\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (route.route[modalLoadProp] && !routerLoaded) {\n        routerLoaded = true;\n        router.modalLoad(modalLoadProp, route, options, 'forward');\n      }\n    });\n\n    if (route.route.keepAlive && route.route.keepAliveData) {\n      load(router, {\n        el: route.route.keepAliveData.pageEl\n      }, options, false);\n      routerLoaded = true;\n    }\n\n    'url content component pageName el componentUrl'.split(' ').forEach(function (pageLoadProp) {\n      if (route.route[pageLoadProp] && !routerLoaded) {\n        var _load;\n\n        routerLoaded = true;\n        load(router, (_load = {}, _load[pageLoadProp] = route.route[pageLoadProp], _load), options, false);\n      }\n    });\n    if (routerLoaded) return; // Async\n\n    function asyncResolve(resolveParams, resolveOptions) {\n      router.allowPageChange = false;\n      var resolvedAsModal = false;\n      'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n        if (resolveParams[modalLoadProp]) {\n          resolvedAsModal = true;\n          var modalRoute = extend({}, route, {\n            route: resolveParams\n          });\n          router.allowPageChange = true;\n          router.modalLoad(modalLoadProp, modalRoute, extend(options, resolveOptions), 'forward');\n        }\n      });\n      if (resolvedAsModal) return;\n      load(router, resolveParams, extend(options, resolveOptions), true);\n    }\n\n    function asyncReject() {\n      router.allowPageChange = true;\n    }\n\n    if (route.route.async) {\n      router.allowPageChange = false;\n      route.route.async.call(router, {\n        router: router,\n        to: options.route,\n        from: router.currentRoute,\n        resolve: asyncResolve,\n        reject: asyncReject,\n        direction: 'forward',\n        app: app\n      });\n    }\n\n    if (route.route.asyncComponent) {\n      asyncComponent(router, route.route.asyncComponent, asyncResolve, asyncReject);\n    }\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n  }\n\n  if (router.params.masterDetailBreakpoint > 0 && route.route.masterRoute) {\n    // load detail route\n    var preloadMaster = true;\n    var masterLoaded = false;\n\n    if (router.currentRoute && router.currentRoute.route) {\n      if ((router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && (router.currentRoute.route === route.route.masterRoute || router.currentRoute.route.path === route.route.masterRoute.path)) {\n        preloadMaster = false;\n      }\n\n      if (router.currentRoute.route.masterRoute && (router.currentRoute.route.masterRoute === route.route.masterRoute || router.currentRoute.route.masterRoute.path === route.route.masterRoute.path)) {\n        preloadMaster = false;\n        masterLoaded = true;\n      }\n    }\n\n    if (preloadMaster || masterLoaded && navigateOptions.reloadAll) {\n      router.navigate({\n        path: route.route.masterRoute.path,\n        params: route.params || {}\n      }, {\n        animate: false,\n        reloadAll: navigateOptions.reloadAll,\n        reloadCurrent: navigateOptions.reloadCurrent,\n        reloadPrevious: navigateOptions.reloadPrevious,\n        browserHistory: !navigateOptions.initial,\n        history: !navigateOptions.initial,\n        once: {\n          pageAfterIn: function pageAfterIn() {\n            router.navigate(navigateParams, extend({}, navigateOptions, {\n              animate: false,\n              reloadAll: false,\n              reloadCurrent: false,\n              reloadPrevious: false,\n              history: !navigateOptions.initial,\n              browserHistory: !navigateOptions.initial\n            }));\n          }\n        }\n      });\n      return router;\n    }\n  }\n\n  processRouteQueue.call(router, route, router.currentRoute, function () {\n    if (route.route.modules) {\n      app.loadModules(Array.isArray(route.route.modules) ? route.route.modules : [route.route.modules]).then(function () {\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    } else {\n      resolve();\n    }\n  }, function () {\n    reject();\n  }, 'forward'); // Return Router\n\n  return router;\n}\n\nexport { refreshPage, navigate };","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/modules/router/navigate.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getDocument","$","extend","parseUrlQuery","History","redirect","processRouteQueue","appRouterCheck","asyncComponent","refreshPage","router","navigate","currentRoute","url","ignoreCache","reloadCurrent","forward","el","forwardOptions","document","$el","app","view","options","animate","params","browserHistory","replaceState","history","reloadPages","reloadPrevious","reloadAll","clearPreviousHistory","reloadDetail","on","masterDetailEnabled","masterDetailBreakpoint","isMaster","route","master","masterPageEl","otherDetailPageEl","detailsInBetweenRemoved","currentRouteIsModal","modal","modalType","split","forEach","modalLoadProp","modalToClose","modalInstance","get","previousUrl","previousRoute","findMatchingRoute","path","query","modalRemove","dynamicNavbar","$viewEl","$newPage","reload","$oldPage","$navbarsEl","$newNavbarEl","$oldNavbarEl","allowPageChange","removeThemeElements","children","f7Page","$navbarEl","keepAlive","keepAliveData","pageEl","$pagesInView","filter","pageInView","$navbarsInView","navbarInView","isDetail","isDetailRoot","classList","contains","_i","width","newPagePosition","removeClass","addClass","trigger","position","emit","role","root","detailRoot","map","navbar","getElByPage","eq","navbarEl","removedPageEls","removedNavbarEls","_i2","oldNavbarEl","stackPages","push","pageCallback","undefined","removePage","removeNavbar","indexOf","browserHistoryRoot","id","browserHistorySeparator","currentPageEl","currentNavbarEl","slice","saveHistory","newPageInDom","parents","f7Component","mount","componentEl","insertBefore","find","prepend","append","next","f7PageMounted","initialPages","each","index","$oldPageEl","$oldNavbarElEl","hasClass","tab","tabLoad","checkMasterDetailBreakpoint","removeAttr","setPagePosition","setNavbarPosition","afterAnimation","keepOldPage","preloadPreviousPage","theme","attr","clearRouterQueue","setPositionClasses","delay","transition","f7PageTransition","setTimeout","load","loadParams","loadOptions","ignorePageChange","content","pageName","component","componentUrl","parentPath","sameParams","keys","paramName","allowDuplicateUrls","parseRouteUrl","resolve","newOptions","reject","getPageEl","pageComponentLoader","routerEl","err","xhrAbortController","abort","xhrRequest","then","pageContent","catch","openIn","navigateOptions","selector","popup","loginScreen","sheet","targetEl","clickedEl","popover","parts","side","effect","panel","navigateParams","swipeBackActive","createRoute","name","generateUrl","navigateUrl","replace","currentPath","viewName","anotherViewName","anotherView","views","Error","ignoreOpenIn","routerLoaded","modalLoad","pageLoadProp","_load","asyncResolve","resolveParams","resolveOptions","resolvedAsModal","modalRoute","asyncReject","async","to","from","direction","masterRoute","preloadMaster","masterLoaded","initial","once","pageAfterIn","modules","loadModules","Array","isArray"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend, parseUrlQuery } from '../../shared/utils';\nimport History from '../../shared/history';\nimport redirect from './redirect';\nimport processRouteQueue from './process-route-queue';\nimport appRouterCheck from './app-router-check';\nimport asyncComponent from './async-component';\n\nfunction refreshPage() {\n  var router = this;\n  appRouterCheck(router, 'refreshPage');\n  return router.navigate(router.currentRoute.url, {\n    ignoreCache: true,\n    reloadCurrent: true\n  });\n}\n\nfunction forward(router, el, forwardOptions) {\n  if (forwardOptions === void 0) {\n    forwardOptions = {};\n  }\n\n  var document = getDocument();\n  var $el = $(el);\n  var app = router.app;\n  var view = router.view;\n  var options = extend(false, {\n    animate: router.params.animate,\n    browserHistory: true,\n    replaceState: false,\n    history: true,\n    reloadCurrent: router.params.reloadPages,\n    reloadPrevious: false,\n    reloadAll: false,\n    clearPreviousHistory: false,\n    reloadDetail: router.params.reloadDetail,\n    on: {}\n  }, forwardOptions);\n  var masterDetailEnabled = router.params.masterDetailBreakpoint > 0;\n  var isMaster = masterDetailEnabled && options.route && options.route.route && (options.route.route.master === true || typeof options.route.route.master === 'function' && options.route.route.master(app, router));\n  var masterPageEl;\n  var otherDetailPageEl;\n  var detailsInBetweenRemoved = 0;\n  var currentRouteIsModal = router.currentRoute.modal;\n  var modalType;\n\n  if (!currentRouteIsModal) {\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (router.currentRoute && router.currentRoute.route && router.currentRoute.route[modalLoadProp]) {\n        currentRouteIsModal = true;\n        modalType = modalLoadProp;\n      }\n    });\n  }\n\n  if (currentRouteIsModal) {\n    var modalToClose = router.currentRoute.modal || router.currentRoute.route.modalInstance || app[modalType].get();\n    var previousUrl = router.history[router.history.length - 2];\n    var previousRoute = router.findMatchingRoute(previousUrl);\n\n    if (!previousRoute && previousUrl) {\n      previousRoute = {\n        url: previousUrl,\n        path: previousUrl.split('?')[0],\n        query: parseUrlQuery(previousUrl),\n        route: {\n          path: previousUrl.split('?')[0],\n          url: previousUrl\n        }\n      };\n    }\n\n    router.modalRemove(modalToClose);\n  }\n\n  var dynamicNavbar = router.dynamicNavbar;\n  var $viewEl = router.$el;\n  var $newPage = $el;\n  var reload = options.reloadPrevious || options.reloadCurrent || options.reloadAll;\n  var $oldPage;\n  var $navbarsEl;\n  var $newNavbarEl;\n  var $oldNavbarEl;\n  router.allowPageChange = false;\n\n  if ($newPage.length === 0) {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if ($newPage.length) {\n    // Remove theme elements\n    router.removeThemeElements($newPage);\n  }\n\n  if (dynamicNavbar) {\n    $newNavbarEl = $newPage.children('.navbar');\n    $navbarsEl = router.$navbarsEl;\n\n    if ($newNavbarEl.length === 0 && $newPage[0] && $newPage[0].f7Page) {\n      // Try from pageData\n      $newNavbarEl = $newPage[0].f7Page.$navbarEl;\n    }\n  } // Save Keep Alive Cache\n\n\n  if (options.route && options.route.route && options.route.route.keepAlive && !options.route.route.keepAliveData) {\n    options.route.route.keepAliveData = {\n      pageEl: $el[0]\n    };\n  } // Pages In View\n\n\n  var $pagesInView = $viewEl.children('.page:not(.stacked)').filter(function (pageInView) {\n    return pageInView !== $newPage[0];\n  }); // Navbars In View\n\n  var $navbarsInView;\n\n  if (dynamicNavbar) {\n    $navbarsInView = $navbarsEl.children('.navbar:not(.stacked)').filter(function (navbarInView) {\n      return navbarInView !== $newNavbarEl[0];\n    });\n  } // Exit when reload previous and only 1 page in view so nothing ro reload\n\n\n  if (options.reloadPrevious && $pagesInView.length < 2) {\n    router.allowPageChange = true;\n    return router;\n  } // Find Detail' master page\n\n\n  var isDetail;\n  var reloadDetail;\n  var isDetailRoot;\n\n  if (masterDetailEnabled && !options.reloadAll) {\n    for (var i = 0; i < $pagesInView.length; i += 1) {\n      if (!masterPageEl && $pagesInView[i].classList.contains('page-master')) {\n        masterPageEl = $pagesInView[i];\n        continue; // eslint-disable-line\n      }\n    }\n\n    isDetail = !isMaster && masterPageEl;\n\n    if (isDetail) {\n      // Find Other Detail\n      if (masterPageEl) {\n        for (var _i = 0; _i < $pagesInView.length; _i += 1) {\n          if ($pagesInView[_i].classList.contains('page-master-detail')) {\n            otherDetailPageEl = $pagesInView[_i];\n            continue; // eslint-disable-line\n          }\n        }\n      }\n    }\n\n    reloadDetail = isDetail && options.reloadDetail && app.width >= router.params.masterDetailBreakpoint && masterPageEl;\n  }\n\n  if (isDetail) {\n    isDetailRoot = !otherDetailPageEl || reloadDetail || options.reloadAll || options.reloadCurrent;\n  } // New Page\n\n\n  var newPagePosition = 'next';\n\n  if (options.reloadCurrent || options.reloadAll || reloadDetail) {\n    newPagePosition = 'current';\n  } else if (options.reloadPrevious) {\n    newPagePosition = 'previous';\n  }\n\n  $newPage.removeClass('page-previous page-current page-next').addClass(\"page-\" + newPagePosition + (isMaster ? ' page-master' : '') + (isDetail ? ' page-master-detail' : '') + (isDetailRoot ? ' page-master-detail-root' : '')).removeClass('stacked').trigger('page:unstack').trigger('page:position', {\n    position: newPagePosition\n  });\n  router.emit('pageUnstack', $newPage[0]);\n  router.emit('pagePosition', $newPage[0], newPagePosition);\n\n  if (isMaster || isDetail) {\n    $newPage.trigger('page:role', {\n      role: isMaster ? 'master' : 'detail',\n      root: !!isDetailRoot\n    });\n    router.emit('pageRole', $newPage[0], {\n      role: isMaster ? 'master' : 'detail',\n      detailRoot: !!isDetailRoot\n    });\n  }\n\n  if (dynamicNavbar && $newNavbarEl.length) {\n    $newNavbarEl.removeClass('navbar-previous navbar-current navbar-next').addClass(\"navbar-\" + newPagePosition + (isMaster ? ' navbar-master' : '') + (isDetail ? ' navbar-master-detail' : '') + (isDetailRoot ? ' navbar-master-detail-root' : '')).removeClass('stacked');\n    $newNavbarEl.trigger('navbar:position', {\n      position: newPagePosition\n    });\n    router.emit('navbarPosition', $newNavbarEl[0], newPagePosition);\n\n    if (isMaster || isDetail) {\n      router.emit('navbarRole', $newNavbarEl[0], {\n        role: isMaster ? 'master' : 'detail',\n        detailRoot: !!isDetailRoot\n      });\n    }\n  } // Find Old Page\n\n\n  if (options.reloadCurrent || reloadDetail) {\n    if (reloadDetail) {\n      $oldPage = $pagesInView.filter(function (pageEl) {\n        return !pageEl.classList.contains('page-master');\n      });\n\n      if (dynamicNavbar) {\n        $oldNavbarEl = $($oldPage.map(function (pageEl) {\n          return app.navbar.getElByPage(pageEl);\n        }));\n      }\n\n      if ($oldPage.length > 1 && masterPageEl) {\n        detailsInBetweenRemoved = $oldPage.length - 1;\n        $(masterPageEl).removeClass('page-master-stacked').trigger('page:masterunstack');\n        router.emit('pageMasterUnstack', masterPageEl);\n\n        if (dynamicNavbar) {\n          $(app.navbar.getElByPage(masterPageEl)).removeClass('navbar-master-stacked');\n          router.emit('navbarMasterUnstack', app.navbar.getElByPage(masterPageEl));\n        }\n      }\n    } else {\n      $oldPage = $pagesInView.eq($pagesInView.length - 1);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl = $(app.navbar.getElByPage($oldPage));\n      }\n    }\n  } else if (options.reloadPrevious) {\n    $oldPage = $pagesInView.eq($pagesInView.length - 2);\n\n    if (dynamicNavbar) {\n      // $oldNavbarEl = $navbarsInView.eq($pagesInView.length - 2);\n      $oldNavbarEl = $(app.navbar.getElByPage($oldPage));\n    }\n  } else if (options.reloadAll) {\n    $oldPage = $pagesInView.filter(function (pageEl) {\n      return pageEl !== $newPage[0];\n    });\n\n    if (dynamicNavbar) {\n      $oldNavbarEl = $navbarsInView.filter(function (navbarEl) {\n        return navbarEl !== $newNavbarEl[0];\n      });\n    }\n  } else {\n    var removedPageEls = [];\n    var removedNavbarEls = [];\n\n    if ($pagesInView.length > 1) {\n      var _i2 = 0;\n\n      for (_i2 = 0; _i2 < $pagesInView.length - 1; _i2 += 1) {\n        if (masterPageEl && $pagesInView[_i2] === masterPageEl) {\n          $pagesInView.eq(_i2).addClass('page-master-stacked');\n          $pagesInView.eq(_i2).trigger('page:masterstack');\n          router.emit('pageMasterStack', $pagesInView[_i2]);\n\n          if (dynamicNavbar) {\n            $(app.navbar.getElByPage(masterPageEl)).addClass('navbar-master-stacked');\n            router.emit('navbarMasterStack', app.navbar.getElByPage(masterPageEl));\n          }\n\n          continue; // eslint-disable-line\n        }\n\n        var oldNavbarEl = app.navbar.getElByPage($pagesInView.eq(_i2));\n\n        if (router.params.stackPages) {\n          $pagesInView.eq(_i2).addClass('stacked');\n          $pagesInView.eq(_i2).trigger('page:stack');\n          router.emit('pageStack', $pagesInView[_i2]);\n\n          if (dynamicNavbar) {\n            $(oldNavbarEl).addClass('stacked');\n          }\n        } else {\n          // Page remove event\n          removedPageEls.push($pagesInView[_i2]);\n          router.pageCallback('beforeRemove', $pagesInView[_i2], $navbarsInView && $navbarsInView[_i2], 'previous', undefined, options);\n          router.removePage($pagesInView[_i2]);\n\n          if (dynamicNavbar && oldNavbarEl) {\n            removedNavbarEls.push(oldNavbarEl);\n            router.removeNavbar(oldNavbarEl);\n          }\n        }\n      }\n    }\n\n    $oldPage = $viewEl.children('.page:not(.stacked)').filter(function (pageEl) {\n      return pageEl !== $newPage[0] && removedPageEls.indexOf(pageEl) < 0;\n    });\n\n    if (dynamicNavbar) {\n      $oldNavbarEl = $navbarsEl.children('.navbar:not(.stacked)').filter(function (navbarEl) {\n        return navbarEl !== $newNavbarEl[0] && removedNavbarEls.indexOf(removedNavbarEls) < 0;\n      });\n    }\n\n    removedPageEls = [];\n    removedNavbarEls = [];\n  }\n\n  if (isDetail && !options.reloadAll) {\n    if ($oldPage.length > 1 || reloadDetail) {\n      $oldPage = $oldPage.filter(function (pageEl) {\n        return !pageEl.classList.contains('page-master');\n      });\n    }\n\n    if ($oldNavbarEl && ($oldNavbarEl.length > 1 || reloadDetail)) {\n      $oldNavbarEl = $oldNavbarEl.filter(function (navbarEl) {\n        return !navbarEl.classList.contains('navbar-master');\n      });\n    }\n  } // Push State\n\n\n  if (router.params.browserHistory && (options.browserHistory || options.replaceState) && !options.reloadPrevious) {\n    var browserHistoryRoot = router.params.browserHistoryRoot || '';\n    History[options.reloadCurrent || reloadDetail && otherDetailPageEl || options.reloadAll || options.replaceState ? 'replace' : 'push'](view.id, {\n      url: options.route.url\n    }, browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n  }\n\n  if (!options.reloadPrevious) {\n    // Current Page & Navbar\n    router.currentPageEl = $newPage[0];\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      router.currentNavbarEl = $newNavbarEl[0];\n    } else {\n      delete router.currentNavbarEl;\n    } // Current Route\n\n\n    router.currentRoute = options.route;\n  } // Update router history\n\n\n  var url = options.route.url;\n\n  if (options.history) {\n    if (((options.reloadCurrent || reloadDetail && otherDetailPageEl) && router.history.length) > 0 || options.replaceState) {\n      if (reloadDetail && detailsInBetweenRemoved > 0) {\n        router.history = router.history.slice(0, router.history.length - detailsInBetweenRemoved);\n      }\n\n      router.history[router.history.length - (options.reloadPrevious ? 2 : 1)] = url;\n    } else if (options.reloadPrevious) {\n      router.history[router.history.length - 2] = url;\n    } else if (options.reloadAll) {\n      router.history = [url];\n    } else {\n      router.history.push(url);\n    }\n  }\n\n  router.saveHistory(); // Insert new page and navbar\n\n  var newPageInDom = $newPage.parents(document).length > 0;\n  var f7Component = $newPage[0].f7Component;\n\n  if (options.reloadPrevious) {\n    if (f7Component && !newPageInDom) {\n      f7Component.mount(function (componentEl) {\n        $(componentEl).insertBefore($oldPage);\n      });\n    } else {\n      $newPage.insertBefore($oldPage);\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      if ($oldNavbarEl.length) {\n        $newNavbarEl.insertBefore($oldNavbarEl);\n      } else {\n        if (!router.$navbarsEl.parents(document).length) {\n          router.$el.prepend(router.$navbarsEl);\n        }\n\n        $navbarsEl.append($newNavbarEl);\n      }\n    }\n  } else {\n    if ($oldPage.next('.page')[0] !== $newPage[0]) {\n      if (f7Component && !newPageInDom) {\n        f7Component.mount(function (componentEl) {\n          $viewEl.append(componentEl);\n        });\n      } else {\n        $viewEl.append($newPage[0]);\n      }\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      if (!router.$navbarsEl.parents(document).length) {\n        router.$el.prepend(router.$navbarsEl);\n      }\n\n      $navbarsEl.append($newNavbarEl[0]);\n    }\n  }\n\n  if (!newPageInDom) {\n    router.pageCallback('mounted', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n  } else if (options.route && options.route.route && options.route.route.keepAlive && !$newPage[0].f7PageMounted) {\n    $newPage[0].f7PageMounted = true;\n    router.pageCallback('mounted', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n  } // Remove old page\n\n\n  if ((options.reloadCurrent || reloadDetail) && $oldPage.length > 0) {\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      // Page remove event\n      router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'current', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n  } else if (options.reloadAll) {\n    $oldPage.each(function (pageEl, index) {\n      var $oldPageEl = $(pageEl);\n      var $oldNavbarElEl = $(app.navbar.getElByPage($oldPageEl));\n\n      if (router.params.stackPages && router.initialPages.indexOf($oldPageEl[0]) >= 0) {\n        $oldPageEl.addClass('stacked');\n        $oldPageEl.trigger('page:stack');\n        router.emit('pageStack', $oldPageEl[0]);\n\n        if (dynamicNavbar) {\n          $oldNavbarElEl.addClass('stacked');\n        }\n      } else {\n        // Page remove event\n        if ($oldPageEl.hasClass('page-current')) {\n          router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n          router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', undefined, options);\n        }\n\n        router.pageCallback('beforeRemove', $oldPageEl, $oldNavbarEl && $oldNavbarEl.eq(index), 'previous', undefined, options);\n        router.removePage($oldPageEl);\n\n        if (dynamicNavbar && $oldNavbarElEl.length) {\n          router.removeNavbar($oldNavbarElEl);\n        }\n      }\n    });\n  } else if (options.reloadPrevious) {\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      // Page remove event\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'previous', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n  } // Load Tab\n\n\n  if (options.route.route.tab) {\n    router.tabLoad(options.route.route.tab, extend({}, options, {\n      history: false,\n      browserHistory: false\n    }));\n  } // Check master detail\n\n\n  if (masterDetailEnabled) {\n    view.checkMasterDetailBreakpoint();\n  } // Page init and before init events\n\n\n  router.pageCallback('init', $newPage, $newNavbarEl, newPagePosition, reload ? newPagePosition : 'current', options, $oldPage);\n\n  if (options.reloadCurrent || options.reloadAll || reloadDetail) {\n    router.allowPageChange = true;\n    router.pageCallback('beforeIn', $newPage, $newNavbarEl, newPagePosition, 'current', options);\n    $newPage.removeAttr('aria-hidden');\n\n    if (dynamicNavbar && $newNavbarEl) {\n      $newNavbarEl.removeAttr('aria-hidden');\n    }\n\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, newPagePosition, 'current', options);\n    if (options.reloadCurrent && options.clearPreviousHistory) router.clearPreviousHistory();\n\n    if (reloadDetail) {\n      router.setPagePosition($(masterPageEl), 'previous');\n\n      if (masterPageEl.f7Page && masterPageEl.f7Page.navbarEl) {\n        router.setNavbarPosition($(masterPageEl.f7Page.navbarEl), 'previous');\n      }\n    }\n\n    return router;\n  }\n\n  if (options.reloadPrevious) {\n    router.allowPageChange = true;\n    return router;\n  } // Before animation event\n\n\n  router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', 'previous', options);\n  router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'next', 'current', options); // Animation\n\n  function afterAnimation() {\n    router.setPagePosition($newPage, 'current', false);\n    router.setPagePosition($oldPage, 'previous', !$oldPage.hasClass('page-master'));\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($newNavbarEl, 'current', false);\n      router.setNavbarPosition($oldNavbarEl, 'previous', !$oldNavbarEl.hasClass('navbar-master'));\n    } // After animation event\n\n\n    router.allowPageChange = true;\n    router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', 'previous', options);\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, 'next', 'current', options);\n    var keepOldPage = (router.params.preloadPreviousPage || router.params[app.theme + \"SwipeBack\"]) && !isMaster;\n\n    if (!keepOldPage) {\n      if ($newPage.hasClass('smart-select-page') || $newPage.hasClass('photo-browser-page') || $newPage.hasClass('autocomplete-page') || $newPage.hasClass('color-picker-page')) {\n        keepOldPage = true;\n      }\n    }\n\n    if (!keepOldPage) {\n      if (router.params.stackPages) {\n        $oldPage.addClass('stacked');\n        $oldPage.trigger('page:stack');\n        router.emit('pageStack', $oldPage[0]);\n\n        if (dynamicNavbar) {\n          $oldNavbarEl.addClass('stacked');\n        }\n      } else if (!($newPage.attr('data-name') && $newPage.attr('data-name') === 'smart-select-page')) {\n        // Remove event\n        router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'previous', undefined, options);\n        router.removePage($oldPage);\n\n        if (dynamicNavbar && $oldNavbarEl.length) {\n          router.removeNavbar($oldNavbarEl);\n        }\n      }\n    }\n\n    if (options.clearPreviousHistory) router.clearPreviousHistory();\n    router.emit('routeChanged', router.currentRoute, router.previousRoute, router);\n\n    if (router.params.browserHistory) {\n      History.clearRouterQueue();\n    }\n  }\n\n  function setPositionClasses() {\n    router.setPagePosition($oldPage, 'current', false);\n    router.setPagePosition($newPage, 'next', false);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($oldNavbarEl, 'current', false);\n      router.setNavbarPosition($newNavbarEl, 'next', false);\n    }\n  }\n\n  if (options.animate && !(isMaster && app.width >= router.params.masterDetailBreakpoint)) {\n    var delay = router.params[router.app.theme + \"PageLoadDelay\"];\n    var transition = router.params.transition;\n    if (options.transition) transition = options.transition;\n\n    if (!transition && router.currentRoute && router.currentRoute.route) {\n      transition = router.currentRoute.route.transition;\n    }\n\n    if (!transition && router.currentRoute && router.currentRoute.route.options) {\n      transition = router.currentRoute.route.options.transition;\n    }\n\n    if (transition) {\n      $newPage[0].f7PageTransition = transition;\n    }\n\n    if (delay) {\n      setTimeout(function () {\n        setPositionClasses();\n        router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'forward', transition, function () {\n          afterAnimation();\n        });\n      }, delay);\n    } else {\n      setPositionClasses();\n      router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'forward', transition, function () {\n        afterAnimation();\n      });\n    }\n  } else {\n    afterAnimation();\n  }\n\n  return router;\n}\n\nfunction load(router, loadParams, loadOptions, ignorePageChange) {\n  if (loadParams === void 0) {\n    loadParams = {};\n  }\n\n  if (loadOptions === void 0) {\n    loadOptions = {};\n  }\n\n  if (!router.allowPageChange && !ignorePageChange) return router;\n  var params = loadParams;\n  var options = loadOptions;\n  var url = params.url,\n      content = params.content,\n      el = params.el,\n      pageName = params.pageName,\n      component = params.component,\n      componentUrl = params.componentUrl;\n\n  if (!options.reloadCurrent && options.route && options.route.route && options.route.route.parentPath && router.currentRoute.route && router.currentRoute.route.parentPath === options.route.route.parentPath) {\n    // Do something nested\n    if (options.route.url === router.url) {\n      router.allowPageChange = true;\n      return false;\n    } // Check for same params\n\n\n    var sameParams = Object.keys(options.route.params).length === Object.keys(router.currentRoute.params).length;\n\n    if (sameParams) {\n      // Check for equal params name\n      Object.keys(options.route.params).forEach(function (paramName) {\n        if (!(paramName in router.currentRoute.params) || router.currentRoute.params[paramName] !== options.route.params[paramName]) {\n          sameParams = false;\n        }\n      });\n    }\n\n    if (sameParams) {\n      if (options.route.route.tab) {\n        return router.tabLoad(options.route.route.tab, options);\n      }\n\n      return false;\n    }\n\n    if (!sameParams && options.route.route.tab && router.currentRoute.route.tab && router.currentRoute.parentPath === options.route.parentPath) {\n      return router.tabLoad(options.route.route.tab, options);\n    }\n  }\n\n  if (options.route && options.route.url && router.url === options.route.url && !(options.reloadCurrent || options.reloadPrevious) && !router.params.allowDuplicateUrls) {\n    router.allowPageChange = true;\n    return false;\n  }\n\n  if (!options.route && url) {\n    options.route = router.parseRouteUrl(url);\n    extend(options.route, {\n      route: {\n        url: url,\n        path: url\n      }\n    });\n  } // Component Callbacks\n\n\n  function resolve(pageEl, newOptions) {\n    return forward(router, pageEl, extend(options, newOptions));\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if (url || componentUrl || component) {\n    router.allowPageChange = false;\n  } // Proceed\n\n\n  if (content) {\n    forward(router, router.getPageEl(content), options);\n  } else if (el) {\n    // Load page from specified HTMLElement or by page name in pages container\n    forward(router, router.getPageEl(el), options);\n  } else if (pageName) {\n    // Load page by page name in pages container\n    forward(router, router.$el.children(\".page[data-name=\\\"\" + pageName + \"\\\"]\").eq(0), options);\n  } else if (component || componentUrl) {\n    // Load from component (F7/Vue/React/...)\n    try {\n      router.pageComponentLoader({\n        routerEl: router.el,\n        component: component,\n        componentUrl: componentUrl,\n        options: options,\n        resolve: resolve,\n        reject: reject\n      });\n    } catch (err) {\n      router.allowPageChange = true;\n      throw err;\n    }\n  } else if (url) {\n    // Load using XHR\n    if (router.xhrAbortController) {\n      router.xhrAbortController.abort();\n      router.xhrAbortController = false;\n    }\n\n    router.xhrRequest(url, options).then(function (pageContent) {\n      forward(router, router.getPageEl(pageContent), options);\n    }).catch(function () {\n      router.allowPageChange = true;\n    });\n  }\n\n  return router;\n}\n\nfunction openIn(router, url, options) {\n  var navigateOptions = {\n    url: url,\n    route: {\n      path: url,\n      options: _extends({}, options, {\n        openIn: undefined\n      })\n    }\n  };\n\n  var params = _extends({}, options);\n\n  if (options.openIn === 'popup') {\n    params.content = \"<div class=\\\"popup popup-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.popup = params;\n  }\n\n  if (options.openIn === 'loginScreen') {\n    params.content = \"<div class=\\\"login-screen login-screen-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.loginScreen = params;\n  }\n\n  if (options.openIn === 'sheet') {\n    params.content = \"<div class=\\\"sheet-modal sheet-modal-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"sheet-modal-inner\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div></div>\";\n    navigateOptions.route.sheet = params;\n  }\n\n  if (options.openIn === 'popover') {\n    params.targetEl = options.clickedEl || options.targetEl;\n    params.content = \"<div class=\\\"popover popover-router-open-in\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"popover-inner\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div></div>\";\n    navigateOptions.route.popover = params;\n  }\n\n  if (options.openIn.indexOf('panel') >= 0) {\n    var parts = options.openIn.split(':');\n    var side = parts[1] || 'left';\n    var effect = parts[2] || 'cover';\n    params.targetEl = options.clickedEl || options.targetEl;\n    params.content = \"<div class=\\\"panel panel-router-open-in panel-\" + side + \" panel-\" + effect + \"\\\" data-url=\\\"\" + url + \"\\\"><div class=\\\"view view-init\\\" data-links-view=\\\"\" + router.view.selector + \"\\\" data-url=\\\"\" + url + \"\\\" data-ignore-open-in=\\\"true\\\"></div></div>\";\n    navigateOptions.route.panel = params;\n  }\n\n  return router.navigate(navigateOptions);\n}\n\nfunction navigate(navigateParams, navigateOptions) {\n  if (navigateOptions === void 0) {\n    navigateOptions = {};\n  }\n\n  var router = this;\n  if (router.swipeBackActive) return router;\n  var url;\n  var createRoute;\n  var name;\n  var path;\n  var query;\n  var params;\n  var route;\n\n  if (typeof navigateParams === 'string') {\n    url = navigateParams;\n  } else {\n    url = navigateParams.url;\n    createRoute = navigateParams.route;\n    name = navigateParams.name;\n    path = navigateParams.path;\n    query = navigateParams.query;\n    params = navigateParams.params;\n  }\n\n  if (name || path) {\n    url = router.generateUrl({\n      path: path,\n      name: name,\n      params: params,\n      query: query\n    });\n\n    if (url) {\n      return router.navigate(url, navigateOptions);\n    }\n\n    return router;\n  }\n\n  var app = router.app;\n  appRouterCheck(router, 'navigate');\n\n  if (url === '#' || url === '') {\n    return router;\n  }\n\n  var navigateUrl = url.replace('./', '');\n\n  if (navigateUrl[0] !== '/' && navigateUrl.indexOf('#') !== 0) {\n    var currentPath = router.currentRoute.parentPath || router.currentRoute.path;\n    navigateUrl = ((currentPath ? currentPath + \"/\" : '/') + navigateUrl).replace('///', '/').replace('//', '/');\n  }\n\n  if (createRoute) {\n    route = extend(router.parseRouteUrl(navigateUrl), {\n      route: extend({}, createRoute)\n    });\n  } else {\n    route = router.findMatchingRoute(navigateUrl);\n  }\n\n  if (!route) {\n    return router;\n  }\n\n  if (route.route && route.route.viewName) {\n    var anotherViewName = route.route.viewName;\n    var anotherView = app.views[anotherViewName];\n\n    if (!anotherView) {\n      throw new Error(\"Framework7: There is no View with \\\"\" + anotherViewName + \"\\\" name that was specified in this route\");\n    }\n\n    if (anotherView !== router.view) {\n      return anotherView.router.navigate(navigateParams, navigateOptions);\n    }\n  }\n\n  if (route.route.redirect) {\n    return redirect.call(router, 'forward', route, navigateOptions);\n  }\n\n  var options = {};\n\n  if (route.route.options) {\n    extend(options, route.route.options, navigateOptions);\n  } else {\n    extend(options, navigateOptions);\n  }\n\n  if (options.openIn && (!router.params.ignoreOpenIn || router.params.ignoreOpenIn && router.history.length > 0)) {\n    return openIn(router, navigateUrl, options);\n  }\n\n  options.route = route;\n\n  function resolve() {\n    var routerLoaded = false;\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (route.route[modalLoadProp] && !routerLoaded) {\n        routerLoaded = true;\n        router.modalLoad(modalLoadProp, route, options, 'forward');\n      }\n    });\n\n    if (route.route.keepAlive && route.route.keepAliveData) {\n      load(router, {\n        el: route.route.keepAliveData.pageEl\n      }, options, false);\n      routerLoaded = true;\n    }\n\n    'url content component pageName el componentUrl'.split(' ').forEach(function (pageLoadProp) {\n      if (route.route[pageLoadProp] && !routerLoaded) {\n        var _load;\n\n        routerLoaded = true;\n        load(router, (_load = {}, _load[pageLoadProp] = route.route[pageLoadProp], _load), options, false);\n      }\n    });\n    if (routerLoaded) return; // Async\n\n    function asyncResolve(resolveParams, resolveOptions) {\n      router.allowPageChange = false;\n      var resolvedAsModal = false;\n      'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n        if (resolveParams[modalLoadProp]) {\n          resolvedAsModal = true;\n          var modalRoute = extend({}, route, {\n            route: resolveParams\n          });\n          router.allowPageChange = true;\n          router.modalLoad(modalLoadProp, modalRoute, extend(options, resolveOptions), 'forward');\n        }\n      });\n      if (resolvedAsModal) return;\n      load(router, resolveParams, extend(options, resolveOptions), true);\n    }\n\n    function asyncReject() {\n      router.allowPageChange = true;\n    }\n\n    if (route.route.async) {\n      router.allowPageChange = false;\n      route.route.async.call(router, {\n        router: router,\n        to: options.route,\n        from: router.currentRoute,\n        resolve: asyncResolve,\n        reject: asyncReject,\n        direction: 'forward',\n        app: app\n      });\n    }\n\n    if (route.route.asyncComponent) {\n      asyncComponent(router, route.route.asyncComponent, asyncResolve, asyncReject);\n    }\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n  }\n\n  if (router.params.masterDetailBreakpoint > 0 && route.route.masterRoute) {\n    // load detail route\n    var preloadMaster = true;\n    var masterLoaded = false;\n\n    if (router.currentRoute && router.currentRoute.route) {\n      if ((router.currentRoute.route.master === true || typeof router.currentRoute.route.master === 'function' && router.currentRoute.route.master(app, router)) && (router.currentRoute.route === route.route.masterRoute || router.currentRoute.route.path === route.route.masterRoute.path)) {\n        preloadMaster = false;\n      }\n\n      if (router.currentRoute.route.masterRoute && (router.currentRoute.route.masterRoute === route.route.masterRoute || router.currentRoute.route.masterRoute.path === route.route.masterRoute.path)) {\n        preloadMaster = false;\n        masterLoaded = true;\n      }\n    }\n\n    if (preloadMaster || masterLoaded && navigateOptions.reloadAll) {\n      router.navigate({\n        path: route.route.masterRoute.path,\n        params: route.params || {}\n      }, {\n        animate: false,\n        reloadAll: navigateOptions.reloadAll,\n        reloadCurrent: navigateOptions.reloadCurrent,\n        reloadPrevious: navigateOptions.reloadPrevious,\n        browserHistory: !navigateOptions.initial,\n        history: !navigateOptions.initial,\n        once: {\n          pageAfterIn: function pageAfterIn() {\n            router.navigate(navigateParams, extend({}, navigateOptions, {\n              animate: false,\n              reloadAll: false,\n              reloadCurrent: false,\n              reloadPrevious: false,\n              history: !navigateOptions.initial,\n              browserHistory: !navigateOptions.initial\n            }));\n          }\n        }\n      });\n      return router;\n    }\n  }\n\n  processRouteQueue.call(router, route, router.currentRoute, function () {\n    if (route.route.modules) {\n      app.loadModules(Array.isArray(route.route.modules) ? route.route.modules : [route.route.modules]).then(function () {\n        resolve();\n      }).catch(function () {\n        reject();\n      });\n    } else {\n      resolve();\n    }\n  }, function () {\n    reject();\n  }, 'forward'); // Return Router\n\n  return router;\n}\n\nexport { refreshPage, navigate };"]},"metadata":{},"sourceType":"module"}