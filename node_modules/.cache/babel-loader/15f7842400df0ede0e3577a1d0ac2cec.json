{"ast":null,"code":"import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\n\nfunction getElMinSize(dimension, $el) {\n  var minSize = $el.css(\"min-\" + dimension);\n\n  if (minSize === 'auto' || minSize === 'none') {\n    minSize = 0;\n  } else if (minSize.indexOf('px') >= 0) {\n    minSize = parseFloat(minSize);\n  } else if (minSize.indexOf('%') >= 0) {\n    minSize = $el.parent()[0][dimension === 'height' ? 'offsetHeight' : 'offsetWidth'] * parseFloat(minSize) / 100;\n  }\n\n  return minSize;\n}\n\nfunction getElMaxSize(dimension, $el) {\n  var maxSize = $el.css(\"max-\" + dimension);\n\n  if (maxSize === 'auto' || maxSize === 'none') {\n    maxSize = null;\n  } else if (maxSize.indexOf('px') >= 0) {\n    maxSize = parseFloat(maxSize);\n  } else if (maxSize.indexOf('%') >= 0) {\n    maxSize = $el.parent()[0][dimension === 'height' ? 'offsetHeight' : 'offsetWidth'] * parseFloat(maxSize) / 100;\n  }\n\n  return maxSize;\n}\n\nvar Grid = {\n  init: function init() {\n    var app = this;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var $resizeHandlerEl;\n    var $prevResizableEl;\n    var $nextResizableEl;\n    var prevElSize;\n    var prevElMinSize;\n    var prevElMaxSize;\n    var nextElSize;\n    var nextElMinSize;\n    var nextElMaxSize;\n    var parentSize;\n    var itemsInFlow;\n    var gapSize;\n    var isScrolling;\n\n    function handleTouchStart(e) {\n      if (isTouched || isMoved) return;\n      $resizeHandlerEl = $(e.target).closest('.resize-handler');\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      isTouched = true;\n      $prevResizableEl = undefined;\n      $nextResizableEl = undefined;\n      isScrolling = undefined;\n    }\n\n    function handleTouchMove(e) {\n      if (!isTouched) return;\n      var isRow = $resizeHandlerEl.parent('.row').length === 1;\n      var sizeProp = isRow ? 'height' : 'width';\n      var getSizeProp = isRow ? 'offsetHeight' : 'offsetWidth';\n\n      if (!isMoved) {\n        $prevResizableEl = $resizeHandlerEl.parent(isRow ? '.row' : '.col');\n\n        if ($prevResizableEl.length && (!$prevResizableEl.hasClass('resizable') || $prevResizableEl.hasClass('resizable-fixed'))) {\n          $prevResizableEl = $prevResizableEl.prevAll('.resizable:not(.resizable-fixed)').eq(0);\n        }\n\n        $nextResizableEl = $prevResizableEl.next(isRow ? '.row' : '.col');\n\n        if ($nextResizableEl.length && (!$nextResizableEl.hasClass('resizable') || $nextResizableEl.hasClass('resizable-fixed'))) {\n          $nextResizableEl = $nextResizableEl.nextAll('.resizable:not(.resizable-fixed)').eq(0);\n        }\n\n        if ($prevResizableEl.length) {\n          prevElSize = $prevResizableEl[0][getSizeProp];\n          prevElMinSize = getElMinSize(sizeProp, $prevResizableEl);\n          prevElMaxSize = getElMaxSize(sizeProp, $prevResizableEl);\n          parentSize = $prevResizableEl.parent()[0][getSizeProp];\n          itemsInFlow = $prevResizableEl.parent().children(isRow ? '.row' : '[class*=\"col-\"], .col').length;\n          gapSize = parseFloat($prevResizableEl.css(isRow ? '--f7-grid-row-gap' : '--f7-grid-gap'));\n        }\n\n        if ($nextResizableEl.length) {\n          nextElSize = $nextResizableEl[0][getSizeProp];\n          nextElMinSize = getElMinSize(sizeProp, $nextResizableEl);\n          nextElMaxSize = getElMaxSize(sizeProp, $nextResizableEl);\n\n          if (!$prevResizableEl.length) {\n            parentSize = $nextResizableEl.parent()[0][getSizeProp];\n            itemsInFlow = $nextResizableEl.parent().children(isRow ? '.row' : '[class*=\"col-\"], .col').length;\n            gapSize = parseFloat($nextResizableEl.css(isRow ? '--f7-grid-row-gap' : '--f7-grid-gap'));\n          }\n        }\n      }\n\n      isMoved = true;\n      var touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      var touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (typeof isScrolling === 'undefined' && !isRow) {\n        isScrolling = !!(isScrolling || Math.abs(touchCurrentY - touchStartY) > Math.abs(touchCurrentX - touchStartX));\n      }\n\n      if (isScrolling) {\n        isTouched = false;\n        isMoved = false;\n        return;\n      }\n\n      var isAbsolute = $prevResizableEl.hasClass('resizable-absolute') || $nextResizableEl.hasClass('resizable-absolute');\n      var resizeNextEl = !isRow || isRow && !isAbsolute;\n\n      if (resizeNextEl && !$nextResizableEl.length || !$prevResizableEl.length) {\n        isTouched = false;\n        isMoved = false;\n        return;\n      }\n\n      e.preventDefault();\n      var diff = isRow ? touchCurrentY - touchStartY : touchCurrentX - touchStartX;\n      var prevElNewSize;\n      var nextElNewSize;\n\n      if ($prevResizableEl.length) {\n        prevElNewSize = prevElSize + diff;\n\n        if (prevElNewSize < prevElMinSize) {\n          prevElNewSize = prevElMinSize;\n          diff = prevElNewSize - prevElSize;\n        }\n\n        if (prevElMaxSize && prevElNewSize > prevElMaxSize) {\n          prevElNewSize = prevElMaxSize;\n          diff = prevElNewSize - prevElSize;\n        }\n      }\n\n      if ($nextResizableEl.length && resizeNextEl) {\n        nextElNewSize = nextElSize - diff;\n\n        if (nextElNewSize < nextElMinSize) {\n          nextElNewSize = nextElMinSize;\n          diff = nextElSize - nextElNewSize;\n          prevElNewSize = prevElSize + diff;\n        }\n\n        if (nextElMaxSize && nextElNewSize > nextElMaxSize) {\n          nextElNewSize = nextElMaxSize;\n          diff = nextElSize - nextElNewSize;\n          prevElNewSize = prevElSize + diff;\n        }\n      }\n\n      if (isAbsolute) {\n        $prevResizableEl[0].style[sizeProp] = prevElNewSize + \"px\";\n\n        if (resizeNextEl) {\n          $nextResizableEl[0].style[sizeProp] = nextElNewSize + \"px\";\n        }\n\n        $prevResizableEl.trigger('grid:resize');\n        $nextResizableEl.trigger('grid:resize');\n        app.emit('gridResize', $prevResizableEl[0]);\n        app.emit('gridResize', $nextResizableEl[0]);\n        return;\n      }\n\n      var gapAddSize = (itemsInFlow - 1) * gapSize / itemsInFlow;\n      var gapAddSizeCSS = isRow ? itemsInFlow - 1 + \" * var(--f7-grid-row-gap) / \" + itemsInFlow : '(var(--f7-cols-per-row) - 1) * var(--f7-grid-gap) / var(--f7-cols-per-row)';\n      var prevElNewSizeNormalized = prevElNewSize + gapAddSize;\n      var nextElNewSizeNormalized = nextElNewSize + gapAddSize;\n      $prevResizableEl[0].style[sizeProp] = \"calc(\" + prevElNewSizeNormalized / parentSize * 100 + \"% - \" + gapAddSizeCSS + \")\";\n      $nextResizableEl[0].style[sizeProp] = \"calc(\" + nextElNewSizeNormalized / parentSize * 100 + \"% - \" + gapAddSizeCSS + \")\";\n      $prevResizableEl.trigger('grid:resize');\n      $nextResizableEl.trigger('grid:resize');\n      app.emit('gridResize', $prevResizableEl[0]);\n      app.emit('gridResize', $nextResizableEl[0]);\n    }\n\n    function handleTouchEnd() {\n      if (!isTouched) return;\n\n      if (!isMoved) {\n        isTouched = false;\n      }\n\n      isTouched = false;\n      isMoved = false;\n    }\n\n    var document = getDocument();\n    $(document).on(app.touchEvents.start, '.col > .resize-handler, .row > .resize-handler', handleTouchStart);\n    app.on('touchmove', handleTouchMove);\n    app.on('touchend', handleTouchEnd);\n  }\n};\nexport default {\n  name: 'grid',\n  create: function create() {\n    var app = this;\n    extend(app, {\n      grid: {\n        init: Grid.init.bind(app)\n      }\n    });\n  },\n  on: {\n    init: function init() {\n      var app = this;\n      app.grid.init();\n    }\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/grid/grid.js"],"names":["getDocument","$","extend","getElMinSize","dimension","$el","minSize","css","indexOf","parseFloat","parent","getElMaxSize","maxSize","Grid","init","app","isTouched","isMoved","touchStartX","touchStartY","$resizeHandlerEl","$prevResizableEl","$nextResizableEl","prevElSize","prevElMinSize","prevElMaxSize","nextElSize","nextElMinSize","nextElMaxSize","parentSize","itemsInFlow","gapSize","isScrolling","handleTouchStart","e","target","closest","type","targetTouches","pageX","pageY","undefined","handleTouchMove","isRow","length","sizeProp","getSizeProp","hasClass","prevAll","eq","next","nextAll","children","touchCurrentX","touchCurrentY","Math","abs","isAbsolute","resizeNextEl","preventDefault","diff","prevElNewSize","nextElNewSize","style","trigger","emit","gapAddSize","gapAddSizeCSS","prevElNewSizeNormalized","nextElNewSizeNormalized","handleTouchEnd","document","on","touchEvents","start","name","create","grid","bind"],"mappings":"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","sourcesContent":["import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\n\nfunction getElMinSize(dimension, $el) {\n  var minSize = $el.css(\"min-\" + dimension);\n\n  if (minSize === 'auto' || minSize === 'none') {\n    minSize = 0;\n  } else if (minSize.indexOf('px') >= 0) {\n    minSize = parseFloat(minSize);\n  } else if (minSize.indexOf('%') >= 0) {\n    minSize = $el.parent()[0][dimension === 'height' ? 'offsetHeight' : 'offsetWidth'] * parseFloat(minSize) / 100;\n  }\n\n  return minSize;\n}\n\nfunction getElMaxSize(dimension, $el) {\n  var maxSize = $el.css(\"max-\" + dimension);\n\n  if (maxSize === 'auto' || maxSize === 'none') {\n    maxSize = null;\n  } else if (maxSize.indexOf('px') >= 0) {\n    maxSize = parseFloat(maxSize);\n  } else if (maxSize.indexOf('%') >= 0) {\n    maxSize = $el.parent()[0][dimension === 'height' ? 'offsetHeight' : 'offsetWidth'] * parseFloat(maxSize) / 100;\n  }\n\n  return maxSize;\n}\n\nvar Grid = {\n  init: function init() {\n    var app = this;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var $resizeHandlerEl;\n    var $prevResizableEl;\n    var $nextResizableEl;\n    var prevElSize;\n    var prevElMinSize;\n    var prevElMaxSize;\n    var nextElSize;\n    var nextElMinSize;\n    var nextElMaxSize;\n    var parentSize;\n    var itemsInFlow;\n    var gapSize;\n    var isScrolling;\n\n    function handleTouchStart(e) {\n      if (isTouched || isMoved) return;\n      $resizeHandlerEl = $(e.target).closest('.resize-handler');\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      isTouched = true;\n      $prevResizableEl = undefined;\n      $nextResizableEl = undefined;\n      isScrolling = undefined;\n    }\n\n    function handleTouchMove(e) {\n      if (!isTouched) return;\n      var isRow = $resizeHandlerEl.parent('.row').length === 1;\n      var sizeProp = isRow ? 'height' : 'width';\n      var getSizeProp = isRow ? 'offsetHeight' : 'offsetWidth';\n\n      if (!isMoved) {\n        $prevResizableEl = $resizeHandlerEl.parent(isRow ? '.row' : '.col');\n\n        if ($prevResizableEl.length && (!$prevResizableEl.hasClass('resizable') || $prevResizableEl.hasClass('resizable-fixed'))) {\n          $prevResizableEl = $prevResizableEl.prevAll('.resizable:not(.resizable-fixed)').eq(0);\n        }\n\n        $nextResizableEl = $prevResizableEl.next(isRow ? '.row' : '.col');\n\n        if ($nextResizableEl.length && (!$nextResizableEl.hasClass('resizable') || $nextResizableEl.hasClass('resizable-fixed'))) {\n          $nextResizableEl = $nextResizableEl.nextAll('.resizable:not(.resizable-fixed)').eq(0);\n        }\n\n        if ($prevResizableEl.length) {\n          prevElSize = $prevResizableEl[0][getSizeProp];\n          prevElMinSize = getElMinSize(sizeProp, $prevResizableEl);\n          prevElMaxSize = getElMaxSize(sizeProp, $prevResizableEl);\n          parentSize = $prevResizableEl.parent()[0][getSizeProp];\n          itemsInFlow = $prevResizableEl.parent().children(isRow ? '.row' : '[class*=\"col-\"], .col').length;\n          gapSize = parseFloat($prevResizableEl.css(isRow ? '--f7-grid-row-gap' : '--f7-grid-gap'));\n        }\n\n        if ($nextResizableEl.length) {\n          nextElSize = $nextResizableEl[0][getSizeProp];\n          nextElMinSize = getElMinSize(sizeProp, $nextResizableEl);\n          nextElMaxSize = getElMaxSize(sizeProp, $nextResizableEl);\n\n          if (!$prevResizableEl.length) {\n            parentSize = $nextResizableEl.parent()[0][getSizeProp];\n            itemsInFlow = $nextResizableEl.parent().children(isRow ? '.row' : '[class*=\"col-\"], .col').length;\n            gapSize = parseFloat($nextResizableEl.css(isRow ? '--f7-grid-row-gap' : '--f7-grid-gap'));\n          }\n        }\n      }\n\n      isMoved = true;\n      var touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      var touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (typeof isScrolling === 'undefined' && !isRow) {\n        isScrolling = !!(isScrolling || Math.abs(touchCurrentY - touchStartY) > Math.abs(touchCurrentX - touchStartX));\n      }\n\n      if (isScrolling) {\n        isTouched = false;\n        isMoved = false;\n        return;\n      }\n\n      var isAbsolute = $prevResizableEl.hasClass('resizable-absolute') || $nextResizableEl.hasClass('resizable-absolute');\n      var resizeNextEl = !isRow || isRow && !isAbsolute;\n\n      if (resizeNextEl && !$nextResizableEl.length || !$prevResizableEl.length) {\n        isTouched = false;\n        isMoved = false;\n        return;\n      }\n\n      e.preventDefault();\n      var diff = isRow ? touchCurrentY - touchStartY : touchCurrentX - touchStartX;\n      var prevElNewSize;\n      var nextElNewSize;\n\n      if ($prevResizableEl.length) {\n        prevElNewSize = prevElSize + diff;\n\n        if (prevElNewSize < prevElMinSize) {\n          prevElNewSize = prevElMinSize;\n          diff = prevElNewSize - prevElSize;\n        }\n\n        if (prevElMaxSize && prevElNewSize > prevElMaxSize) {\n          prevElNewSize = prevElMaxSize;\n          diff = prevElNewSize - prevElSize;\n        }\n      }\n\n      if ($nextResizableEl.length && resizeNextEl) {\n        nextElNewSize = nextElSize - diff;\n\n        if (nextElNewSize < nextElMinSize) {\n          nextElNewSize = nextElMinSize;\n          diff = nextElSize - nextElNewSize;\n          prevElNewSize = prevElSize + diff;\n        }\n\n        if (nextElMaxSize && nextElNewSize > nextElMaxSize) {\n          nextElNewSize = nextElMaxSize;\n          diff = nextElSize - nextElNewSize;\n          prevElNewSize = prevElSize + diff;\n        }\n      }\n\n      if (isAbsolute) {\n        $prevResizableEl[0].style[sizeProp] = prevElNewSize + \"px\";\n\n        if (resizeNextEl) {\n          $nextResizableEl[0].style[sizeProp] = nextElNewSize + \"px\";\n        }\n\n        $prevResizableEl.trigger('grid:resize');\n        $nextResizableEl.trigger('grid:resize');\n        app.emit('gridResize', $prevResizableEl[0]);\n        app.emit('gridResize', $nextResizableEl[0]);\n        return;\n      }\n\n      var gapAddSize = (itemsInFlow - 1) * gapSize / itemsInFlow;\n      var gapAddSizeCSS = isRow ? itemsInFlow - 1 + \" * var(--f7-grid-row-gap) / \" + itemsInFlow : '(var(--f7-cols-per-row) - 1) * var(--f7-grid-gap) / var(--f7-cols-per-row)';\n      var prevElNewSizeNormalized = prevElNewSize + gapAddSize;\n      var nextElNewSizeNormalized = nextElNewSize + gapAddSize;\n      $prevResizableEl[0].style[sizeProp] = \"calc(\" + prevElNewSizeNormalized / parentSize * 100 + \"% - \" + gapAddSizeCSS + \")\";\n      $nextResizableEl[0].style[sizeProp] = \"calc(\" + nextElNewSizeNormalized / parentSize * 100 + \"% - \" + gapAddSizeCSS + \")\";\n      $prevResizableEl.trigger('grid:resize');\n      $nextResizableEl.trigger('grid:resize');\n      app.emit('gridResize', $prevResizableEl[0]);\n      app.emit('gridResize', $nextResizableEl[0]);\n    }\n\n    function handleTouchEnd() {\n      if (!isTouched) return;\n\n      if (!isMoved) {\n        isTouched = false;\n      }\n\n      isTouched = false;\n      isMoved = false;\n    }\n\n    var document = getDocument();\n    $(document).on(app.touchEvents.start, '.col > .resize-handler, .row > .resize-handler', handleTouchStart);\n    app.on('touchmove', handleTouchMove);\n    app.on('touchend', handleTouchEnd);\n  }\n};\nexport default {\n  name: 'grid',\n  create: function create() {\n    var app = this;\n    extend(app, {\n      grid: {\n        init: Grid.init.bind(app)\n      }\n    });\n  },\n  on: {\n    init: function init() {\n      var app = this;\n      app.grid.init();\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}