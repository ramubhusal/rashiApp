{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { extend, nextFrame } from '../../shared/utils';\nimport { getSupport } from '../../shared/get-support';\n\nfunction resizablePanel(panel) {\n  var app = panel.app;\n  var support = getSupport();\n  if (panel.resizableInitialized) return;\n  extend(panel, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  var $htmlEl = $('html');\n  var $el = panel.$el,\n      $backdropEl = panel.$backdropEl,\n      side = panel.side,\n      effect = panel.effect;\n  if (!$el) return;\n  var isTouched;\n  var isMoved;\n  var touchesStart = {};\n  var touchesDiff;\n  var panelWidth;\n  var $viewEl;\n  var panelMinWidth;\n  var panelMaxWidth;\n  var visibleByBreakpoint;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    var newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return panel.resizable && $el.hasClass('panel-resizable');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n    visibleByBreakpoint = $el.hasClass('panel-in-breakpoint');\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      panelWidth = $el[0].offsetWidth;\n      $el.transition(0);\n      $el.addClass('panel-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n\n      if (effect === 'reveal' || visibleByBreakpoint) {\n        $viewEl = $(panel.getViewEl());\n\n        if (panel.$containerEl && panel.$containerEl.hasClass('page')) {\n          $viewEl.add(panel.$containerEl.children('.page-content, .tabs, .fab'));\n        }\n      }\n\n      if (effect === 'reveal' && !visibleByBreakpoint) {\n        $backdropEl.transition(0);\n        $viewEl.transition(0);\n      }\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    var newPanelWidth = side === 'left' ? panelWidth + touchesDiff : panelWidth - touchesDiff;\n\n    if (panelMinWidth && !Number.isNaN(panelMinWidth)) {\n      newPanelWidth = Math.max(newPanelWidth, panelMinWidth);\n    }\n\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth)) {\n      newPanelWidth = Math.min(newPanelWidth, panelMaxWidth);\n    }\n\n    newPanelWidth = Math.min(Math.max(newPanelWidth, 0), app.width);\n    panel.resizableWidth = newPanelWidth;\n    $el[0].style.width = newPanelWidth + \"px\";\n\n    if (effect === 'reveal' && !visibleByBreakpoint) {\n      if ($viewEl) {\n        $viewEl.transform(\"translate3d(\" + (side === 'left' ? newPanelWidth : -newPanelWidth) + \"px, 0, 0)\");\n      }\n\n      if ($backdropEl) {\n        $backdropEl.transform(\"translate3d(\" + (side === 'left' ? newPanelWidth : -newPanelWidth) + \"px, 0, 0)\");\n      }\n    } else if (visibleByBreakpoint && $viewEl) {\n      $viewEl.css(\"margin-\" + side, newPanelWidth + \"px\");\n    }\n\n    $el.trigger('panel:resize', newPanelWidth);\n    panel.emit('local::resize panelResize', panel, newPanelWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty(\"--f7-panel-\" + side + \"-width\", panel.resizableWidth + \"px\");\n    $el[0].style.width = '';\n\n    if (effect === 'reveal' && !visibleByBreakpoint) {\n      $viewEl.transform('');\n      $backdropEl.transform('');\n    }\n\n    $el.removeClass('panel-resizing');\n    nextFrame(function () {\n      $el.transition('');\n\n      if (effect === 'reveal') {\n        $backdropEl.transition('');\n        if ($viewEl) $viewEl.transition('');\n      }\n    });\n  }\n\n  function handleResize() {\n    if (!panel.opened || !panel.resizableWidth) return;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n\n    if (panelMinWidth && !Number.isNaN(panelMinWidth) && panel.resizableWidth < panelMinWidth) {\n      panel.resizableWidth = Math.max(panel.resizableWidth, panelMinWidth);\n    }\n\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth) && panel.resizableWidth > panelMaxWidth) {\n      panel.resizableWidth = Math.min(panel.resizableWidth, panelMaxWidth);\n    }\n\n    panel.resizableWidth = Math.min(Math.max(panel.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty(\"--f7-panel-\" + side + \"-width\", panel.resizableWidth + \"px\");\n  }\n\n  if (panel.$el.find('.panel-resize-handler').length === 0) {\n    panel.$el.append('<div class=\"panel-resize-handler\"></div>');\n  }\n\n  panel.$resizeHandlerEl = panel.$el.children('.panel-resize-handler');\n  $el.addClass('panel-resizable'); // Add Events\n\n  var passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  panel.$el.on(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  panel.on('beforeOpen', handleResize);\n  panel.once('panelDestroy', function () {\n    $el.removeClass('panel-resizable');\n    panel.$resizeHandlerEl.remove();\n    panel.$el.off(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    panel.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizablePanel;","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/components/panel/resizable-panel.js"],"names":["$","extend","nextFrame","getSupport","resizablePanel","panel","app","support","resizableInitialized","resizable","resizableWidth","$htmlEl","$el","$backdropEl","side","effect","isTouched","isMoved","touchesStart","touchesDiff","panelWidth","$viewEl","panelMinWidth","panelMaxWidth","visibleByBreakpoint","transformCSSWidth","v","indexOf","parseInt","width","newV","Number","isNaN","isResizable","hasClass","handleTouchStart","e","x","type","targetTouches","pageX","y","pageY","css","handleTouchMove","offsetWidth","transition","addClass","getViewEl","$containerEl","add","children","preventDefault","newPanelWidth","Math","max","min","style","transform","trigger","emit","handleTouchEnd","setProperty","removeClass","handleResize","opened","find","length","append","$resizeHandlerEl","passive","passiveListener","on","touchEvents","start","once","remove","off"],"mappings":"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","sourcesContent":["import $ from '../../shared/dom7';\nimport { extend, nextFrame } from '../../shared/utils';\nimport { getSupport } from '../../shared/get-support';\n\nfunction resizablePanel(panel) {\n  var app = panel.app;\n  var support = getSupport();\n  if (panel.resizableInitialized) return;\n  extend(panel, {\n    resizable: true,\n    resizableWidth: null,\n    resizableInitialized: true\n  });\n  var $htmlEl = $('html');\n  var $el = panel.$el,\n      $backdropEl = panel.$backdropEl,\n      side = panel.side,\n      effect = panel.effect;\n  if (!$el) return;\n  var isTouched;\n  var isMoved;\n  var touchesStart = {};\n  var touchesDiff;\n  var panelWidth;\n  var $viewEl;\n  var panelMinWidth;\n  var panelMaxWidth;\n  var visibleByBreakpoint;\n\n  function transformCSSWidth(v) {\n    if (!v) return null;\n\n    if (v.indexOf('%') >= 0 || v.indexOf('vw') >= 0) {\n      return parseInt(v, 10) / 100 * app.width;\n    }\n\n    var newV = parseInt(v, 10);\n    if (Number.isNaN(newV)) return null;\n    return newV;\n  }\n\n  function isResizable() {\n    return panel.resizable && $el.hasClass('panel-resizable');\n  }\n\n  function handleTouchStart(e) {\n    if (!isResizable()) return;\n    touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    isMoved = false;\n    isTouched = true;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n    visibleByBreakpoint = $el.hasClass('panel-in-breakpoint');\n  }\n\n  function handleTouchMove(e) {\n    if (!isTouched) return;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\n    if (!isMoved) {\n      panelWidth = $el[0].offsetWidth;\n      $el.transition(0);\n      $el.addClass('panel-resizing');\n      $htmlEl.css('cursor', 'col-resize');\n\n      if (effect === 'reveal' || visibleByBreakpoint) {\n        $viewEl = $(panel.getViewEl());\n\n        if (panel.$containerEl && panel.$containerEl.hasClass('page')) {\n          $viewEl.add(panel.$containerEl.children('.page-content, .tabs, .fab'));\n        }\n      }\n\n      if (effect === 'reveal' && !visibleByBreakpoint) {\n        $backdropEl.transition(0);\n        $viewEl.transition(0);\n      }\n    }\n\n    isMoved = true;\n    e.preventDefault();\n    touchesDiff = pageX - touchesStart.x;\n    var newPanelWidth = side === 'left' ? panelWidth + touchesDiff : panelWidth - touchesDiff;\n\n    if (panelMinWidth && !Number.isNaN(panelMinWidth)) {\n      newPanelWidth = Math.max(newPanelWidth, panelMinWidth);\n    }\n\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth)) {\n      newPanelWidth = Math.min(newPanelWidth, panelMaxWidth);\n    }\n\n    newPanelWidth = Math.min(Math.max(newPanelWidth, 0), app.width);\n    panel.resizableWidth = newPanelWidth;\n    $el[0].style.width = newPanelWidth + \"px\";\n\n    if (effect === 'reveal' && !visibleByBreakpoint) {\n      if ($viewEl) {\n        $viewEl.transform(\"translate3d(\" + (side === 'left' ? newPanelWidth : -newPanelWidth) + \"px, 0, 0)\");\n      }\n\n      if ($backdropEl) {\n        $backdropEl.transform(\"translate3d(\" + (side === 'left' ? newPanelWidth : -newPanelWidth) + \"px, 0, 0)\");\n      }\n    } else if (visibleByBreakpoint && $viewEl) {\n      $viewEl.css(\"margin-\" + side, newPanelWidth + \"px\");\n    }\n\n    $el.trigger('panel:resize', newPanelWidth);\n    panel.emit('local::resize panelResize', panel, newPanelWidth);\n  }\n\n  function handleTouchEnd() {\n    $('html').css('cursor', '');\n\n    if (!isTouched || !isMoved) {\n      isTouched = false;\n      isMoved = false;\n      return;\n    }\n\n    isTouched = false;\n    isMoved = false;\n    $htmlEl[0].style.setProperty(\"--f7-panel-\" + side + \"-width\", panel.resizableWidth + \"px\");\n    $el[0].style.width = '';\n\n    if (effect === 'reveal' && !visibleByBreakpoint) {\n      $viewEl.transform('');\n      $backdropEl.transform('');\n    }\n\n    $el.removeClass('panel-resizing');\n    nextFrame(function () {\n      $el.transition('');\n\n      if (effect === 'reveal') {\n        $backdropEl.transition('');\n        if ($viewEl) $viewEl.transition('');\n      }\n    });\n  }\n\n  function handleResize() {\n    if (!panel.opened || !panel.resizableWidth) return;\n    panelMinWidth = transformCSSWidth($el.css('min-width'));\n    panelMaxWidth = transformCSSWidth($el.css('max-width'));\n\n    if (panelMinWidth && !Number.isNaN(panelMinWidth) && panel.resizableWidth < panelMinWidth) {\n      panel.resizableWidth = Math.max(panel.resizableWidth, panelMinWidth);\n    }\n\n    if (panelMaxWidth && !Number.isNaN(panelMaxWidth) && panel.resizableWidth > panelMaxWidth) {\n      panel.resizableWidth = Math.min(panel.resizableWidth, panelMaxWidth);\n    }\n\n    panel.resizableWidth = Math.min(Math.max(panel.resizableWidth, 0), app.width);\n    $htmlEl[0].style.setProperty(\"--f7-panel-\" + side + \"-width\", panel.resizableWidth + \"px\");\n  }\n\n  if (panel.$el.find('.panel-resize-handler').length === 0) {\n    panel.$el.append('<div class=\"panel-resize-handler\"></div>');\n  }\n\n  panel.$resizeHandlerEl = panel.$el.children('.panel-resize-handler');\n  $el.addClass('panel-resizable'); // Add Events\n\n  var passive = support.passiveListener ? {\n    passive: true\n  } : false;\n  panel.$el.on(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n  app.on('touchmove:active', handleTouchMove);\n  app.on('touchend:passive', handleTouchEnd);\n  app.on('resize', handleResize);\n  panel.on('beforeOpen', handleResize);\n  panel.once('panelDestroy', function () {\n    $el.removeClass('panel-resizable');\n    panel.$resizeHandlerEl.remove();\n    panel.$el.off(app.touchEvents.start, '.panel-resize-handler', handleTouchStart, passive);\n    app.off('touchmove:active', handleTouchMove);\n    app.off('touchend:passive', handleTouchEnd);\n    app.off('resize', handleResize);\n    panel.off('beforeOpen', handleResize);\n  });\n}\n\nexport default resizablePanel;"]},"metadata":{},"sourceType":"module"}