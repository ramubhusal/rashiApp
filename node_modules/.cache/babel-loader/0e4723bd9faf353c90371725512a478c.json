{"ast":null,"code":"import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend, parseUrlQuery } from '../../shared/utils';\nimport { getDevice } from '../../shared/get-device';\nimport History from '../../shared/history';\nimport redirect from './redirect';\nimport processRouteQueue from './process-route-queue';\nimport appRouterCheck from './app-router-check';\nimport asyncComponent from './async-component';\n\nfunction backward(router, el, backwardOptions) {\n  var device = getDevice();\n  var document = getDocument();\n  var $el = $(el);\n  var app = router.app;\n  var view = router.view;\n  var options = extend({\n    animate: router.params.animate,\n    browserHistory: true,\n    replaceState: false\n  }, backwardOptions);\n  var masterDetailEnabled = router.params.masterDetailBreakpoint > 0;\n  var isMaster = masterDetailEnabled && options.route && options.route.route && (options.route.route.master === true || typeof options.route.route.master === 'function' && options.route.route.master(app, router));\n  var masterPageEl;\n  var masterPageRemoved;\n  var dynamicNavbar = router.dynamicNavbar;\n  var $newPage = $el;\n  var $oldPage = router.$el.children('.page-current');\n  var initialPreload = $oldPage.length === 0 && options.preload;\n  var currentIsMaster = masterDetailEnabled && $oldPage.hasClass('page-master');\n\n  if ($newPage.length) {\n    // Remove theme elements\n    router.removeThemeElements($newPage);\n  }\n\n  var $navbarsEl;\n  var $newNavbarEl;\n  var $oldNavbarEl;\n\n  if (dynamicNavbar) {\n    $newNavbarEl = $newPage.children('.navbar');\n    $navbarsEl = router.$navbarsEl;\n\n    if ($newNavbarEl.length === 0 && $newPage[0] && $newPage[0].f7Page) {\n      // Try from pageData\n      $newNavbarEl = $newPage[0].f7Page.$navbarEl;\n    }\n\n    $oldNavbarEl = $navbarsEl.find('.navbar-current');\n  }\n\n  router.allowPageChange = false;\n\n  if ($newPage.length === 0 || $oldPage.length === 0 && !options.preload) {\n    router.allowPageChange = true;\n    return router;\n  } // Remove theme elements\n\n\n  router.removeThemeElements($newPage); // Save Keep Alive Cache\n\n  if (options.route && options.route.route && options.route.route.keepAlive && !options.route.route.keepAliveData) {\n    options.route.route.keepAliveData = {\n      pageEl: $el[0]\n    };\n  } // Pages In View\n\n\n  var isDetail;\n  var isDetailRoot;\n\n  if (masterDetailEnabled) {\n    var $pagesInView = router.$el.children('.page:not(.stacked)').filter(function (pageInView) {\n      return pageInView !== $newPage[0];\n    }); // Find Detail' master page\n\n    for (var i = 0; i < $pagesInView.length; i += 1) {\n      if (!masterPageEl && $pagesInView[i].classList.contains('page-master')) {\n        masterPageEl = $pagesInView[i];\n        continue; // eslint-disable-line\n      }\n    }\n\n    isDetail = !isMaster && masterPageEl && router.history.indexOf(options.route.url) > router.history.indexOf(masterPageEl.f7Page.route.url);\n\n    if (!isDetail && !isMaster && masterPageEl && masterPageEl.f7Page && options.route.route.masterRoute) {\n      isDetail = options.route.route.masterRoute.path === masterPageEl.f7Page.route.route.path;\n    }\n  }\n\n  if (isDetail && masterPageEl && masterPageEl.f7Page) {\n    isDetailRoot = router.history.indexOf(options.route.url) - router.history.indexOf(masterPageEl.f7Page.route.url) === 1;\n  } // New Page\n\n\n  $newPage.addClass(\"page-\" + (initialPreload ? 'current' : 'previous') + (isMaster ? ' page-master' : '') + (isDetail ? ' page-master-detail' : '') + (isDetailRoot ? ' page-master-detail-root' : '')).removeClass('stacked').removeAttr('aria-hidden').trigger('page:unstack').trigger('page:position', {\n    position: initialPreload ? 'current' : 'previous'\n  });\n  router.emit('pageUnstack', $newPage[0]);\n  router.emit('pagePosition', $newPage[0], initialPreload ? 'current' : 'previous');\n\n  if (isMaster || isDetail) {\n    $newPage.trigger('page:role', {\n      role: isMaster ? 'master' : 'detail',\n      root: !!isDetailRoot\n    });\n    router.emit('pageRole', $newPage[0], {\n      role: isMaster ? 'master' : 'detail',\n      detailRoot: !!isDetailRoot\n    });\n  }\n\n  if (dynamicNavbar && $newNavbarEl.length > 0) {\n    $newNavbarEl.addClass(\"navbar-\" + (initialPreload ? 'current' : 'previous') + (isMaster ? ' navbar-master' : '') + (isDetail ? ' navbar-master-detail' : '') + (isDetailRoot ? ' navbar-master-detail-root' : '')).removeClass('stacked').removeAttr('aria-hidden');\n    $newNavbarEl.trigger('navbar:position', {\n      position: initialPreload ? 'current' : 'previous'\n    });\n    router.emit('navbarPosition', $newNavbarEl[0], initialPreload ? 'current' : 'previous');\n\n    if (isMaster || isDetailRoot) {\n      router.emit('navbarRole', $newNavbarEl[0], {\n        role: isMaster ? 'master' : 'detail',\n        detailRoot: !!isDetailRoot\n      });\n    }\n  } // Remove previous page in case of \"forced\"\n\n\n  var backIndex;\n\n  if (options.force) {\n    if ($oldPage.prev('.page-previous:not(.stacked)').length > 0 || $oldPage.prev('.page-previous').length === 0) {\n      if (router.history.indexOf(options.route.url) >= 0) {\n        backIndex = router.history.length - router.history.indexOf(options.route.url) - 1;\n        router.history = router.history.slice(0, router.history.indexOf(options.route.url) + 2);\n        view.history = router.history;\n      } else if (router.history[[router.history.length - 2]]) {\n        router.history[router.history.length - 2] = options.route.url;\n      } else {\n        router.history.unshift(router.url);\n      }\n\n      if (backIndex && router.params.stackPages) {\n        $oldPage.prevAll('.page-previous').each(function (pageToRemove) {\n          var $pageToRemove = $(pageToRemove);\n          var $navbarToRemove;\n\n          if (dynamicNavbar) {\n            // $navbarToRemove = $oldNavbarEl.prevAll('.navbar-previous').eq(index);\n            $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n          }\n\n          if ($pageToRemove[0] !== $newPage[0] && $pageToRemove.index() > $newPage.index()) {\n            if (router.initialPages.indexOf($pageToRemove[0]) >= 0) {\n              $pageToRemove.addClass('stacked');\n              $pageToRemove.trigger('page:stack');\n              router.emit('pageStack', $pageToRemove[0]);\n\n              if (dynamicNavbar) {\n                $navbarToRemove.addClass('stacked');\n              }\n            } else {\n              router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined, options);\n\n              if ($pageToRemove[0] === masterPageEl) {\n                masterPageRemoved = true;\n              }\n\n              router.removePage($pageToRemove);\n\n              if (dynamicNavbar && $navbarToRemove.length > 0) {\n                router.removeNavbar($navbarToRemove);\n              }\n            }\n          }\n        });\n      } else {\n        var $pageToRemove = $oldPage.prev('.page-previous:not(.stacked)');\n        var $navbarToRemove;\n\n        if (dynamicNavbar) {\n          // $navbarToRemove = $oldNavbarEl.prev('.navbar-inner:not(.stacked)');\n          $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n        }\n\n        if (router.params.stackPages && router.initialPages.indexOf($pageToRemove[0]) >= 0) {\n          $pageToRemove.addClass('stacked');\n          $pageToRemove.trigger('page:stack');\n          router.emit('pageStack', $pageToRemove[0]);\n          $navbarToRemove.addClass('stacked');\n        } else if ($pageToRemove.length > 0) {\n          router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined, options);\n\n          if ($pageToRemove[0] === masterPageEl) {\n            masterPageRemoved = true;\n          }\n\n          router.removePage($pageToRemove);\n\n          if (dynamicNavbar && $navbarToRemove.length) {\n            router.removeNavbar($navbarToRemove);\n          }\n        }\n      }\n    }\n  } // Insert new page\n\n\n  var newPageInDom = $newPage.parents(document).length > 0;\n  var f7Component = $newPage[0].f7Component;\n\n  function insertPage() {\n    if (initialPreload) {\n      if (!newPageInDom && f7Component) {\n        f7Component.mount(function (componentEl) {\n          router.$el.append(componentEl);\n        });\n      } else {\n        router.$el.append($newPage);\n      }\n    }\n\n    if ($newPage.next($oldPage).length === 0) {\n      if (!newPageInDom && f7Component) {\n        f7Component.mount(function (componentEl) {\n          $(componentEl).insertBefore($oldPage);\n        });\n      } else {\n        $newPage.insertBefore($oldPage);\n      }\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      $newNavbarEl.insertBefore($oldNavbarEl);\n\n      if ($oldNavbarEl.length > 0) {\n        $newNavbarEl.insertBefore($oldNavbarEl);\n      } else {\n        if (!router.$navbarsEl.parents(document).length) {\n          router.$el.prepend(router.$navbarsEl);\n        }\n\n        $navbarsEl.append($newNavbarEl);\n      }\n    }\n\n    if (!newPageInDom) {\n      router.pageCallback('mounted', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n    } else if (options.route && options.route.route && options.route.route.keepAlive && !$newPage[0].f7PageMounted) {\n      $newPage[0].f7PageMounted = true;\n      router.pageCallback('mounted', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n    }\n  }\n\n  if (options.preload) {\n    // Insert Page\n    insertPage(); // Tab route\n\n    if (options.route.route.tab) {\n      router.tabLoad(options.route.route.tab, extend({}, options, {\n        history: false,\n        browserHistory: false,\n        preload: true\n      }));\n    }\n\n    if (isMaster) {\n      $newPage.removeClass('page-master-stacked').trigger('page:masterunstack');\n      router.emit('pageMasterUnstack', $newPage[0]);\n\n      if (dynamicNavbar) {\n        $(app.navbar.getElByPage($newPage)).removeClass('navbar-master-stacked');\n        router.emit('navbarMasterUnstack', app.navbar.getElByPage($newPage));\n      }\n    } // Page init and before init events\n\n\n    router.pageCallback('init', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n\n    if (initialPreload) {\n      router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'current', undefined, options);\n      router.pageCallback('afterIn', $newPage, $newNavbarEl, 'current', undefined, options);\n    }\n\n    var $previousPages = $newPage.prevAll('.page-previous:not(.stacked):not(.page-master)');\n\n    if ($previousPages.length > 0) {\n      $previousPages.each(function (pageToRemove) {\n        var $pageToRemove = $(pageToRemove);\n        var $navbarToRemove;\n\n        if (dynamicNavbar) {\n          // $navbarToRemove = $newNavbarEl.prevAll('.navbar-previous:not(.stacked)').eq(index);\n          $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n        }\n\n        if (router.params.stackPages && router.initialPages.indexOf(pageToRemove) >= 0) {\n          $pageToRemove.addClass('stacked');\n          $pageToRemove.trigger('page:stack');\n          router.emit('pageStack', $pageToRemove[0]);\n\n          if (dynamicNavbar) {\n            $navbarToRemove.addClass('stacked');\n          }\n        } else {\n          router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined);\n          router.removePage($pageToRemove);\n\n          if (dynamicNavbar && $navbarToRemove.length) {\n            router.removeNavbar($navbarToRemove);\n          }\n        }\n      });\n    }\n\n    router.allowPageChange = true;\n    return router;\n  } // History State\n\n\n  if (!(device.ie || device.edge || device.firefox && !device.ios)) {\n    if (router.params.browserHistory && options.browserHistory) {\n      if (options.replaceState) {\n        var browserHistoryRoot = router.params.browserHistoryRoot || '';\n        History.replace(view.id, {\n          url: options.route.url\n        }, browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n      } else if (backIndex) {\n        History.go(-backIndex);\n      } else {\n        History.back();\n      }\n    }\n  } // Update History\n\n\n  if (options.replaceState) {\n    router.history[router.history.length - 1] = options.route.url;\n  } else {\n    if (router.history.length === 1) {\n      router.history.unshift(router.url);\n    }\n\n    router.history.pop();\n  }\n\n  router.saveHistory(); // Current Page & Navbar\n\n  router.currentPageEl = $newPage[0];\n\n  if (dynamicNavbar && $newNavbarEl.length) {\n    router.currentNavbarEl = $newNavbarEl[0];\n  } else {\n    delete router.currentNavbarEl;\n  } // Current Route\n\n\n  router.currentRoute = options.route; // History State\n\n  if (device.ie || device.edge || device.firefox && !device.ios) {\n    if (router.params.browserHistory && options.browserHistory) {\n      if (options.replaceState) {\n        var _browserHistoryRoot = router.params.browserHistoryRoot || '';\n\n        History.replace(view.id, {\n          url: options.route.url\n        }, _browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n      } else if (backIndex) {\n        History.go(-backIndex);\n      } else {\n        History.back();\n      }\n    }\n  } // Insert Page\n\n\n  insertPage(); // Load Tab\n\n  if (options.route.route.tab) {\n    router.tabLoad(options.route.route.tab, extend({}, options, {\n      history: false,\n      browserHistory: false\n    }));\n  } // Check master detail\n\n\n  if (masterDetailEnabled && (currentIsMaster || masterPageRemoved)) {\n    view.checkMasterDetailBreakpoint(false);\n  } // Page init and before init events\n\n\n  router.pageCallback('init', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage); // Before animation callback\n\n  router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', 'next', options);\n  router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'previous', 'current', options); // Animation\n\n  function afterAnimation() {\n    // Set classes\n    router.setPagePosition($newPage, 'current', false);\n    router.setPagePosition($oldPage, 'next', true);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($newNavbarEl, 'current', false);\n      router.setNavbarPosition($oldNavbarEl, 'next', true);\n    } // After animation event\n\n\n    router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', 'next', options);\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, 'previous', 'current', options); // Remove Old Page\n\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'next', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n\n    router.allowPageChange = true;\n    router.emit('routeChanged', router.currentRoute, router.previousRoute, router); // Preload previous page\n\n    var preloadPreviousPage = router.params.preloadPreviousPage || router.params[app.theme + \"SwipeBack\"];\n\n    if (preloadPreviousPage && router.history[router.history.length - 2] && !isMaster) {\n      router.back(router.history[router.history.length - 2], {\n        preload: true\n      });\n    }\n\n    if (router.params.browserHistory) {\n      History.clearRouterQueue();\n    }\n  }\n\n  function setPositionClasses() {\n    router.setPagePosition($oldPage, 'current');\n    router.setPagePosition($newPage, 'previous', false);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($oldNavbarEl, 'current');\n      router.setNavbarPosition($newNavbarEl, 'previous', false);\n    }\n  }\n\n  if (options.animate && !(currentIsMaster && app.width >= router.params.masterDetailBreakpoint)) {\n    var transition = router.params.transition;\n\n    if ($oldPage[0] && $oldPage[0].f7PageTransition) {\n      transition = $oldPage[0].f7PageTransition;\n      delete $oldPage[0].f7PageTransition;\n    }\n\n    if (options.transition) transition = options.transition;\n\n    if (!transition && router.previousRoute && router.previousRoute.route) {\n      transition = router.previousRoute.route.transition;\n    }\n\n    if (!transition && router.previousRoute && router.previousRoute.route && router.previousRoute.route.options) {\n      transition = router.previousRoute.route.options.transition;\n    }\n\n    setPositionClasses();\n    router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'backward', transition, function () {\n      afterAnimation();\n    });\n  } else {\n    afterAnimation();\n  }\n\n  return router;\n}\n\nfunction loadBack(router, backParams, backOptions, ignorePageChange) {\n  if (!router.allowPageChange && !ignorePageChange) return router;\n  var params = backParams;\n  var options = backOptions;\n  var url = params.url,\n      content = params.content,\n      el = params.el,\n      pageName = params.pageName,\n      component = params.component,\n      componentUrl = params.componentUrl;\n\n  if (options.route.url && router.url === options.route.url && !(options.reloadCurrent || options.reloadPrevious) && !router.params.allowDuplicateUrls) {\n    return false;\n  }\n\n  if (!options.route && url) {\n    options.route = router.parseRouteUrl(url);\n  } // Component Callbacks\n\n\n  function resolve(pageEl, newOptions) {\n    return backward(router, pageEl, extend(options, newOptions));\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if (url || componentUrl || component) {\n    router.allowPageChange = false;\n  } // Proceed\n\n\n  if (content) {\n    backward(router, router.getPageEl(content), options);\n  } else if (el) {\n    // Load page from specified HTMLElement or by page name in pages container\n    backward(router, router.getPageEl(el), options);\n  } else if (pageName) {\n    // Load page by page name in pages container\n    backward(router, router.$el.children(\".page[data-name=\\\"\" + pageName + \"\\\"]\").eq(0), options);\n  } else if (component || componentUrl) {\n    // Load from component (F7/Vue/React/...)\n    try {\n      router.pageComponentLoader({\n        routerEl: router.el,\n        component: component,\n        componentUrl: componentUrl,\n        options: options,\n        resolve: resolve,\n        reject: reject\n      });\n    } catch (err) {\n      router.allowPageChange = true;\n      throw err;\n    }\n  } else if (url) {\n    // Load using XHR\n    if (router.xhrAbortController) {\n      router.xhrAbortController.abort();\n      router.xhrAbortController = false;\n    }\n\n    router.xhrRequest(url, options).then(function (pageContent) {\n      backward(router, router.getPageEl(pageContent), options);\n    }).catch(function () {\n      router.allowPageChange = true;\n    });\n  }\n\n  return router;\n}\n\nfunction back() {\n  var router = this;\n  var device = getDevice();\n  if (router.swipeBackActive) return router;\n  var navigateUrl;\n  var navigateOptions;\n  var route;\n\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    navigateOptions = (arguments.length <= 0 ? undefined : arguments[0]) || {};\n  } else {\n    navigateUrl = arguments.length <= 0 ? undefined : arguments[0];\n    navigateOptions = (arguments.length <= 1 ? undefined : arguments[1]) || {};\n  }\n\n  var _navigateOptions = navigateOptions,\n      name = _navigateOptions.name,\n      params = _navigateOptions.params,\n      query = _navigateOptions.query;\n\n  if (name) {\n    navigateUrl = router.generateUrl({\n      name: name,\n      params: params,\n      query: query\n    });\n\n    if (navigateUrl) {\n      return router.back(navigateUrl, extend({}, navigateOptions, {\n        name: null,\n        params: null,\n        query: null\n      }));\n    }\n\n    return router;\n  }\n\n  var app = router.app;\n  appRouterCheck(router, 'back');\n  var currentRouteIsModal = router.currentRoute.modal;\n  var modalType;\n\n  if (!currentRouteIsModal) {\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (router.currentRoute.route[modalLoadProp]) {\n        currentRouteIsModal = true;\n        modalType = modalLoadProp;\n      }\n    });\n  }\n\n  if (currentRouteIsModal && !navigateOptions.preload) {\n    var modalToClose = router.currentRoute.modal || router.currentRoute.route.modalInstance || app[modalType].get();\n    var previousUrl = router.history[router.history.length - 2];\n    var previousRoute; // check if previous route is modal too\n\n    if (modalToClose && modalToClose.$el) {\n      var prevOpenedModals = modalToClose.$el.prevAll('.modal-in');\n\n      if (prevOpenedModals.length && prevOpenedModals[0].f7Modal) {\n        var modalEl = prevOpenedModals[0]; // check if current router not inside of the modalEl\n\n        if (!router.$el.parents(modalEl).length) {\n          previousRoute = modalEl.f7Modal.route;\n        }\n      }\n    }\n\n    if (!previousRoute) {\n      previousRoute = router.findMatchingRoute(previousUrl);\n    }\n\n    if (!previousRoute && previousUrl) {\n      previousRoute = {\n        url: previousUrl,\n        path: previousUrl.split('?')[0],\n        query: parseUrlQuery(previousUrl),\n        route: {\n          path: previousUrl.split('?')[0],\n          url: previousUrl\n        }\n      };\n    }\n\n    if (!navigateUrl || navigateUrl.replace(/[# ]/g, '').trim().length === 0) {\n      if (!previousRoute || !modalToClose) {\n        return router;\n      }\n    }\n\n    var forceOtherUrl = navigateOptions.force && previousRoute && navigateUrl;\n\n    if (previousRoute && modalToClose) {\n      var isBrokenBrowserHistory = device.ie || device.edge || device.firefox && !device.ios;\n      var needHistoryBack = router.params.browserHistory && navigateOptions.browserHistory !== false;\n      var currentRouteWithoutBrowserHistory = router.currentRoute && router.currentRoute.route && router.currentRoute.route.options && router.currentRoute.route.options.browserHistory === false;\n\n      if (needHistoryBack && !isBrokenBrowserHistory && !currentRouteWithoutBrowserHistory) {\n        History.back();\n      }\n\n      router.currentRoute = previousRoute;\n      router.history.pop();\n      router.saveHistory();\n\n      if (needHistoryBack && isBrokenBrowserHistory && !currentRouteWithoutBrowserHistory) {\n        History.back();\n      }\n\n      router.modalRemove(modalToClose);\n\n      if (forceOtherUrl) {\n        router.navigate(navigateUrl, {\n          reloadCurrent: true\n        });\n      }\n    } else if (modalToClose) {\n      router.modalRemove(modalToClose);\n\n      if (navigateUrl) {\n        router.navigate(navigateUrl, {\n          reloadCurrent: true\n        });\n      }\n    }\n\n    return router;\n  }\n\n  var $previousPage = router.$el.children('.page-current').prevAll('.page-previous:not(.page-master)').eq(0);\n  var skipMaster;\n\n  if (router.params.masterDetailBreakpoint > 0) {\n    var classes = [];\n    router.$el.children('.page').each(function (pageEl) {\n      classes.push(pageEl.className);\n    });\n    var $previousMaster = router.$el.children('.page-current').prevAll('.page-master').eq(0);\n\n    if ($previousMaster.length) {\n      var expectedPreviousPageUrl = router.history[router.history.length - 2];\n      var expectedPreviousPageRoute = router.findMatchingRoute(expectedPreviousPageUrl);\n\n      if (expectedPreviousPageRoute && $previousMaster[0].f7Page && expectedPreviousPageRoute.route === $previousMaster[0].f7Page.route.route) {\n        $previousPage = $previousMaster;\n\n        if (!navigateOptions.preload) {\n          skipMaster = app.width >= router.params.masterDetailBreakpoint;\n        }\n      }\n    }\n  }\n\n  if (!navigateOptions.force && $previousPage.length && !skipMaster) {\n    if (router.params.browserHistory && $previousPage[0].f7Page && router.history[router.history.length - 2] !== $previousPage[0].f7Page.route.url) {\n      router.back(router.history[router.history.length - 2], extend(navigateOptions, {\n        force: true\n      }));\n      return router;\n    }\n\n    var previousPageRoute = $previousPage[0].f7Page.route;\n    processRouteQueue.call(router, previousPageRoute, router.currentRoute, function () {\n      loadBack(router, {\n        el: $previousPage\n      }, extend(navigateOptions, {\n        route: previousPageRoute\n      }));\n    }, function () {}, 'backward');\n    return router;\n  } // Navigate URL\n\n\n  if (navigateUrl === '#') {\n    navigateUrl = undefined;\n  }\n\n  if (navigateUrl && navigateUrl[0] !== '/' && navigateUrl.indexOf('#') !== 0) {\n    navigateUrl = ((router.path || '/') + navigateUrl).replace('//', '/');\n  }\n\n  if (!navigateUrl && router.history.length > 1) {\n    navigateUrl = router.history[router.history.length - 2];\n  }\n\n  if (skipMaster && !navigateOptions.force && router.history[router.history.length - 3]) {\n    return router.back(router.history[router.history.length - 3], extend({}, navigateOptions || {}, {\n      force: true,\n      animate: false\n    }));\n  }\n\n  if (skipMaster && !navigateOptions.force) {\n    return router;\n  } // Find route to load\n\n\n  route = router.findMatchingRoute(navigateUrl);\n\n  if (!route) {\n    if (navigateUrl) {\n      route = {\n        url: navigateUrl,\n        path: navigateUrl.split('?')[0],\n        query: parseUrlQuery(navigateUrl),\n        route: {\n          path: navigateUrl.split('?')[0],\n          url: navigateUrl\n        }\n      };\n    }\n  }\n\n  if (!route) {\n    return router;\n  }\n\n  if (route.route.redirect) {\n    return redirect.call(router, 'backward', route, navigateOptions);\n  }\n\n  var options = {};\n\n  if (route.route.options) {\n    extend(options, route.route.options, navigateOptions);\n  } else {\n    extend(options, navigateOptions);\n  }\n\n  options.route = route;\n  var backForceLoaded;\n\n  if (options.force && router.params.stackPages) {\n    router.$el.children('.page-previous.stacked').each(function (pageEl) {\n      if (pageEl.f7Page && pageEl.f7Page.route && pageEl.f7Page.route.url === route.url) {\n        backForceLoaded = true;\n        loadBack(router, {\n          el: pageEl\n        }, options);\n      }\n    });\n\n    if (backForceLoaded) {\n      return router;\n    }\n  }\n\n  function resolve() {\n    var routerLoaded = false;\n\n    if (route.route.keepAlive && route.route.keepAliveData) {\n      loadBack(router, {\n        el: route.route.keepAliveData.pageEl\n      }, options);\n      routerLoaded = true;\n    }\n\n    'url content component pageName el componentUrl'.split(' ').forEach(function (pageLoadProp) {\n      if (route.route[pageLoadProp] && !routerLoaded) {\n        var _loadBack;\n\n        routerLoaded = true;\n        loadBack(router, (_loadBack = {}, _loadBack[pageLoadProp] = route.route[pageLoadProp], _loadBack), options);\n      }\n    });\n    if (routerLoaded) return; // Async\n\n    function asyncResolve(resolveParams, resolveOptions) {\n      router.allowPageChange = false;\n      loadBack(router, resolveParams, extend(options, resolveOptions), true);\n    }\n\n    function asyncReject() {\n      router.allowPageChange = true;\n    }\n\n    if (route.route.async) {\n      router.allowPageChange = false;\n      route.route.async.call(router, {\n        router: router,\n        to: route,\n        from: router.currentRoute,\n        resolve: asyncResolve,\n        reject: asyncReject,\n        direction: 'backward',\n        app: app\n      });\n    }\n\n    if (route.route.asyncComponent) {\n      asyncComponent(router, route.route.asyncComponent, asyncResolve, asyncReject);\n    }\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n  }\n\n  if (options.preload) {\n    resolve();\n  } else {\n    processRouteQueue.call(router, route, router.currentRoute, function () {\n      if (route.route.modules) {\n        app.loadModules(Array.isArray(route.route.modules) ? route.route.modules : [route.route.modules]).then(function () {\n          resolve();\n        }).catch(function () {\n          reject();\n        });\n      } else {\n        resolve();\n      }\n    }, function () {\n      reject();\n    }, 'backward');\n  } // Return Router\n\n\n  return router;\n}\n\nexport { back };","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/modules/router/back.js"],"names":["getDocument","$","extend","parseUrlQuery","getDevice","History","redirect","processRouteQueue","appRouterCheck","asyncComponent","backward","router","el","backwardOptions","device","document","$el","app","view","options","animate","params","browserHistory","replaceState","masterDetailEnabled","masterDetailBreakpoint","isMaster","route","master","masterPageEl","masterPageRemoved","dynamicNavbar","$newPage","$oldPage","children","initialPreload","length","preload","currentIsMaster","hasClass","removeThemeElements","$navbarsEl","$newNavbarEl","$oldNavbarEl","f7Page","$navbarEl","find","allowPageChange","keepAlive","keepAliveData","pageEl","isDetail","isDetailRoot","$pagesInView","filter","pageInView","i","classList","contains","history","indexOf","url","masterRoute","path","addClass","removeClass","removeAttr","trigger","position","emit","role","root","detailRoot","backIndex","force","prev","slice","unshift","stackPages","prevAll","each","pageToRemove","$pageToRemove","$navbarToRemove","navbar","getElByPage","index","initialPages","pageCallback","undefined","removePage","removeNavbar","newPageInDom","parents","f7Component","insertPage","mount","componentEl","append","next","insertBefore","prepend","f7PageMounted","tab","tabLoad","$previousPages","ie","edge","firefox","ios","browserHistoryRoot","replace","id","browserHistorySeparator","go","back","pop","saveHistory","currentPageEl","currentNavbarEl","currentRoute","_browserHistoryRoot","checkMasterDetailBreakpoint","afterAnimation","setPagePosition","setNavbarPosition","previousRoute","preloadPreviousPage","theme","clearRouterQueue","setPositionClasses","width","transition","f7PageTransition","loadBack","backParams","backOptions","ignorePageChange","content","pageName","component","componentUrl","reloadCurrent","reloadPrevious","allowDuplicateUrls","parseRouteUrl","resolve","newOptions","reject","getPageEl","eq","pageComponentLoader","routerEl","err","xhrAbortController","abort","xhrRequest","then","pageContent","catch","swipeBackActive","navigateUrl","navigateOptions","arguments","_navigateOptions","name","query","generateUrl","currentRouteIsModal","modal","modalType","split","forEach","modalLoadProp","modalToClose","modalInstance","get","previousUrl","prevOpenedModals","f7Modal","modalEl","findMatchingRoute","trim","forceOtherUrl","isBrokenBrowserHistory","needHistoryBack","currentRouteWithoutBrowserHistory","modalRemove","navigate","$previousPage","skipMaster","classes","push","className","$previousMaster","expectedPreviousPageUrl","expectedPreviousPageRoute","previousPageRoute","call","backForceLoaded","routerLoaded","pageLoadProp","_loadBack","asyncResolve","resolveParams","resolveOptions","asyncReject","async","to","from","direction","modules","loadModules","Array","isArray"],"mappings":"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","sourcesContent":["import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { extend, parseUrlQuery } from '../../shared/utils';\nimport { getDevice } from '../../shared/get-device';\nimport History from '../../shared/history';\nimport redirect from './redirect';\nimport processRouteQueue from './process-route-queue';\nimport appRouterCheck from './app-router-check';\nimport asyncComponent from './async-component';\n\nfunction backward(router, el, backwardOptions) {\n  var device = getDevice();\n  var document = getDocument();\n  var $el = $(el);\n  var app = router.app;\n  var view = router.view;\n  var options = extend({\n    animate: router.params.animate,\n    browserHistory: true,\n    replaceState: false\n  }, backwardOptions);\n  var masterDetailEnabled = router.params.masterDetailBreakpoint > 0;\n  var isMaster = masterDetailEnabled && options.route && options.route.route && (options.route.route.master === true || typeof options.route.route.master === 'function' && options.route.route.master(app, router));\n  var masterPageEl;\n  var masterPageRemoved;\n  var dynamicNavbar = router.dynamicNavbar;\n  var $newPage = $el;\n  var $oldPage = router.$el.children('.page-current');\n  var initialPreload = $oldPage.length === 0 && options.preload;\n  var currentIsMaster = masterDetailEnabled && $oldPage.hasClass('page-master');\n\n  if ($newPage.length) {\n    // Remove theme elements\n    router.removeThemeElements($newPage);\n  }\n\n  var $navbarsEl;\n  var $newNavbarEl;\n  var $oldNavbarEl;\n\n  if (dynamicNavbar) {\n    $newNavbarEl = $newPage.children('.navbar');\n    $navbarsEl = router.$navbarsEl;\n\n    if ($newNavbarEl.length === 0 && $newPage[0] && $newPage[0].f7Page) {\n      // Try from pageData\n      $newNavbarEl = $newPage[0].f7Page.$navbarEl;\n    }\n\n    $oldNavbarEl = $navbarsEl.find('.navbar-current');\n  }\n\n  router.allowPageChange = false;\n\n  if ($newPage.length === 0 || $oldPage.length === 0 && !options.preload) {\n    router.allowPageChange = true;\n    return router;\n  } // Remove theme elements\n\n\n  router.removeThemeElements($newPage); // Save Keep Alive Cache\n\n  if (options.route && options.route.route && options.route.route.keepAlive && !options.route.route.keepAliveData) {\n    options.route.route.keepAliveData = {\n      pageEl: $el[0]\n    };\n  } // Pages In View\n\n\n  var isDetail;\n  var isDetailRoot;\n\n  if (masterDetailEnabled) {\n    var $pagesInView = router.$el.children('.page:not(.stacked)').filter(function (pageInView) {\n      return pageInView !== $newPage[0];\n    }); // Find Detail' master page\n\n    for (var i = 0; i < $pagesInView.length; i += 1) {\n      if (!masterPageEl && $pagesInView[i].classList.contains('page-master')) {\n        masterPageEl = $pagesInView[i];\n        continue; // eslint-disable-line\n      }\n    }\n\n    isDetail = !isMaster && masterPageEl && router.history.indexOf(options.route.url) > router.history.indexOf(masterPageEl.f7Page.route.url);\n\n    if (!isDetail && !isMaster && masterPageEl && masterPageEl.f7Page && options.route.route.masterRoute) {\n      isDetail = options.route.route.masterRoute.path === masterPageEl.f7Page.route.route.path;\n    }\n  }\n\n  if (isDetail && masterPageEl && masterPageEl.f7Page) {\n    isDetailRoot = router.history.indexOf(options.route.url) - router.history.indexOf(masterPageEl.f7Page.route.url) === 1;\n  } // New Page\n\n\n  $newPage.addClass(\"page-\" + (initialPreload ? 'current' : 'previous') + (isMaster ? ' page-master' : '') + (isDetail ? ' page-master-detail' : '') + (isDetailRoot ? ' page-master-detail-root' : '')).removeClass('stacked').removeAttr('aria-hidden').trigger('page:unstack').trigger('page:position', {\n    position: initialPreload ? 'current' : 'previous'\n  });\n  router.emit('pageUnstack', $newPage[0]);\n  router.emit('pagePosition', $newPage[0], initialPreload ? 'current' : 'previous');\n\n  if (isMaster || isDetail) {\n    $newPage.trigger('page:role', {\n      role: isMaster ? 'master' : 'detail',\n      root: !!isDetailRoot\n    });\n    router.emit('pageRole', $newPage[0], {\n      role: isMaster ? 'master' : 'detail',\n      detailRoot: !!isDetailRoot\n    });\n  }\n\n  if (dynamicNavbar && $newNavbarEl.length > 0) {\n    $newNavbarEl.addClass(\"navbar-\" + (initialPreload ? 'current' : 'previous') + (isMaster ? ' navbar-master' : '') + (isDetail ? ' navbar-master-detail' : '') + (isDetailRoot ? ' navbar-master-detail-root' : '')).removeClass('stacked').removeAttr('aria-hidden');\n    $newNavbarEl.trigger('navbar:position', {\n      position: initialPreload ? 'current' : 'previous'\n    });\n    router.emit('navbarPosition', $newNavbarEl[0], initialPreload ? 'current' : 'previous');\n\n    if (isMaster || isDetailRoot) {\n      router.emit('navbarRole', $newNavbarEl[0], {\n        role: isMaster ? 'master' : 'detail',\n        detailRoot: !!isDetailRoot\n      });\n    }\n  } // Remove previous page in case of \"forced\"\n\n\n  var backIndex;\n\n  if (options.force) {\n    if ($oldPage.prev('.page-previous:not(.stacked)').length > 0 || $oldPage.prev('.page-previous').length === 0) {\n      if (router.history.indexOf(options.route.url) >= 0) {\n        backIndex = router.history.length - router.history.indexOf(options.route.url) - 1;\n        router.history = router.history.slice(0, router.history.indexOf(options.route.url) + 2);\n        view.history = router.history;\n      } else if (router.history[[router.history.length - 2]]) {\n        router.history[router.history.length - 2] = options.route.url;\n      } else {\n        router.history.unshift(router.url);\n      }\n\n      if (backIndex && router.params.stackPages) {\n        $oldPage.prevAll('.page-previous').each(function (pageToRemove) {\n          var $pageToRemove = $(pageToRemove);\n          var $navbarToRemove;\n\n          if (dynamicNavbar) {\n            // $navbarToRemove = $oldNavbarEl.prevAll('.navbar-previous').eq(index);\n            $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n          }\n\n          if ($pageToRemove[0] !== $newPage[0] && $pageToRemove.index() > $newPage.index()) {\n            if (router.initialPages.indexOf($pageToRemove[0]) >= 0) {\n              $pageToRemove.addClass('stacked');\n              $pageToRemove.trigger('page:stack');\n              router.emit('pageStack', $pageToRemove[0]);\n\n              if (dynamicNavbar) {\n                $navbarToRemove.addClass('stacked');\n              }\n            } else {\n              router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined, options);\n\n              if ($pageToRemove[0] === masterPageEl) {\n                masterPageRemoved = true;\n              }\n\n              router.removePage($pageToRemove);\n\n              if (dynamicNavbar && $navbarToRemove.length > 0) {\n                router.removeNavbar($navbarToRemove);\n              }\n            }\n          }\n        });\n      } else {\n        var $pageToRemove = $oldPage.prev('.page-previous:not(.stacked)');\n        var $navbarToRemove;\n\n        if (dynamicNavbar) {\n          // $navbarToRemove = $oldNavbarEl.prev('.navbar-inner:not(.stacked)');\n          $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n        }\n\n        if (router.params.stackPages && router.initialPages.indexOf($pageToRemove[0]) >= 0) {\n          $pageToRemove.addClass('stacked');\n          $pageToRemove.trigger('page:stack');\n          router.emit('pageStack', $pageToRemove[0]);\n          $navbarToRemove.addClass('stacked');\n        } else if ($pageToRemove.length > 0) {\n          router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined, options);\n\n          if ($pageToRemove[0] === masterPageEl) {\n            masterPageRemoved = true;\n          }\n\n          router.removePage($pageToRemove);\n\n          if (dynamicNavbar && $navbarToRemove.length) {\n            router.removeNavbar($navbarToRemove);\n          }\n        }\n      }\n    }\n  } // Insert new page\n\n\n  var newPageInDom = $newPage.parents(document).length > 0;\n  var f7Component = $newPage[0].f7Component;\n\n  function insertPage() {\n    if (initialPreload) {\n      if (!newPageInDom && f7Component) {\n        f7Component.mount(function (componentEl) {\n          router.$el.append(componentEl);\n        });\n      } else {\n        router.$el.append($newPage);\n      }\n    }\n\n    if ($newPage.next($oldPage).length === 0) {\n      if (!newPageInDom && f7Component) {\n        f7Component.mount(function (componentEl) {\n          $(componentEl).insertBefore($oldPage);\n        });\n      } else {\n        $newPage.insertBefore($oldPage);\n      }\n    }\n\n    if (dynamicNavbar && $newNavbarEl.length) {\n      if ($newNavbarEl.find('.title-large').length) {\n        $newNavbarEl.addClass('navbar-large');\n      }\n\n      $newNavbarEl.insertBefore($oldNavbarEl);\n\n      if ($oldNavbarEl.length > 0) {\n        $newNavbarEl.insertBefore($oldNavbarEl);\n      } else {\n        if (!router.$navbarsEl.parents(document).length) {\n          router.$el.prepend(router.$navbarsEl);\n        }\n\n        $navbarsEl.append($newNavbarEl);\n      }\n    }\n\n    if (!newPageInDom) {\n      router.pageCallback('mounted', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n    } else if (options.route && options.route.route && options.route.route.keepAlive && !$newPage[0].f7PageMounted) {\n      $newPage[0].f7PageMounted = true;\n      router.pageCallback('mounted', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n    }\n  }\n\n  if (options.preload) {\n    // Insert Page\n    insertPage(); // Tab route\n\n    if (options.route.route.tab) {\n      router.tabLoad(options.route.route.tab, extend({}, options, {\n        history: false,\n        browserHistory: false,\n        preload: true\n      }));\n    }\n\n    if (isMaster) {\n      $newPage.removeClass('page-master-stacked').trigger('page:masterunstack');\n      router.emit('pageMasterUnstack', $newPage[0]);\n\n      if (dynamicNavbar) {\n        $(app.navbar.getElByPage($newPage)).removeClass('navbar-master-stacked');\n        router.emit('navbarMasterUnstack', app.navbar.getElByPage($newPage));\n      }\n    } // Page init and before init events\n\n\n    router.pageCallback('init', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage);\n\n    if (initialPreload) {\n      router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'current', undefined, options);\n      router.pageCallback('afterIn', $newPage, $newNavbarEl, 'current', undefined, options);\n    }\n\n    var $previousPages = $newPage.prevAll('.page-previous:not(.stacked):not(.page-master)');\n\n    if ($previousPages.length > 0) {\n      $previousPages.each(function (pageToRemove) {\n        var $pageToRemove = $(pageToRemove);\n        var $navbarToRemove;\n\n        if (dynamicNavbar) {\n          // $navbarToRemove = $newNavbarEl.prevAll('.navbar-previous:not(.stacked)').eq(index);\n          $navbarToRemove = $(app.navbar.getElByPage($pageToRemove));\n        }\n\n        if (router.params.stackPages && router.initialPages.indexOf(pageToRemove) >= 0) {\n          $pageToRemove.addClass('stacked');\n          $pageToRemove.trigger('page:stack');\n          router.emit('pageStack', $pageToRemove[0]);\n\n          if (dynamicNavbar) {\n            $navbarToRemove.addClass('stacked');\n          }\n        } else {\n          router.pageCallback('beforeRemove', $pageToRemove, $navbarToRemove, 'previous', undefined);\n          router.removePage($pageToRemove);\n\n          if (dynamicNavbar && $navbarToRemove.length) {\n            router.removeNavbar($navbarToRemove);\n          }\n        }\n      });\n    }\n\n    router.allowPageChange = true;\n    return router;\n  } // History State\n\n\n  if (!(device.ie || device.edge || device.firefox && !device.ios)) {\n    if (router.params.browserHistory && options.browserHistory) {\n      if (options.replaceState) {\n        var browserHistoryRoot = router.params.browserHistoryRoot || '';\n        History.replace(view.id, {\n          url: options.route.url\n        }, browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n      } else if (backIndex) {\n        History.go(-backIndex);\n      } else {\n        History.back();\n      }\n    }\n  } // Update History\n\n\n  if (options.replaceState) {\n    router.history[router.history.length - 1] = options.route.url;\n  } else {\n    if (router.history.length === 1) {\n      router.history.unshift(router.url);\n    }\n\n    router.history.pop();\n  }\n\n  router.saveHistory(); // Current Page & Navbar\n\n  router.currentPageEl = $newPage[0];\n\n  if (dynamicNavbar && $newNavbarEl.length) {\n    router.currentNavbarEl = $newNavbarEl[0];\n  } else {\n    delete router.currentNavbarEl;\n  } // Current Route\n\n\n  router.currentRoute = options.route; // History State\n\n  if (device.ie || device.edge || device.firefox && !device.ios) {\n    if (router.params.browserHistory && options.browserHistory) {\n      if (options.replaceState) {\n        var _browserHistoryRoot = router.params.browserHistoryRoot || '';\n\n        History.replace(view.id, {\n          url: options.route.url\n        }, _browserHistoryRoot + router.params.browserHistorySeparator + options.route.url);\n      } else if (backIndex) {\n        History.go(-backIndex);\n      } else {\n        History.back();\n      }\n    }\n  } // Insert Page\n\n\n  insertPage(); // Load Tab\n\n  if (options.route.route.tab) {\n    router.tabLoad(options.route.route.tab, extend({}, options, {\n      history: false,\n      browserHistory: false\n    }));\n  } // Check master detail\n\n\n  if (masterDetailEnabled && (currentIsMaster || masterPageRemoved)) {\n    view.checkMasterDetailBreakpoint(false);\n  } // Page init and before init events\n\n\n  router.pageCallback('init', $newPage, $newNavbarEl, 'previous', 'current', options, $oldPage); // Before animation callback\n\n  router.pageCallback('beforeOut', $oldPage, $oldNavbarEl, 'current', 'next', options);\n  router.pageCallback('beforeIn', $newPage, $newNavbarEl, 'previous', 'current', options); // Animation\n\n  function afterAnimation() {\n    // Set classes\n    router.setPagePosition($newPage, 'current', false);\n    router.setPagePosition($oldPage, 'next', true);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($newNavbarEl, 'current', false);\n      router.setNavbarPosition($oldNavbarEl, 'next', true);\n    } // After animation event\n\n\n    router.pageCallback('afterOut', $oldPage, $oldNavbarEl, 'current', 'next', options);\n    router.pageCallback('afterIn', $newPage, $newNavbarEl, 'previous', 'current', options); // Remove Old Page\n\n    if (router.params.stackPages && router.initialPages.indexOf($oldPage[0]) >= 0) {\n      $oldPage.addClass('stacked');\n      $oldPage.trigger('page:stack');\n      router.emit('pageStack', $oldPage[0]);\n\n      if (dynamicNavbar) {\n        $oldNavbarEl.addClass('stacked');\n      }\n    } else {\n      router.pageCallback('beforeRemove', $oldPage, $oldNavbarEl, 'next', undefined, options);\n      router.removePage($oldPage);\n\n      if (dynamicNavbar && $oldNavbarEl.length) {\n        router.removeNavbar($oldNavbarEl);\n      }\n    }\n\n    router.allowPageChange = true;\n    router.emit('routeChanged', router.currentRoute, router.previousRoute, router); // Preload previous page\n\n    var preloadPreviousPage = router.params.preloadPreviousPage || router.params[app.theme + \"SwipeBack\"];\n\n    if (preloadPreviousPage && router.history[router.history.length - 2] && !isMaster) {\n      router.back(router.history[router.history.length - 2], {\n        preload: true\n      });\n    }\n\n    if (router.params.browserHistory) {\n      History.clearRouterQueue();\n    }\n  }\n\n  function setPositionClasses() {\n    router.setPagePosition($oldPage, 'current');\n    router.setPagePosition($newPage, 'previous', false);\n\n    if (dynamicNavbar) {\n      router.setNavbarPosition($oldNavbarEl, 'current');\n      router.setNavbarPosition($newNavbarEl, 'previous', false);\n    }\n  }\n\n  if (options.animate && !(currentIsMaster && app.width >= router.params.masterDetailBreakpoint)) {\n    var transition = router.params.transition;\n\n    if ($oldPage[0] && $oldPage[0].f7PageTransition) {\n      transition = $oldPage[0].f7PageTransition;\n      delete $oldPage[0].f7PageTransition;\n    }\n\n    if (options.transition) transition = options.transition;\n\n    if (!transition && router.previousRoute && router.previousRoute.route) {\n      transition = router.previousRoute.route.transition;\n    }\n\n    if (!transition && router.previousRoute && router.previousRoute.route && router.previousRoute.route.options) {\n      transition = router.previousRoute.route.options.transition;\n    }\n\n    setPositionClasses();\n    router.animate($oldPage, $newPage, $oldNavbarEl, $newNavbarEl, 'backward', transition, function () {\n      afterAnimation();\n    });\n  } else {\n    afterAnimation();\n  }\n\n  return router;\n}\n\nfunction loadBack(router, backParams, backOptions, ignorePageChange) {\n  if (!router.allowPageChange && !ignorePageChange) return router;\n  var params = backParams;\n  var options = backOptions;\n  var url = params.url,\n      content = params.content,\n      el = params.el,\n      pageName = params.pageName,\n      component = params.component,\n      componentUrl = params.componentUrl;\n\n  if (options.route.url && router.url === options.route.url && !(options.reloadCurrent || options.reloadPrevious) && !router.params.allowDuplicateUrls) {\n    return false;\n  }\n\n  if (!options.route && url) {\n    options.route = router.parseRouteUrl(url);\n  } // Component Callbacks\n\n\n  function resolve(pageEl, newOptions) {\n    return backward(router, pageEl, extend(options, newOptions));\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n    return router;\n  }\n\n  if (url || componentUrl || component) {\n    router.allowPageChange = false;\n  } // Proceed\n\n\n  if (content) {\n    backward(router, router.getPageEl(content), options);\n  } else if (el) {\n    // Load page from specified HTMLElement or by page name in pages container\n    backward(router, router.getPageEl(el), options);\n  } else if (pageName) {\n    // Load page by page name in pages container\n    backward(router, router.$el.children(\".page[data-name=\\\"\" + pageName + \"\\\"]\").eq(0), options);\n  } else if (component || componentUrl) {\n    // Load from component (F7/Vue/React/...)\n    try {\n      router.pageComponentLoader({\n        routerEl: router.el,\n        component: component,\n        componentUrl: componentUrl,\n        options: options,\n        resolve: resolve,\n        reject: reject\n      });\n    } catch (err) {\n      router.allowPageChange = true;\n      throw err;\n    }\n  } else if (url) {\n    // Load using XHR\n    if (router.xhrAbortController) {\n      router.xhrAbortController.abort();\n      router.xhrAbortController = false;\n    }\n\n    router.xhrRequest(url, options).then(function (pageContent) {\n      backward(router, router.getPageEl(pageContent), options);\n    }).catch(function () {\n      router.allowPageChange = true;\n    });\n  }\n\n  return router;\n}\n\nfunction back() {\n  var router = this;\n  var device = getDevice();\n  if (router.swipeBackActive) return router;\n  var navigateUrl;\n  var navigateOptions;\n  var route;\n\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    navigateOptions = (arguments.length <= 0 ? undefined : arguments[0]) || {};\n  } else {\n    navigateUrl = arguments.length <= 0 ? undefined : arguments[0];\n    navigateOptions = (arguments.length <= 1 ? undefined : arguments[1]) || {};\n  }\n\n  var _navigateOptions = navigateOptions,\n      name = _navigateOptions.name,\n      params = _navigateOptions.params,\n      query = _navigateOptions.query;\n\n  if (name) {\n    navigateUrl = router.generateUrl({\n      name: name,\n      params: params,\n      query: query\n    });\n\n    if (navigateUrl) {\n      return router.back(navigateUrl, extend({}, navigateOptions, {\n        name: null,\n        params: null,\n        query: null\n      }));\n    }\n\n    return router;\n  }\n\n  var app = router.app;\n  appRouterCheck(router, 'back');\n  var currentRouteIsModal = router.currentRoute.modal;\n  var modalType;\n\n  if (!currentRouteIsModal) {\n    'popup popover sheet loginScreen actions customModal panel'.split(' ').forEach(function (modalLoadProp) {\n      if (router.currentRoute.route[modalLoadProp]) {\n        currentRouteIsModal = true;\n        modalType = modalLoadProp;\n      }\n    });\n  }\n\n  if (currentRouteIsModal && !navigateOptions.preload) {\n    var modalToClose = router.currentRoute.modal || router.currentRoute.route.modalInstance || app[modalType].get();\n    var previousUrl = router.history[router.history.length - 2];\n    var previousRoute; // check if previous route is modal too\n\n    if (modalToClose && modalToClose.$el) {\n      var prevOpenedModals = modalToClose.$el.prevAll('.modal-in');\n\n      if (prevOpenedModals.length && prevOpenedModals[0].f7Modal) {\n        var modalEl = prevOpenedModals[0]; // check if current router not inside of the modalEl\n\n        if (!router.$el.parents(modalEl).length) {\n          previousRoute = modalEl.f7Modal.route;\n        }\n      }\n    }\n\n    if (!previousRoute) {\n      previousRoute = router.findMatchingRoute(previousUrl);\n    }\n\n    if (!previousRoute && previousUrl) {\n      previousRoute = {\n        url: previousUrl,\n        path: previousUrl.split('?')[0],\n        query: parseUrlQuery(previousUrl),\n        route: {\n          path: previousUrl.split('?')[0],\n          url: previousUrl\n        }\n      };\n    }\n\n    if (!navigateUrl || navigateUrl.replace(/[# ]/g, '').trim().length === 0) {\n      if (!previousRoute || !modalToClose) {\n        return router;\n      }\n    }\n\n    var forceOtherUrl = navigateOptions.force && previousRoute && navigateUrl;\n\n    if (previousRoute && modalToClose) {\n      var isBrokenBrowserHistory = device.ie || device.edge || device.firefox && !device.ios;\n      var needHistoryBack = router.params.browserHistory && navigateOptions.browserHistory !== false;\n      var currentRouteWithoutBrowserHistory = router.currentRoute && router.currentRoute.route && router.currentRoute.route.options && router.currentRoute.route.options.browserHistory === false;\n\n      if (needHistoryBack && !isBrokenBrowserHistory && !currentRouteWithoutBrowserHistory) {\n        History.back();\n      }\n\n      router.currentRoute = previousRoute;\n      router.history.pop();\n      router.saveHistory();\n\n      if (needHistoryBack && isBrokenBrowserHistory && !currentRouteWithoutBrowserHistory) {\n        History.back();\n      }\n\n      router.modalRemove(modalToClose);\n\n      if (forceOtherUrl) {\n        router.navigate(navigateUrl, {\n          reloadCurrent: true\n        });\n      }\n    } else if (modalToClose) {\n      router.modalRemove(modalToClose);\n\n      if (navigateUrl) {\n        router.navigate(navigateUrl, {\n          reloadCurrent: true\n        });\n      }\n    }\n\n    return router;\n  }\n\n  var $previousPage = router.$el.children('.page-current').prevAll('.page-previous:not(.page-master)').eq(0);\n  var skipMaster;\n\n  if (router.params.masterDetailBreakpoint > 0) {\n    var classes = [];\n    router.$el.children('.page').each(function (pageEl) {\n      classes.push(pageEl.className);\n    });\n    var $previousMaster = router.$el.children('.page-current').prevAll('.page-master').eq(0);\n\n    if ($previousMaster.length) {\n      var expectedPreviousPageUrl = router.history[router.history.length - 2];\n      var expectedPreviousPageRoute = router.findMatchingRoute(expectedPreviousPageUrl);\n\n      if (expectedPreviousPageRoute && $previousMaster[0].f7Page && expectedPreviousPageRoute.route === $previousMaster[0].f7Page.route.route) {\n        $previousPage = $previousMaster;\n\n        if (!navigateOptions.preload) {\n          skipMaster = app.width >= router.params.masterDetailBreakpoint;\n        }\n      }\n    }\n  }\n\n  if (!navigateOptions.force && $previousPage.length && !skipMaster) {\n    if (router.params.browserHistory && $previousPage[0].f7Page && router.history[router.history.length - 2] !== $previousPage[0].f7Page.route.url) {\n      router.back(router.history[router.history.length - 2], extend(navigateOptions, {\n        force: true\n      }));\n      return router;\n    }\n\n    var previousPageRoute = $previousPage[0].f7Page.route;\n    processRouteQueue.call(router, previousPageRoute, router.currentRoute, function () {\n      loadBack(router, {\n        el: $previousPage\n      }, extend(navigateOptions, {\n        route: previousPageRoute\n      }));\n    }, function () {}, 'backward');\n    return router;\n  } // Navigate URL\n\n\n  if (navigateUrl === '#') {\n    navigateUrl = undefined;\n  }\n\n  if (navigateUrl && navigateUrl[0] !== '/' && navigateUrl.indexOf('#') !== 0) {\n    navigateUrl = ((router.path || '/') + navigateUrl).replace('//', '/');\n  }\n\n  if (!navigateUrl && router.history.length > 1) {\n    navigateUrl = router.history[router.history.length - 2];\n  }\n\n  if (skipMaster && !navigateOptions.force && router.history[router.history.length - 3]) {\n    return router.back(router.history[router.history.length - 3], extend({}, navigateOptions || {}, {\n      force: true,\n      animate: false\n    }));\n  }\n\n  if (skipMaster && !navigateOptions.force) {\n    return router;\n  } // Find route to load\n\n\n  route = router.findMatchingRoute(navigateUrl);\n\n  if (!route) {\n    if (navigateUrl) {\n      route = {\n        url: navigateUrl,\n        path: navigateUrl.split('?')[0],\n        query: parseUrlQuery(navigateUrl),\n        route: {\n          path: navigateUrl.split('?')[0],\n          url: navigateUrl\n        }\n      };\n    }\n  }\n\n  if (!route) {\n    return router;\n  }\n\n  if (route.route.redirect) {\n    return redirect.call(router, 'backward', route, navigateOptions);\n  }\n\n  var options = {};\n\n  if (route.route.options) {\n    extend(options, route.route.options, navigateOptions);\n  } else {\n    extend(options, navigateOptions);\n  }\n\n  options.route = route;\n  var backForceLoaded;\n\n  if (options.force && router.params.stackPages) {\n    router.$el.children('.page-previous.stacked').each(function (pageEl) {\n      if (pageEl.f7Page && pageEl.f7Page.route && pageEl.f7Page.route.url === route.url) {\n        backForceLoaded = true;\n        loadBack(router, {\n          el: pageEl\n        }, options);\n      }\n    });\n\n    if (backForceLoaded) {\n      return router;\n    }\n  }\n\n  function resolve() {\n    var routerLoaded = false;\n\n    if (route.route.keepAlive && route.route.keepAliveData) {\n      loadBack(router, {\n        el: route.route.keepAliveData.pageEl\n      }, options);\n      routerLoaded = true;\n    }\n\n    'url content component pageName el componentUrl'.split(' ').forEach(function (pageLoadProp) {\n      if (route.route[pageLoadProp] && !routerLoaded) {\n        var _loadBack;\n\n        routerLoaded = true;\n        loadBack(router, (_loadBack = {}, _loadBack[pageLoadProp] = route.route[pageLoadProp], _loadBack), options);\n      }\n    });\n    if (routerLoaded) return; // Async\n\n    function asyncResolve(resolveParams, resolveOptions) {\n      router.allowPageChange = false;\n      loadBack(router, resolveParams, extend(options, resolveOptions), true);\n    }\n\n    function asyncReject() {\n      router.allowPageChange = true;\n    }\n\n    if (route.route.async) {\n      router.allowPageChange = false;\n      route.route.async.call(router, {\n        router: router,\n        to: route,\n        from: router.currentRoute,\n        resolve: asyncResolve,\n        reject: asyncReject,\n        direction: 'backward',\n        app: app\n      });\n    }\n\n    if (route.route.asyncComponent) {\n      asyncComponent(router, route.route.asyncComponent, asyncResolve, asyncReject);\n    }\n  }\n\n  function reject() {\n    router.allowPageChange = true;\n  }\n\n  if (options.preload) {\n    resolve();\n  } else {\n    processRouteQueue.call(router, route, router.currentRoute, function () {\n      if (route.route.modules) {\n        app.loadModules(Array.isArray(route.route.modules) ? route.route.modules : [route.route.modules]).then(function () {\n          resolve();\n        }).catch(function () {\n          reject();\n        });\n      } else {\n        resolve();\n      }\n    }, function () {\n      reject();\n    }, 'backward');\n  } // Return Router\n\n\n  return router;\n}\n\nexport { back };"]},"metadata":{},"sourceType":"module"}