{"ast":null,"code":"import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { bindMethods } from '../../shared/utils';\nimport { getDevice } from '../../shared/get-device';\n\nvar isCapacitor = function isCapacitor() {\n  var window = getWindow();\n  return window.Capacitor && window.Capacitor.isNative && window.Capacitor.Plugins && window.Capacitor.Plugins.StatusBar;\n};\n\nvar Statusbar = {\n  hide: function hide() {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.hide();\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.hide();\n    }\n  },\n  show: function show() {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.show();\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.show();\n    }\n  },\n  onClick: function onClick() {\n    var app = this;\n    var pageContent;\n\n    if ($('.popup.modal-in').length > 0) {\n      // Check for opened popup\n      pageContent = $('.popup.modal-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.panel.panel-in').length > 0) {\n      // Check for opened panel\n      pageContent = $('.panel.panel-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views > .view.tab-active').length > 0) {\n      // View in tab bar app layout\n      pageContent = $('.views > .view.tab-active').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views').length > 0) {\n      pageContent = $('.views').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else {\n      pageContent = app.$el.children('.view').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    }\n\n    if (pageContent && pageContent.length > 0) {\n      // Check for tab\n      if (pageContent.hasClass('tab')) {\n        pageContent = pageContent.parent('.tabs').children('.page-content.tab-active');\n      }\n\n      if (pageContent.length > 0) pageContent.scrollTop(0, 300);\n    }\n  },\n  setTextColor: function setTextColor(color) {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      if (color === 'white') {\n        window.StatusBar.styleLightContent();\n      } else {\n        window.StatusBar.styleDefault();\n      }\n    }\n\n    if (isCapacitor()) {\n      if (color === 'white') {\n        window.Capacitor.Plugins.StatusBar.setStyle({\n          style: 'DARK'\n        });\n      } else {\n        window.Capacitor.Plugins.StatusBar.setStyle({\n          style: 'LIGHT'\n        });\n      }\n    }\n  },\n  setBackgroundColor: function setBackgroundColor(color) {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.backgroundColorByHexString(color);\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.setBackgroundColor({\n        color: color\n      });\n    }\n  },\n  isVisible: function isVisible() {\n    var window = getWindow();\n    var device = getDevice();\n    return new Promise(function (resolve) {\n      if (device.cordova && window.StatusBar) {\n        resolve(window.StatusBar.isVisible);\n      }\n\n      if (isCapacitor()) {\n        window.Capacitor.Plugins.StatusBar.getInfo().then(function (info) {\n          resolve(info.visible);\n        });\n      }\n\n      resolve(false);\n    });\n  },\n  overlaysWebView: function overlaysWebView(overlays) {\n    if (overlays === void 0) {\n      overlays = true;\n    }\n\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.overlaysWebView(overlays);\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.setOverlaysWebView({\n        overlay: overlays\n      });\n    }\n  },\n  init: function init() {\n    var app = this;\n    var window = getWindow();\n    var device = getDevice();\n    var params = app.params.statusbar;\n    if (!params.enabled) return;\n    var isCordova = device.cordova && window.StatusBar;\n    var isCap = isCapacitor();\n\n    if (isCordova || isCap) {\n      if (params.scrollTopOnClick) {\n        $(window).on('statusTap', Statusbar.onClick.bind(app));\n      }\n\n      if (device.ios) {\n        if (params.iosOverlaysWebView) {\n          Statusbar.overlaysWebView(true);\n        } else {\n          Statusbar.overlaysWebView(false);\n        }\n\n        if (params.iosTextColor === 'white') {\n          Statusbar.setTextColor('white');\n        } else {\n          Statusbar.setTextColor('black');\n        }\n      }\n\n      if (device.android) {\n        if (params.androidOverlaysWebView) {\n          Statusbar.overlaysWebView(true);\n        } else {\n          Statusbar.overlaysWebView(false);\n        }\n\n        if (params.androidTextColor === 'white') {\n          Statusbar.setTextColor('white');\n        } else {\n          Statusbar.setTextColor('black');\n        }\n      }\n    }\n\n    if (params.iosBackgroundColor && device.ios) {\n      Statusbar.setBackgroundColor(params.iosBackgroundColor);\n    }\n\n    if (params.androidBackgroundColor && device.android) {\n      Statusbar.setBackgroundColor(params.androidBackgroundColor);\n    }\n  }\n};\nexport default {\n  name: 'statusbar',\n  params: {\n    statusbar: {\n      enabled: true,\n      scrollTopOnClick: true,\n      iosOverlaysWebView: true,\n      iosTextColor: 'black',\n      iosBackgroundColor: null,\n      androidOverlaysWebView: false,\n      androidTextColor: 'black',\n      androidBackgroundColor: null\n    }\n  },\n  create: function create() {\n    var app = this;\n    bindMethods(app, {\n      statusbar: Statusbar\n    });\n  },\n  on: {\n    init: function init() {\n      var app = this;\n      Statusbar.init.call(app);\n    }\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/components/statusbar/statusbar.js"],"names":["getWindow","$","bindMethods","getDevice","isCapacitor","window","Capacitor","isNative","Plugins","StatusBar","Statusbar","hide","device","cordova","show","onClick","app","pageContent","length","find","$el","children","hasClass","parent","scrollTop","setTextColor","color","styleLightContent","styleDefault","setStyle","style","setBackgroundColor","backgroundColorByHexString","isVisible","Promise","resolve","getInfo","then","info","visible","overlaysWebView","overlays","setOverlaysWebView","overlay","init","params","statusbar","enabled","isCordova","isCap","scrollTopOnClick","on","bind","ios","iosOverlaysWebView","iosTextColor","android","androidOverlaysWebView","androidTextColor","iosBackgroundColor","androidBackgroundColor","name","create","call"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom7';\nimport { bindMethods } from '../../shared/utils';\nimport { getDevice } from '../../shared/get-device';\n\nvar isCapacitor = function isCapacitor() {\n  var window = getWindow();\n  return window.Capacitor && window.Capacitor.isNative && window.Capacitor.Plugins && window.Capacitor.Plugins.StatusBar;\n};\n\nvar Statusbar = {\n  hide: function hide() {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.hide();\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.hide();\n    }\n  },\n  show: function show() {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.show();\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.show();\n    }\n  },\n  onClick: function onClick() {\n    var app = this;\n    var pageContent;\n\n    if ($('.popup.modal-in').length > 0) {\n      // Check for opened popup\n      pageContent = $('.popup.modal-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.panel.panel-in').length > 0) {\n      // Check for opened panel\n      pageContent = $('.panel.panel-in').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views > .view.tab-active').length > 0) {\n      // View in tab bar app layout\n      pageContent = $('.views > .view.tab-active').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else if ($('.views').length > 0) {\n      pageContent = $('.views').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    } else {\n      pageContent = app.$el.children('.view').find('.page:not(.page-previous):not(.page-next):not(.cached)').find('.page-content');\n    }\n\n    if (pageContent && pageContent.length > 0) {\n      // Check for tab\n      if (pageContent.hasClass('tab')) {\n        pageContent = pageContent.parent('.tabs').children('.page-content.tab-active');\n      }\n\n      if (pageContent.length > 0) pageContent.scrollTop(0, 300);\n    }\n  },\n  setTextColor: function setTextColor(color) {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      if (color === 'white') {\n        window.StatusBar.styleLightContent();\n      } else {\n        window.StatusBar.styleDefault();\n      }\n    }\n\n    if (isCapacitor()) {\n      if (color === 'white') {\n        window.Capacitor.Plugins.StatusBar.setStyle({\n          style: 'DARK'\n        });\n      } else {\n        window.Capacitor.Plugins.StatusBar.setStyle({\n          style: 'LIGHT'\n        });\n      }\n    }\n  },\n  setBackgroundColor: function setBackgroundColor(color) {\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.backgroundColorByHexString(color);\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.setBackgroundColor({\n        color: color\n      });\n    }\n  },\n  isVisible: function isVisible() {\n    var window = getWindow();\n    var device = getDevice();\n    return new Promise(function (resolve) {\n      if (device.cordova && window.StatusBar) {\n        resolve(window.StatusBar.isVisible);\n      }\n\n      if (isCapacitor()) {\n        window.Capacitor.Plugins.StatusBar.getInfo().then(function (info) {\n          resolve(info.visible);\n        });\n      }\n\n      resolve(false);\n    });\n  },\n  overlaysWebView: function overlaysWebView(overlays) {\n    if (overlays === void 0) {\n      overlays = true;\n    }\n\n    var window = getWindow();\n    var device = getDevice();\n\n    if (device.cordova && window.StatusBar) {\n      window.StatusBar.overlaysWebView(overlays);\n    }\n\n    if (isCapacitor()) {\n      window.Capacitor.Plugins.StatusBar.setOverlaysWebView({\n        overlay: overlays\n      });\n    }\n  },\n  init: function init() {\n    var app = this;\n    var window = getWindow();\n    var device = getDevice();\n    var params = app.params.statusbar;\n    if (!params.enabled) return;\n    var isCordova = device.cordova && window.StatusBar;\n    var isCap = isCapacitor();\n\n    if (isCordova || isCap) {\n      if (params.scrollTopOnClick) {\n        $(window).on('statusTap', Statusbar.onClick.bind(app));\n      }\n\n      if (device.ios) {\n        if (params.iosOverlaysWebView) {\n          Statusbar.overlaysWebView(true);\n        } else {\n          Statusbar.overlaysWebView(false);\n        }\n\n        if (params.iosTextColor === 'white') {\n          Statusbar.setTextColor('white');\n        } else {\n          Statusbar.setTextColor('black');\n        }\n      }\n\n      if (device.android) {\n        if (params.androidOverlaysWebView) {\n          Statusbar.overlaysWebView(true);\n        } else {\n          Statusbar.overlaysWebView(false);\n        }\n\n        if (params.androidTextColor === 'white') {\n          Statusbar.setTextColor('white');\n        } else {\n          Statusbar.setTextColor('black');\n        }\n      }\n    }\n\n    if (params.iosBackgroundColor && device.ios) {\n      Statusbar.setBackgroundColor(params.iosBackgroundColor);\n    }\n\n    if (params.androidBackgroundColor && device.android) {\n      Statusbar.setBackgroundColor(params.androidBackgroundColor);\n    }\n  }\n};\nexport default {\n  name: 'statusbar',\n  params: {\n    statusbar: {\n      enabled: true,\n      scrollTopOnClick: true,\n      iosOverlaysWebView: true,\n      iosTextColor: 'black',\n      iosBackgroundColor: null,\n      androidOverlaysWebView: false,\n      androidTextColor: 'black',\n      androidBackgroundColor: null\n    }\n  },\n  create: function create() {\n    var app = this;\n    bindMethods(app, {\n      statusbar: Statusbar\n    });\n  },\n  on: {\n    init: function init() {\n      var app = this;\n      Statusbar.init.call(app);\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}