{"ast":null,"code":"import $ from '../../../shared/dom7';\nimport { getSupport } from '../../../shared/get-support';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx';\n\nfunction svgWheelCircles() {\n  var total = 256;\n  var circles = '';\n\n  for (var i = total; i > 0; i -= 1) {\n    var angle = i * Math.PI / (total / 2);\n    var hue = 360 / total * i;\n    circles += \"<circle cx=\\\"\" + (150 - Math.sin(angle) * 125) + \"\\\" cy=\\\"\" + (150 - Math.cos(angle) * 125) + \"\\\" r=\\\"25\\\" fill=\\\"hsl(\" + hue + \", 100%, 50%)\\\"></circle>\";\n  }\n\n  return circles;\n}\n\nexport default {\n  render: function render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-wheel\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-wheel\"\n    }, $jsx(\"svg\", {\n      viewBox: \"0 0 300 300\",\n      width: \"300\",\n      height: \"300\"\n    }, svgWheelCircles()), $jsx(\"div\", {\n      class: \"color-picker-wheel-handle\"\n    }), $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum\",\n      style: \"background-color: hsl(0, 100%, 50%)\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum-handle\"\n    }))));\n  },\n  init: function init(self) {\n    var app = self.app;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var touchCurrentX;\n    var touchCurrentY;\n    var wheelRect;\n    var wheelIsTouched;\n    var wheelHandleIsTouched;\n    var specterRect;\n    var specterIsTouched;\n    var specterHandleIsTouched;\n    var $el = self.$el;\n\n    function setHueFromWheelCoords(x, y) {\n      var wheelCenterX = wheelRect.left + wheelRect.width / 2;\n      var wheelCenterY = wheelRect.top + wheelRect.height / 2;\n      var angleRad = Math.atan2(y - wheelCenterY, x - wheelCenterX);\n      var angleDeg = angleRad * 180 / Math.PI + 90;\n      if (angleDeg < 0) angleDeg += 360;\n      angleDeg = 360 - angleDeg;\n      self.setValue({\n        hue: angleDeg\n      });\n    }\n\n    function setSBFromSpecterCoords(x, y) {\n      var s = (x - specterRect.left) / specterRect.width;\n      var b = (y - specterRect.top) / specterRect.height;\n      s = Math.max(0, Math.min(1, s));\n      b = 1 - Math.max(0, Math.min(1, b));\n      self.setValue({\n        hsb: [self.value.hue, s, b]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      var $targetEl = $(e.target);\n      wheelHandleIsTouched = $targetEl.closest('.color-picker-wheel-handle').length > 0;\n      wheelIsTouched = $targetEl.closest('circle').length > 0;\n      specterHandleIsTouched = $targetEl.closest('.color-picker-sb-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-sb-spectrum').length > 0;\n      }\n\n      if (wheelIsTouched) {\n        wheelRect = $el.find('.color-picker-wheel')[0].getBoundingClientRect();\n        setHueFromWheelCoords(touchStartX, touchStartY);\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        setSBFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').addClass('color-picker-sb-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(wheelIsTouched || wheelHandleIsTouched) && !(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (wheelHandleIsTouched) {\n          wheelRect = $el.find('.color-picker-wheel')[0].getBoundingClientRect();\n        }\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (wheelIsTouched || wheelHandleIsTouched) {\n        setHueFromWheelCoords(touchCurrentX, touchCurrentY);\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setSBFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').removeClass('color-picker-sb-spectrum-handle-pressed');\n      }\n\n      wheelIsTouched = false;\n      wheelHandleIsTouched = false;\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules.wheel.update(self);\n    }\n\n    var passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroyWheelEvents = function destroyWheelEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hsl = value.hsl,\n        hsb = value.hsb;\n    var specterWidth = self.$el.find('.color-picker-sb-spectrum')[0].offsetWidth;\n    var specterHeight = self.$el.find('.color-picker-sb-spectrum')[0].offsetHeight;\n    var wheelSize = self.$el.find('.color-picker-wheel')[0].offsetWidth;\n    var wheelHalfSize = wheelSize / 2;\n    var angleRad = value.hue * Math.PI / 180;\n    var handleSize = wheelSize / 6;\n    var handleHalfSize = handleSize / 2;\n    var tX = wheelHalfSize - Math.sin(angleRad) * (wheelHalfSize - handleHalfSize) - handleHalfSize;\n    var tY = wheelHalfSize - Math.cos(angleRad) * (wheelHalfSize - handleHalfSize) - handleHalfSize;\n    self.$el.find('.color-picker-wheel-handle').css('background-color', \"hsl(\" + hsl[0] + \", 100%, 50%)\").transform(\"translate(\" + tX + \"px, \" + tY + \"px)\");\n    self.$el.find('.color-picker-sb-spectrum').css('background-color', \"hsl(\" + hsl[0] + \", 100%, 50%)\");\n    self.$el.find('.color-picker-sb-spectrum-handle').css('background-color', \"hsl(\" + hsl[0] + \", \" + hsl[1] * 100 + \"%, \" + hsl[2] * 100 + \"%)\").transform(\"translate(\" + specterWidth * hsb[1] + \"px, \" + specterHeight * (1 - hsb[2]) + \"px)\");\n  },\n  destroy: function destroy(self) {\n    if (self.destroyWheelEvents) self.destroyWheelEvents();\n    delete self.destroyWheelEvents;\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashiApp/node_modules/framework7/esm/components/color-picker/modules/wheel.js"],"names":["$","getSupport","$jsx","svgWheelCircles","total","circles","i","angle","Math","PI","hue","sin","cos","render","class","viewBox","width","height","style","init","self","app","isTouched","isMoved","touchStartX","touchStartY","touchCurrentX","touchCurrentY","wheelRect","wheelIsTouched","wheelHandleIsTouched","specterRect","specterIsTouched","specterHandleIsTouched","$el","setHueFromWheelCoords","x","y","wheelCenterX","left","wheelCenterY","top","angleRad","atan2","angleDeg","setValue","setSBFromSpecterCoords","s","b","max","min","hsb","value","handleTouchStart","e","type","targetTouches","pageX","pageY","$targetEl","target","closest","length","find","getBoundingClientRect","addClass","handleTouchMove","preventDefault","handleTouchEnd","removeClass","handleResize","modules","wheel","update","passiveListener","touchEvents","start","passive","capture","on","destroyWheelEvents","off","hsl","specterWidth","offsetWidth","specterHeight","offsetHeight","wheelSize","wheelHalfSize","handleSize","handleHalfSize","tX","tY","css","transform","destroy"],"mappings":"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","sourcesContent":["import $ from '../../../shared/dom7';\nimport { getSupport } from '../../../shared/get-support';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx';\n\nfunction svgWheelCircles() {\n  var total = 256;\n  var circles = '';\n\n  for (var i = total; i > 0; i -= 1) {\n    var angle = i * Math.PI / (total / 2);\n    var hue = 360 / total * i;\n    circles += \"<circle cx=\\\"\" + (150 - Math.sin(angle) * 125) + \"\\\" cy=\\\"\" + (150 - Math.cos(angle) * 125) + \"\\\" r=\\\"25\\\" fill=\\\"hsl(\" + hue + \", 100%, 50%)\\\"></circle>\";\n  }\n\n  return circles;\n}\n\nexport default {\n  render: function render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-wheel\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-wheel\"\n    }, $jsx(\"svg\", {\n      viewBox: \"0 0 300 300\",\n      width: \"300\",\n      height: \"300\"\n    }, svgWheelCircles()), $jsx(\"div\", {\n      class: \"color-picker-wheel-handle\"\n    }), $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum\",\n      style: \"background-color: hsl(0, 100%, 50%)\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-sb-spectrum-handle\"\n    }))));\n  },\n  init: function init(self) {\n    var app = self.app;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var touchCurrentX;\n    var touchCurrentY;\n    var wheelRect;\n    var wheelIsTouched;\n    var wheelHandleIsTouched;\n    var specterRect;\n    var specterIsTouched;\n    var specterHandleIsTouched;\n    var $el = self.$el;\n\n    function setHueFromWheelCoords(x, y) {\n      var wheelCenterX = wheelRect.left + wheelRect.width / 2;\n      var wheelCenterY = wheelRect.top + wheelRect.height / 2;\n      var angleRad = Math.atan2(y - wheelCenterY, x - wheelCenterX);\n      var angleDeg = angleRad * 180 / Math.PI + 90;\n      if (angleDeg < 0) angleDeg += 360;\n      angleDeg = 360 - angleDeg;\n      self.setValue({\n        hue: angleDeg\n      });\n    }\n\n    function setSBFromSpecterCoords(x, y) {\n      var s = (x - specterRect.left) / specterRect.width;\n      var b = (y - specterRect.top) / specterRect.height;\n      s = Math.max(0, Math.min(1, s));\n      b = 1 - Math.max(0, Math.min(1, b));\n      self.setValue({\n        hsb: [self.value.hue, s, b]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      var $targetEl = $(e.target);\n      wheelHandleIsTouched = $targetEl.closest('.color-picker-wheel-handle').length > 0;\n      wheelIsTouched = $targetEl.closest('circle').length > 0;\n      specterHandleIsTouched = $targetEl.closest('.color-picker-sb-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-sb-spectrum').length > 0;\n      }\n\n      if (wheelIsTouched) {\n        wheelRect = $el.find('.color-picker-wheel')[0].getBoundingClientRect();\n        setHueFromWheelCoords(touchStartX, touchStartY);\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        setSBFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').addClass('color-picker-sb-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(wheelIsTouched || wheelHandleIsTouched) && !(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (wheelHandleIsTouched) {\n          wheelRect = $el.find('.color-picker-wheel')[0].getBoundingClientRect();\n        }\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-sb-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (wheelIsTouched || wheelHandleIsTouched) {\n        setHueFromWheelCoords(touchCurrentX, touchCurrentY);\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setSBFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-sb-spectrum-handle').removeClass('color-picker-sb-spectrum-handle-pressed');\n      }\n\n      wheelIsTouched = false;\n      wheelHandleIsTouched = false;\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules.wheel.update(self);\n    }\n\n    var passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroyWheelEvents = function destroyWheelEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hsl = value.hsl,\n        hsb = value.hsb;\n    var specterWidth = self.$el.find('.color-picker-sb-spectrum')[0].offsetWidth;\n    var specterHeight = self.$el.find('.color-picker-sb-spectrum')[0].offsetHeight;\n    var wheelSize = self.$el.find('.color-picker-wheel')[0].offsetWidth;\n    var wheelHalfSize = wheelSize / 2;\n    var angleRad = value.hue * Math.PI / 180;\n    var handleSize = wheelSize / 6;\n    var handleHalfSize = handleSize / 2;\n    var tX = wheelHalfSize - Math.sin(angleRad) * (wheelHalfSize - handleHalfSize) - handleHalfSize;\n    var tY = wheelHalfSize - Math.cos(angleRad) * (wheelHalfSize - handleHalfSize) - handleHalfSize;\n    self.$el.find('.color-picker-wheel-handle').css('background-color', \"hsl(\" + hsl[0] + \", 100%, 50%)\").transform(\"translate(\" + tX + \"px, \" + tY + \"px)\");\n    self.$el.find('.color-picker-sb-spectrum').css('background-color', \"hsl(\" + hsl[0] + \", 100%, 50%)\");\n    self.$el.find('.color-picker-sb-spectrum-handle').css('background-color', \"hsl(\" + hsl[0] + \", \" + hsl[1] * 100 + \"%, \" + hsl[2] * 100 + \"%)\").transform(\"translate(\" + specterWidth * hsb[1] + \"px, \" + specterHeight * (1 - hsb[2]) + \"px)\");\n  },\n  destroy: function destroy(self) {\n    if (self.destroyWheelEvents) self.destroyWheelEvents();\n    delete self.destroyWheelEvents;\n  }\n};"]},"metadata":{},"sourceType":"module"}