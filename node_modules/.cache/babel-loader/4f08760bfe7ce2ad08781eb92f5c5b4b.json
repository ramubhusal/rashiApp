{"ast":null,"code":"import $ from '../../../shared/dom7';\nimport { colorHsbToHsl } from '../../../shared/utils';\nimport { getSupport } from '../../../shared/get-support';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx';\nexport default {\n  render: function render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-hs-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hs-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hs-spectrum-handle\"\n    })));\n  },\n  init: function init(self) {\n    var app = self.app;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var touchCurrentX;\n    var touchCurrentY;\n    var specterRect;\n    var specterIsTouched;\n    var specterHandleIsTouched;\n    var $el = self.$el;\n\n    function setHSFromSpecterCoords(x, y) {\n      var h = (x - specterRect.left) / specterRect.width * 360;\n      var s = (y - specterRect.top) / specterRect.height;\n      h = Math.max(0, Math.min(360, h));\n      s = 1 - Math.max(0, Math.min(1, s));\n      self.setValue({\n        hsb: [h, s, self.value.hsb[2]]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      var $targetEl = $(e.target);\n      specterHandleIsTouched = $targetEl.closest('.color-picker-hs-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-hs-spectrum').length > 0;\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-hs-spectrum')[0].getBoundingClientRect();\n        setHSFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-hs-spectrum-handle').addClass('color-picker-hs-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-hs-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setHSFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-hs-spectrum-handle').removeClass('color-picker-hs-spectrum-handle-pressed');\n      }\n\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules['hs-spectrum'].update(self);\n    }\n\n    var passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroySpectrumEvents = function destroySpectrumEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hsb = value.hsb;\n    var specterWidth = self.$el.find('.color-picker-hs-spectrum')[0].offsetWidth;\n    var specterHeight = self.$el.find('.color-picker-hs-spectrum')[0].offsetHeight;\n    var hslBright = colorHsbToHsl(hsb[0], hsb[1], 1);\n    self.$el.find('.color-picker-hs-spectrum-handle').css('background-color', \"hsl(\" + hslBright[0] + \", \" + hslBright[1] * 100 + \"%, \" + hslBright[2] * 100 + \"%)\").transform(\"translate(\" + specterWidth * (hsb[0] / 360) + \"px, \" + specterHeight * (1 - hsb[1]) + \"px)\");\n  },\n  destroy: function destroy(self) {\n    if (self.destroySpectrumEvents) self.destroySpectrumEvents();\n    delete self.destroySpectrumEvents;\n  }\n};","map":{"version":3,"sources":["E:/Programming/React/rashi-app/node_modules/framework7/esm/components/color-picker/modules/hs-spectrum.js"],"names":["$","colorHsbToHsl","getSupport","$jsx","render","class","init","self","app","isTouched","isMoved","touchStartX","touchStartY","touchCurrentX","touchCurrentY","specterRect","specterIsTouched","specterHandleIsTouched","$el","setHSFromSpecterCoords","x","y","h","left","width","s","top","height","Math","max","min","setValue","hsb","value","handleTouchStart","e","type","targetTouches","pageX","pageY","$targetEl","target","closest","length","find","getBoundingClientRect","addClass","handleTouchMove","preventDefault","handleTouchEnd","removeClass","handleResize","modules","update","passiveListener","touchEvents","start","passive","capture","on","destroySpectrumEvents","off","specterWidth","offsetWidth","specterHeight","offsetHeight","hslBright","css","transform","destroy"],"mappings":"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","sourcesContent":["import $ from '../../../shared/dom7';\nimport { colorHsbToHsl } from '../../../shared/utils';\nimport { getSupport } from '../../../shared/get-support';\n/** @jsx $jsx */\n\nimport $jsx from '../../../shared/$jsx';\nexport default {\n  render: function render() {\n    return $jsx(\"div\", {\n      class: \"color-picker-module color-picker-module-hs-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hs-spectrum\"\n    }, $jsx(\"div\", {\n      class: \"color-picker-hs-spectrum-handle\"\n    })));\n  },\n  init: function init(self) {\n    var app = self.app;\n    var isTouched;\n    var isMoved;\n    var touchStartX;\n    var touchStartY;\n    var touchCurrentX;\n    var touchCurrentY;\n    var specterRect;\n    var specterIsTouched;\n    var specterHandleIsTouched;\n    var $el = self.$el;\n\n    function setHSFromSpecterCoords(x, y) {\n      var h = (x - specterRect.left) / specterRect.width * 360;\n      var s = (y - specterRect.top) / specterRect.height;\n      h = Math.max(0, Math.min(360, h));\n      s = 1 - Math.max(0, Math.min(1, s));\n      self.setValue({\n        hsb: [h, s, self.value.hsb[2]]\n      });\n    }\n\n    function handleTouchStart(e) {\n      if (isMoved || isTouched) return;\n      touchStartX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentX = touchStartX;\n      touchStartY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      touchCurrentY = touchStartY;\n      var $targetEl = $(e.target);\n      specterHandleIsTouched = $targetEl.closest('.color-picker-hs-spectrum-handle').length > 0;\n\n      if (!specterHandleIsTouched) {\n        specterIsTouched = $targetEl.closest('.color-picker-hs-spectrum').length > 0;\n      }\n\n      if (specterIsTouched) {\n        specterRect = $el.find('.color-picker-hs-spectrum')[0].getBoundingClientRect();\n        setHSFromSpecterCoords(touchStartX, touchStartY);\n      }\n\n      if (specterHandleIsTouched || specterIsTouched) {\n        $el.find('.color-picker-hs-spectrum-handle').addClass('color-picker-hs-spectrum-handle-pressed');\n      }\n    }\n\n    function handleTouchMove(e) {\n      if (!(specterIsTouched || specterHandleIsTouched)) return;\n      touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n\n      if (!isMoved) {\n        // First move\n        isMoved = true;\n\n        if (specterHandleIsTouched) {\n          specterRect = $el.find('.color-picker-hs-spectrum')[0].getBoundingClientRect();\n        }\n      }\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        setHSFromSpecterCoords(touchCurrentX, touchCurrentY);\n      }\n    }\n\n    function handleTouchEnd() {\n      isMoved = false;\n\n      if (specterIsTouched || specterHandleIsTouched) {\n        $el.find('.color-picker-hs-spectrum-handle').removeClass('color-picker-hs-spectrum-handle-pressed');\n      }\n\n      specterIsTouched = false;\n      specterHandleIsTouched = false;\n    }\n\n    function handleResize() {\n      self.modules['hs-spectrum'].update(self);\n    }\n\n    var passiveListener = app.touchEvents.start === 'touchstart' && getSupport().passiveListener ? {\n      passive: true,\n      capture: false\n    } : false;\n    self.$el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n    app.on('touchmove:active', handleTouchMove);\n    app.on('touchend:passive', handleTouchEnd);\n    app.on('resize', handleResize);\n\n    self.destroySpectrumEvents = function destroySpectrumEvents() {\n      self.$el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n      app.off('resize', handleResize);\n    };\n  },\n  update: function update(self) {\n    var value = self.value;\n    var hsb = value.hsb;\n    var specterWidth = self.$el.find('.color-picker-hs-spectrum')[0].offsetWidth;\n    var specterHeight = self.$el.find('.color-picker-hs-spectrum')[0].offsetHeight;\n    var hslBright = colorHsbToHsl(hsb[0], hsb[1], 1);\n    self.$el.find('.color-picker-hs-spectrum-handle').css('background-color', \"hsl(\" + hslBright[0] + \", \" + hslBright[1] * 100 + \"%, \" + hslBright[2] * 100 + \"%)\").transform(\"translate(\" + specterWidth * (hsb[0] / 360) + \"px, \" + specterHeight * (1 - hsb[1]) + \"px)\");\n  },\n  destroy: function destroy(self) {\n    if (self.destroySpectrumEvents) self.destroySpectrumEvents();\n    delete self.destroySpectrumEvents;\n  }\n};"]},"metadata":{},"sourceType":"module"}